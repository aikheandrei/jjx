{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/components/admin/ui/description-form.tsx"],"sourcesContent":["import { Button } from \"../../ui/button\";\r\nimport { Textarea } from \"../../ui/textarea\";\r\nimport { Check } from \"lucide-react\";\r\n\r\ninterface RatingFormProps {\r\n  toggleModal: () => void;\r\n  id?: number;\r\n  setTitle?: string | \"\";\r\n  setDescription?: string | \"\";\r\n  request: string;\r\n}\r\n\r\nexport const DescriptionForm: React.FC<\r\n  RatingFormProps & { onDescriptionUpdate?: () => void }\r\n> = ({\r\n  toggleModal,\r\n  id,\r\n  setTitle,\r\n  setDescription,\r\n  request,\r\n  onDescriptionUpdate,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"rounded-md bg-card px-4 pb-6 pt-3 font-geistsans\"\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <form\r\n        className=\"text-sm\"\r\n        onSubmit={async (e: React.FormEvent<HTMLFormElement>) => {\r\n          e.preventDefault();\r\n          const formData = new FormData(e.currentTarget);\r\n          const title = formData.get(\"title\") as string;\r\n          const description = formData.get(\"description\") as string;\r\n\r\n          if (request === \"POST\") {\r\n            const response = await fetch(`/api/descriptions`, {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                title,\r\n                description,\r\n              }),\r\n            });\r\n\r\n            if (response.ok) {\r\n              onDescriptionUpdate?.();\r\n            }\r\n          } else if (request === \"PUT\") {\r\n            await fetch(`/api/descriptions`, {\r\n              method: \"PUT\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                id,\r\n                title,\r\n                description,\r\n              }),\r\n            });\r\n          }\r\n\r\n          toggleModal?.();\r\n          onDescriptionUpdate?.();\r\n        }}\r\n      >\r\n        <Textarea\r\n          className=\"my-4\"\r\n          name=\"title\"\r\n          defaultValue={setTitle}\r\n          placeholder=\"write a title...\"\r\n        />\r\n        <Textarea\r\n          name=\"description\"\r\n          defaultValue={setDescription}\r\n          placeholder=\"write a story...\"\r\n        />\r\n        <Button\r\n          className=\"mt-3 flex w-full items-center gap-1 text-center\"\r\n          type=\"submit\"\r\n        >\r\n          Rate\r\n          <Check className=\"border-2 border-white/0\" />\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAUO,MAAM,kBAET,CAAC,EACH,WAAW,EACX,EAAE,EACF,QAAQ,EACR,cAAc,EACd,OAAO,EACP,mBAAmB,EACpB;IACC,qBACE,6LAAC;QACC,WAAU;QACV,SAAS,CAAC,IAAM,EAAE,eAAe;kBAEjC,cAAA,6LAAC;YACC,WAAU;YACV,UAAU,OAAO;gBACf,EAAE,cAAc;gBAChB,MAAM,WAAW,IAAI,SAAS,EAAE,aAAa;gBAC7C,MAAM,QAAQ,SAAS,GAAG,CAAC;gBAC3B,MAAM,cAAc,SAAS,GAAG,CAAC;gBAEjC,IAAI,YAAY,QAAQ;oBACtB,MAAM,WAAW,MAAM,MAAM,CAAC,iBAAiB,CAAC,EAAE;wBAChD,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM,KAAK,SAAS,CAAC;4BACnB;4BACA;wBACF;oBACF;oBAEA,IAAI,SAAS,EAAE,EAAE;wBACf;oBACF;gBACF,OAAO,IAAI,YAAY,OAAO;oBAC5B,MAAM,MAAM,CAAC,iBAAiB,CAAC,EAAE;wBAC/B,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM,KAAK,SAAS,CAAC;4BACnB;4BACA;4BACA;wBACF;oBACF;gBACF;gBAEA;gBACA;YACF;;8BAEA,6LAAC,gIAAA,CAAA,WAAQ;oBACP,WAAU;oBACV,MAAK;oBACL,cAAc;oBACd,aAAY;;;;;;8BAEd,6LAAC,gIAAA,CAAA,WAAQ;oBACP,MAAK;oBACL,cAAc;oBACd,aAAY;;;;;;8BAEd,6LAAC,8HAAA,CAAA,SAAM;oBACL,WAAU;oBACV,MAAK;;wBACN;sCAEC,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAK3B;KA7Ea"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/components/admin/description-modal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Button } from \"../ui/button\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { DescriptionForm } from \"./ui/description-form\";\r\nimport Backdrop from \"../ui/backdrop\";\r\n\r\ninterface RatingModalProps {\r\n  children: React.ReactNode;\r\n  id?: number;\r\n  title?: string;\r\n  description?: string;\r\n  edit?: boolean | false;\r\n  request: string;\r\n}\r\n\r\nexport const DescriptionModal: React.FC<\r\n  RatingModalProps & { onDescriptionUpdate?: () => void }\r\n> = ({ children, id, title, description, request, onDescriptionUpdate }) => {\r\n  const [modal, toggleModal] = useState(false);\r\n  const [isClient, setIsClient] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  if (!isClient) return <></>;\r\n\r\n  const ratingModal =\r\n    document.getElementById(\"description-modal\") || document.body;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => toggleModal(!modal)}\r\n        className=\"font-geistsans text-sm\"\r\n        variant={\"outline\"}\r\n      >\r\n        {children}\r\n      </Button>\r\n\r\n      {modal &&\r\n        createPortal(\r\n          <Backdrop onClick={() => toggleModal(!modal)}>\r\n            <DescriptionForm\r\n              id={id}\r\n              setTitle={title}\r\n              setDescription={description}\r\n              toggleModal={() => toggleModal(!modal)}\r\n              request={request}\r\n              onDescriptionUpdate={onDescriptionUpdate}\r\n            />\r\n          </Backdrop>,\r\n          ratingModal,\r\n        )}\r\n    </>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;;;AAPA;;;;;;AAkBO,MAAM,mBAET,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,mBAAmB,EAAE;;IACrE,MAAM,CAAC,OAAO,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACtC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,YAAY;QACd;qCAAG,EAAE;IAEL,IAAI,CAAC,UAAU,qBAAO;IAEtB,MAAM,cACJ,SAAS,cAAc,CAAC,wBAAwB,SAAS,IAAI;IAE/D,qBACE;;0BACE,6LAAC,8HAAA,CAAA,SAAM;gBACL,SAAS,IAAM,YAAY,CAAC;gBAC5B,WAAU;gBACV,SAAS;0BAER;;;;;;YAGF,uBACC,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,gBACT,6LAAC,gIAAA,CAAA,UAAQ;gBAAC,SAAS,IAAM,YAAY,CAAC;0BACpC,cAAA,6LAAC,oJAAA,CAAA,kBAAe;oBACd,IAAI;oBACJ,UAAU;oBACV,gBAAgB;oBAChB,aAAa,IAAM,YAAY,CAAC;oBAChC,SAAS;oBACT,qBAAqB;;;;;;;;;;sBAGzB;;;AAIV;GAzCa;KAAA"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/components/ui/description.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { DescriptionProps } from \"@/types/props\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"./button\";\r\nimport { DescriptionModal } from \"../admin/description-modal\";\r\n\r\nconst Description: React.FC<{ isAdmin?: boolean; isRoot?: boolean }> = ({\r\n  isAdmin = false,\r\n  isRoot = false,\r\n}) => {\r\n  const [descriptionsData, setDescriptionsData] = useState<DescriptionProps[]>(\r\n    [],\r\n  );\r\n\r\n  const fetchDescriptions = async () => {\r\n    const descriptions: DescriptionProps[] = await fetch(\r\n      `/api/descriptions`,\r\n    ).then((res) => res.json());\r\n    descriptions ? setDescriptionsData(descriptions) : [];\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDescriptions();\r\n  }, []);\r\n\r\n  const deleteDescription = async (id: number) => {\r\n    await fetch(`/api/descriptions`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n      }),\r\n    });\r\n    fetchDescriptions();\r\n  };\r\n\r\n  const handleRefreshDescriptions = () => {\r\n    fetchDescriptions();\r\n    console.log(\"fetch description\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isAdmin && (\r\n        <DescriptionModal\r\n          onDescriptionUpdate={handleRefreshDescriptions}\r\n          request=\"POST\"\r\n        >\r\n          Make New Story\r\n        </DescriptionModal>\r\n      )}\r\n      {isRoot ? (\r\n        <>\r\n          {descriptionsData.map(\r\n            ({ id, title, description, createdAt, updatedAt }, index) => (\r\n              <div key={index}>\r\n                <h1 className=\"font-newyear text-5xl tracking-widest drop-shadow-[0_5px_10px_rgba(0,0,0,0.80)]\">\r\n                  {title}\r\n                </h1>\r\n                <div className=\"mb-8 w-fit\">\r\n                  <p className=\"mt-2 text-center font-halimount text-2xl tracking-[.05rem] drop-shadow-[0_5px_10px_rgba(0,0,0,0.50)]\">\r\n                    {description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ),\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {descriptionsData.map(\r\n            ({ id, title, description, createdAt, updatedAt }, index) => (\r\n              <div\r\n                className=\"border border-t-2 px-8 py-4 font-geistsans text-sm\"\r\n                key={index}\r\n              >\r\n                <h1 className=\"mb-1 font-semibold\">{title}</h1>\r\n                <p className=\"mb-2\">{description}</p>\r\n                {isAdmin && (\r\n                  <div className=\"space-x-2 font-geistsans\">\r\n                    <DescriptionModal\r\n                      request=\"PUT\"\r\n                      onDescriptionUpdate={handleRefreshDescriptions}\r\n                      id={id}\r\n                      title={title}\r\n                      description={description}\r\n                    >\r\n                      Edit\r\n                    </DescriptionModal>\r\n                    <Button onClick={() => deleteDescription(id)}>\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ),\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Description };\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;;;AALA;;;;AAOA,MAAM,cAAiE,CAAC,EACtE,UAAU,KAAK,EACf,SAAS,KAAK,EACf;;IACC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACrD,EAAE;IAGJ,MAAM,oBAAoB;QACxB,MAAM,eAAmC,MAAM,MAC7C,CAAC,iBAAiB,CAAC,EACnB,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;QACxB,eAAe,oBAAoB,gBAAgB,EAAE;IACvD;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG,EAAE;IAEL,MAAM,oBAAoB,OAAO;QAC/B,MAAM,MAAM,CAAC,iBAAiB,CAAC,EAAE;YAC/B,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB;YACF;QACF;QACA;IACF;IAEA,MAAM,4BAA4B;QAChC;QACA,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE;;YACG,yBACC,6LAAC,+IAAA,CAAA,mBAAgB;gBACf,qBAAqB;gBACrB,SAAQ;0BACT;;;;;;YAIF,uBACC;0BACG,iBAAiB,GAAG,CACnB,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,sBACjD,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CACX;;;;;;0CAEH,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAE,WAAU;8CACV;;;;;;;;;;;;uBANG;;;;;8CAchB;0BACG,iBAAiB,GAAG,CACnB,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,sBACjD,6LAAC;wBACC,WAAU;;0CAGV,6LAAC;gCAAG,WAAU;0CAAsB;;;;;;0CACpC,6LAAC;gCAAE,WAAU;0CAAQ;;;;;;4BACpB,yBACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,+IAAA,CAAA,mBAAgB;wCACf,SAAQ;wCACR,qBAAqB;wCACrB,IAAI;wCACJ,OAAO;wCACP,aAAa;kDACd;;;;;;kDAGD,6LAAC,8HAAA,CAAA,SAAM;wCAAC,SAAS,IAAM,kBAAkB;kDAAK;;;;;;;;;;;;;uBAf7C;;;;;;;;AA2BrB;GAjGM;KAAA"}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/components/ui/user-review.tsx"],"sourcesContent":["\"use client\";\r\nimport { ReviewProps } from \"@/types/props\";\r\nimport { StarRating } from \"../ui/star-rating\";\r\nimport { Button } from \"./button\";\r\nimport { useState } from \"react\";\r\n\r\nconst UserReview: React.FC<\r\n  ReviewProps & { isRoot?: boolean; onTestimonialToggle?: () => void }\r\n> = ({\r\n  id,\r\n  review,\r\n  rating,\r\n  testimonial,\r\n  img,\r\n  userName,\r\n  userEmail,\r\n  isAdmin,\r\n  isRoot,\r\n  onTestimonialToggle,\r\n}) => {\r\n  const [isTestimonial, setIsTestimonial] = useState(testimonial);\r\n\r\n  const setTestimonial = async (newTestimonialStatus: boolean, id: number) => {\r\n    const response = await fetch(`/api/reviews`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        testimonial: newTestimonialStatus,\r\n        id,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setIsTestimonial(newTestimonialStatus);\r\n\r\n      if (onTestimonialToggle) {\r\n        onTestimonialToggle();\r\n      }\r\n    } else {\r\n      console.error(\"Failed to update testimonial status\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isRoot ? (\r\n        <div className=\"flex gap-2 rounded-lg border-[2.5px] bg-white px-6 py-4 text-black drop-shadow-[0_5px_10px_rgba(0,0,0,0.50)]\">\r\n          <img\r\n            className=\"size-12 rounded-full border-[1px]\"\r\n            src={img}\r\n            alt=\"User Profile\"\r\n          />\r\n          <div className=\"mt-[.05rem]\">\r\n            <span className=\"font-newyear text-lg font-semibold tracking-wide\">\r\n              {userName}{\" \"}\r\n            </span>\r\n            <span className=\"font-halimount text-xl tracking-wide opacity-60\">\r\n              {userEmail}\r\n            </span>\r\n            <div className=\"-ml-[.2rem] mt-[.15rem] flex flex-row gap-[0.03rem] text-yellow-400\">\r\n              <StarRating rating={rating ?? 0} size={20} />\r\n            </div>\r\n            <p className=\"font-halimount mb-[1rem] mt-[.4rem] text-xl leading-5 tracking-wide\">\r\n              {review}\r\n            </p>\r\n            {isAdmin && (\r\n              <>\r\n                {isTestimonial ? (\r\n                  <p className=\"mb-[.4rem] mt-[.1rem] leading-5\">true</p>\r\n                ) : (\r\n                  <p className=\"mb-[.4rem] mt-[.1rem] leading-5\">false</p>\r\n                )}\r\n                {id !== undefined && (\r\n                  <Button onClick={() => setTestimonial(!isTestimonial, id)}>\r\n                    Testimonial\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex gap-2 border-b-2 px-8 py-4\">\r\n          <img\r\n            className=\"size-12 rounded-full border-[3px]\"\r\n            src={img}\r\n            alt=\"User Profile\"\r\n          />\r\n          <div className=\"mt-[.05rem] font-geistsans text-sm\">\r\n            <a className=\"flex gap-2\">\r\n              <span className=\"font-semibold\">{userName}</span>\r\n              <span className=\"text-neutral-500\">{userEmail}</span>\r\n            </a>\r\n            <div className=\"-ml-[.2rem] mt-[.15rem] flex flex-row gap-[0.03rem] text-yellow-400\">\r\n              <StarRating rating={rating ?? 0} size={18} />\r\n            </div>\r\n            <p className=\"mb-[.5rem] mt-[.1rem] leading-5\">{review}</p>\r\n            {isAdmin && (\r\n              <>\r\n                {id !== undefined && (\r\n                  <Button\r\n                    className=\"ml-auto\"\r\n                    onClick={() => setTestimonial(!isTestimonial, id)}\r\n                  >\r\n                    Toggle Testimonial\r\n                  </Button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { UserReview };\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,aAEF,CAAC,EACH,EAAE,EACF,MAAM,EACN,MAAM,EACN,WAAW,EACX,GAAG,EACH,QAAQ,EACR,SAAS,EACT,OAAO,EACP,MAAM,EACN,mBAAmB,EACpB;;IACC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,iBAAiB,OAAO,sBAA+B;QAC3D,MAAM,WAAW,MAAM,MAAM,CAAC,YAAY,CAAC,EAAE;YAC3C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,aAAa;gBACb;YACF;QACF;QAEA,IAAI,SAAS,EAAE,EAAE;YACf,iBAAiB;YAEjB,IAAI,qBAAqB;gBACvB;YACF;QACF,OAAO;YACL,QAAQ,KAAK,CAAC;QAChB;IACF;IAEA,qBACE;kBACG,uBACC,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBACC,WAAU;oBACV,KAAK;oBACL,KAAI;;;;;;8BAEN,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAK,WAAU;;gCACb;gCAAU;;;;;;;sCAEb,6LAAC;4BAAK,WAAU;sCACb;;;;;;sCAEH,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,sIAAA,CAAA,aAAU;gCAAC,QAAQ,UAAU;gCAAG,MAAM;;;;;;;;;;;sCAEzC,6LAAC;4BAAE,WAAU;sCACV;;;;;;wBAEF,yBACC;;gCACG,8BACC,6LAAC;oCAAE,WAAU;8CAAkC;;;;;yDAE/C,6LAAC;oCAAE,WAAU;8CAAkC;;;;;;gCAEhD,OAAO,2BACN,6LAAC,8HAAA,CAAA,SAAM;oCAAC,SAAS,IAAM,eAAe,CAAC,eAAe;8CAAK;;;;;;;;;;;;;;;;;;;iCASrE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBACC,WAAU;oBACV,KAAK;oBACL,KAAI;;;;;;8BAEN,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;;8CACX,6LAAC;oCAAK,WAAU;8CAAiB;;;;;;8CACjC,6LAAC;oCAAK,WAAU;8CAAoB;;;;;;;;;;;;sCAEtC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,sIAAA,CAAA,aAAU;gCAAC,QAAQ,UAAU;gCAAG,MAAM;;;;;;;;;;;sCAEzC,6LAAC;4BAAE,WAAU;sCAAmC;;;;;;wBAC/C,yBACC;sCACG,OAAO,2BACN,6LAAC,8HAAA,CAAA,SAAM;gCACL,WAAU;gCACV,SAAS,IAAM,eAAe,CAAC,eAAe;0CAC/C;;;;;;;;;;;;;;;;;;;;AAWnB;GA9GM;KAAA"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/app/%28main%29/admin-dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Description } from \"@/components/ui/description\";\r\nimport { UserReview } from \"@/components/ui/user-review\";\r\nimport { ReviewProps, UserProps } from \"@/types/props\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const runtime = \"edge\";\r\n\r\nconst AdminDashboardPage = () => {\r\n  const [user, setUser] = useState<UserProps | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [reviewsData, setReviewsData] = useState<ReviewProps[]>([]);\r\n  const [usersData, setUsersData] = useState<UserProps[]>([]);\r\n\r\n  const fetchReviews = async () => {\r\n    const reviews = await fetch(\r\n      `${process.env.NEXT_PUBLIC_WEBSITE_URL}/api/reviews`,\r\n    ).then((res) => res.json());\r\n    reviews ? setReviewsData(reviews) : [];\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    const users = await fetch(\r\n      `${process.env.NEXT_PUBLIC_WEBSITE_URL}/api/users`,\r\n    ).then((res) => res.json());\r\n    users ? setUsersData(users) : [];\r\n  };\r\n\r\n  const checkUserSignIn = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.NEXT_PUBLIC_WEBSITE_URL}/api/auth`,\r\n      ).then((res) => res.json());\r\n      if (res) {\r\n        setUser(res.user);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch user admin status\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkUserSignIn();\r\n    fetchReviews();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleRefreshReviews = () => {\r\n    fetchReviews();\r\n    fetchUsers();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <section className=\"grid h-[100svh] items-center justify-center font-geistmono\">\r\n        <p>loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {user?.admin ? (\r\n        <>\r\n          <section className=\"grid h-[100svh] items-center justify-center\">\r\n            <div className=\"mx-auto w-[40rem] border-x-2 pt-14\">\r\n              <h2 className=\"w-full border border-b-2 py-6 text-center font-geistmono text-lg font-extrabold\">\r\n                Story\r\n              </h2>\r\n              <Description isAdmin={true} />\r\n              <h2 className=\"w-full border border-b-2 py-6 text-center font-geistmono text-lg font-extrabold\">\r\n                Testimonials\r\n              </h2>\r\n              {reviewsData\r\n                .filter(({ testimonial }) => testimonial)\r\n                .map(({ id, userId, review, rating, testimonial }) => {\r\n                  const user = usersData.find((user) => user.id === userId);\r\n\r\n                  return (\r\n                    <UserReview\r\n                      key={id}\r\n                      id={id}\r\n                      img={user?.image}\r\n                      userName={user?.name}\r\n                      userEmail={user?.email}\r\n                      review={review}\r\n                      rating={rating}\r\n                      testimonial={testimonial}\r\n                      isAdmin={true}\r\n                      onTestimonialToggle={handleRefreshReviews}\r\n                    />\r\n                  );\r\n                })}\r\n\r\n              <h2 className=\"w-full border border-b-2 py-6 text-center font-geistmono text-lg font-extrabold\">\r\n                Reviews\r\n              </h2>\r\n              {reviewsData\r\n                .filter(({ testimonial }) => !testimonial)\r\n                .map(({ id, userId, review, rating, testimonial }) => {\r\n                  const user = usersData.find((user) => user.id === userId);\r\n\r\n                  return (\r\n                    <UserReview\r\n                      key={id}\r\n                      id={id}\r\n                      img={user?.image}\r\n                      userName={user?.name}\r\n                      userEmail={user?.email}\r\n                      review={review}\r\n                      rating={rating}\r\n                      testimonial={testimonial}\r\n                      isAdmin={true}\r\n                      onTestimonialToggle={handleRefreshReviews}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n          </section>\r\n          <div id=\"description-modal\"></div>\r\n        </>\r\n      ) : (\r\n        <section className=\"grid h-[100svh] items-center justify-center font-geistmono\">\r\n          <p className=\"text-sm\">You're not an admin</p>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}