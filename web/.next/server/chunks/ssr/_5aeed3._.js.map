{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/components/ui/user-review.tsx"],"sourcesContent":["\"use client\";\r\nimport { ReviewProps } from \"@/types/props\";\r\nimport { StarRating } from \"../ui/star-rating\";\r\nimport { Button } from \"./button\";\r\nimport { useState } from \"react\";\r\n\r\nconst UserReview: React.FC<\r\n  ReviewProps & { onTestimonialToggle?: () => void }\r\n> = ({\r\n  id,\r\n  review,\r\n  rating,\r\n  testimonial,\r\n  img,\r\n  userName,\r\n  userEmail,\r\n  isAdmin,\r\n  onTestimonialToggle,\r\n}) => {\r\n  const [isTestimonial, setIsTestimonial] = useState(testimonial);\r\n\r\n  const setTestimonial = async (newTestimonialStatus: boolean, id: number) => {\r\n    const res = await fetch(`/api/reviews`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        testimonial: newTestimonialStatus,\r\n        id,\r\n      }),\r\n    });\r\n\r\n    res && setIsTestimonial(newTestimonialStatus);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-2 border-b-2 px-8 py-4\">\r\n      <img\r\n        className=\"size-12 rounded-full border-[3px]\"\r\n        src={img}\r\n        alt=\"User Profile\"\r\n      />\r\n      <div className=\"mt-[.05rem] font-geistsans text-sm\">\r\n        <a className=\"flex gap-2\">\r\n          <span className=\"font-semibold\">{userName}</span>\r\n          <span className=\"text-neutral-500\">{userEmail}</span>\r\n        </a>\r\n        <div className=\"-ml-[.2rem] mt-[.15rem] flex flex-row gap-[0.03rem] text-yellow-400\">\r\n          <StarRating rating={rating ?? 0} size={18} />\r\n        </div>\r\n        <p className=\"mb-[1rem] mt-[.1rem] leading-5\">\r\n          {id} {review}\r\n        </p>\r\n        {isAdmin && (\r\n          <>\r\n            {isTestimonial ? (\r\n              <p className=\"mb-[.4rem] mt-[.1rem] leading-5\">true</p>\r\n            ) : (\r\n              <p className=\"mb-[.4rem] mt-[.1rem] leading-5\">false</p>\r\n            )}\r\n            {id !== undefined && (\r\n              <Button onClick={() => setTestimonial(!isTestimonial, id)}>\r\n                Testimonial\r\n              </Button>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { UserReview };\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,aAEF,CAAC,EACH,EAAE,EACF,MAAM,EACN,MAAM,EACN,WAAW,EACX,GAAG,EACH,QAAQ,EACR,SAAS,EACT,OAAO,EACP,mBAAmB,EACpB;IACC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,iBAAiB,OAAO,sBAA+B;QAC3D,MAAM,MAAM,MAAM,MAAM,CAAC,YAAY,CAAC,EAAE;YACtC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,aAAa;gBACb;YACF;QACF;QAEA,OAAO,iBAAiB;IAC1B;IAEA,qBACE,kMAAC;QAAI,WAAU;;0BACb,kMAAC;gBACC,WAAU;gBACV,KAAK;gBACL,KAAI;;;;;;0BAEN,kMAAC;gBAAI,WAAU;;kCACb,kMAAC;wBAAE,WAAU;;0CACX,kMAAC;gCAAK,WAAU;0CAAiB;;;;;;0CACjC,kMAAC;gCAAK,WAAU;0CAAoB;;;;;;;;;;;;kCAEtC,kMAAC;wBAAI,WAAU;kCACb,cAAA,kMAAC,2IAAA,CAAA,aAAU;4BAAC,QAAQ,UAAU;4BAAG,MAAM;;;;;;;;;;;kCAEzC,kMAAC;wBAAE,WAAU;;4BACV;4BAAG;4BAAE;;;;;;;oBAEP,yBACC;;4BACG,8BACC,kMAAC;gCAAE,WAAU;0CAAkC;;;;;qDAE/C,kMAAC;gCAAE,WAAU;0CAAkC;;;;;;4BAEhD,OAAO,2BACN,kMAAC,mIAAA,CAAA,SAAM;gCAAC,SAAS,IAAM,eAAe,CAAC,eAAe;0CAAK;;;;;;;;;;;;;;;;;;;;AASzE"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/ikeandrie/work/jje-fork/web/app/%28main%29/router/admin-dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { DescriptionModal } from \"@/components/admin/description-modal\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Description } from \"@/components/ui/description\";\r\nimport { UserReview } from \"@/components/ui/user-review\";\r\nimport { ReviewProps, UserProps } from \"@/types/props\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const runtime = \"edge\";\r\n\r\nconst AdminDashboardPage = () => {\r\n  const [isTestimonial, setIsTestimonial] = useState<boolean>(false);\r\n\r\n  const [user, setUser] = useState<UserProps | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [reviewsData, setReviewsData] = useState<ReviewProps[]>([]);\r\n  const [usersData, setUsersData] = useState<UserProps[]>([]);\r\n\r\n  const fetchReviews = async () => {\r\n    const reviews = await fetch(\r\n      `${process.env.NEXT_PUBLIC_WEBSITE_URL}/api/reviews`,\r\n    ).then((res) => res.json());\r\n    reviews ? setReviewsData(reviews) : [];\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    const users = await fetch(\r\n      `${process.env.NEXT_PUBLIC_WEBSITE_URL}/api/users`,\r\n    ).then((res) => res.json());\r\n    users ? setUsersData(users) : [];\r\n  };\r\n\r\n  const checkUserSignIn = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.NEXT_PUBLIC_WEBSITE_URL}/api/auth`,\r\n      ).then((res) => res.json());\r\n      if (res) {\r\n        setUser(res.user);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch user admin status\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkUserSignIn();\r\n    fetchReviews();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleRefreshReviews = () => {\r\n    fetchReviews();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <section className=\"grid h-[100svh] items-center justify-center font-geistmono\">\r\n        <p>loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {user?.admin ? (\r\n        <>\r\n          <section className=\"grid h-[100svh] items-center justify-center\">\r\n            <div className=\"mx-auto w-[40rem] border-x-2 pt-14\">\r\n              <DescriptionModal request=\"POST\">\r\n                New Description\r\n              </DescriptionModal>\r\n              <Description isAdmin={true} />\r\n              {/* {[\"Testimonials\", \"Reviews\"].map((title, index) => (\r\n                <div key={index}>\r\n                  <h2 className=\"font-geistmono text-sm\" key={index}>\r\n                    {title}\r\n                  </h2> */}\r\n              {reviewsData.map(\r\n                ({ id, userId, review, rating, testimonial }) => {\r\n                  const user = usersData.find((user) => user.id === userId);\r\n\r\n                  testimonial && setIsTestimonial(!isTestimonial);\r\n                  return (\r\n                    <>\r\n                      {isTestimonial && (\r\n                        <UserReview\r\n                          key={id}\r\n                          id={id}\r\n                          img={user?.image}\r\n                          userName={user?.name}\r\n                          userEmail={user?.email}\r\n                          review={review}\r\n                          rating={rating}\r\n                          testimonial={testimonial}\r\n                          isAdmin={true}\r\n                          onTestimonialToggle={handleRefreshReviews}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  );\r\n                },\r\n              )}\r\n              {/* </div>\r\n              ))} */}\r\n            </div>\r\n          </section>\r\n          <div id=\"description-modal\"></div>\r\n        </>\r\n      ) : (\r\n        <section className=\"grid h-[100svh] items-center justify-center font-geistmono\">\r\n          <p className=\"text-sm\">You're not an admin</p>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardPage;\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;AACA;AAEA;AANA;;;;;;AAQO,MAAM,UAAU;AAEvB,MAAM,qBAAqB;IACzB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAW;IAE5D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAoB;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAE1D,MAAM,eAAe;QACnB,MAAM,UAAU,MAAM,MACpB,6DAAuC,YAAY,CAAC,EACpD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;QACxB,UAAU,eAAe,WAAW,EAAE;IACxC;IAEA,MAAM,aAAa;QACjB,MAAM,QAAQ,MAAM,MAClB,6DAAuC,UAAU,CAAC,EAClD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;QACxB,QAAQ,aAAa,SAAS,EAAE;IAClC;IAEA,MAAM,kBAAkB;QACtB,IAAI;YACF,MAAM,MAAM,MAAM,MAChB,6DAAuC,SAAS,CAAC,EACjD,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;YACxB,IAAI,KAAK;gBACP,QAAQ,IAAI,IAAI;YAClB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAqC;QACrD,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,kKAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA;QACA;IACF,GAAG,EAAE;IAEL,MAAM,uBAAuB;QAC3B;IACF;IAEA,IAAI,SAAS;QACX,qBACE,kMAAC;YAAQ,WAAU;sBACjB,cAAA,kMAAC;0BAAE;;;;;;;;;;;IAGT;IAEA,qBACE;kBACG,MAAM,sBACL;;8BACE,kMAAC;oBAAQ,WAAU;8BACjB,cAAA,kMAAC;wBAAI,WAAU;;0CACb,kMAAC,oJAAA,CAAA,mBAAgB;gCAAC,SAAQ;0CAAO;;;;;;0CAGjC,kMAAC,wIAAA,CAAA,cAAW;gCAAC,SAAS;;;;;;4BAMrB,YAAY,GAAG,CACd,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE;gCAC1C,MAAM,OAAO,UAAU,IAAI,CAAC,CAAC,OAAS,KAAK,EAAE,KAAK;gCAElD,eAAe,iBAAiB,CAAC;gCACjC,qBACE;8CACG,+BACC,kMAAC,2IAAA,CAAA,aAAU;wCAET,IAAI;wCACJ,KAAK,MAAM;wCACX,UAAU,MAAM;wCAChB,WAAW,MAAM;wCACjB,QAAQ;wCACR,QAAQ;wCACR,aAAa;wCACb,SAAS;wCACT,qBAAqB;uCAThB;;;;;;4BAcf;;;;;;;;;;;;8BAMN,kMAAC;oBAAI,IAAG;;;;;;;yCAGV,kMAAC;YAAQ,WAAU;sBACjB,cAAA,kMAAC;gBAAE,WAAU;0BAAU;;;;;;;;;;;;AAKjC;uCAEe"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}