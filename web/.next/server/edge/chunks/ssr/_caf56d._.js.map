{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/sign-in.tsx"],"sourcesContent":["import { signIn } from \"@/app/api/auth/auth\";\r\n\r\nexport const SignIn = async () => {\r\n  return (\r\n    <form\r\n      action={async () => {\r\n        \"use server\";\r\n        await signIn(\"facebook\");\r\n      }}\r\n    >\r\n      <button type=\"submit\">Signin with Facebook</button>\r\n    </form>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,SAAS;IACpB,qBACE,kMAAC;QACC,QAAQ;YAEN,MAAM,CAAA,GAAA,kIAAA,CAAA,SAAM,AAAD,EAAE;QACf;kBAEA,cAAA,kMAAC;YAAO,MAAK;sBAAS;;;;;;;;;;;AAG5B"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(main)/route/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { SignIn } from \"@/components/sign-in\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const runtime = \"edge\";\r\n\r\nconst DrizzlePage = () => {\r\n  const [comments, setComments] = useState<{ id: number }[]>([]);\r\n\r\n  const fetchComments = async () => {\r\n    const res = await fetch(`/api/comments`);\r\n    setComments(await res.json());\r\n\r\n    console.log(comments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"grid h-[100svh] items-center justify-center\">\r\n      <div>\r\n        <SignIn />\r\n        <form\r\n          onSubmit={async (e: React.FormEvent<HTMLFormElement>) => {\r\n            e.preventDefault();\r\n\r\n            const req = await fetch(`/api/comments`, {\r\n              method: \"POST\",\r\n            });\r\n\r\n            console.log(req.json);\r\n\r\n            fetchComments();\r\n          }}\r\n        >\r\n          <input name=\"comment\" type=\"text\" placeholder=\"comment\" />\r\n          <button type=\"submit\">comment</button>\r\n        </form>\r\n        {comments.map(({ id }) => (\r\n          <p key={id}>{id}</p>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DrizzlePage;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKO,MAAM,UAAU;AAEvB,MAAM,cAAc;IAClB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,kKAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAE7D,MAAM,gBAAgB;QACpB,MAAM,MAAM,MAAM,MAAM,CAAC,aAAa,CAAC;QACvC,YAAY,MAAM,IAAI,IAAI;QAE1B,QAAQ,GAAG,CAAC;IACd;IAEA,CAAA,GAAA,kKAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,qBACE,kMAAC;QAAQ,WAAU;kBACjB,cAAA,kMAAC;;8BACC,kMAAC,iIAAA,CAAA,SAAM;;;;;8BACP,kMAAC;oBACC,UAAU,OAAO;wBACf,EAAE,cAAc;wBAEhB,MAAM,MAAM,MAAM,MAAM,CAAC,aAAa,CAAC,EAAE;4BACvC,QAAQ;wBACV;wBAEA,QAAQ,GAAG,CAAC,IAAI,IAAI;wBAEpB;oBACF;;sCAEA,kMAAC;4BAAM,MAAK;4BAAU,MAAK;4BAAO,aAAY;;;;;;sCAC9C,kMAAC;4BAAO,MAAK;sCAAS;;;;;;;;;;;;gBAEvB,SAAS,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,iBACnB,kMAAC;kCAAY;uBAAL;;;;;;;;;;;;;;;;AAKlB;uCAEe"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","findSourceMapURL","createServerReference","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;AAWnB,MAAME,wBACV,CAAA,CAAC,CAACC,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,+HAAiC,EAC7CJ,qBAAqB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}