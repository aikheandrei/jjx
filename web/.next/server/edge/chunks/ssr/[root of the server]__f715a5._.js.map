{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/db/env.ts"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\r\nimport { z } from \"zod\";\r\n\r\nexport const env = createEnv({\r\n  server: {\r\n    DATABASE_URL: z.string().url(),\r\n    NODE_ENV: z.string().min(1),\r\n  },\r\n  runtimeEnv: {\r\n    NODE_ENV: process.env.NODE_ENV,\r\n    DATABASE_URL: process.env.DATABASE_URL,\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,qKAAA,CAAA,YAAS,AAAD,EAAE;IAC3B,QAAQ;QACN,cAAc,4IAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,4IAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC3B;IACA,YAAY;QACV,QAAQ;QACR,cAAc,QAAQ,GAAG,CAAC,YAAY;IACxC;AACF"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/db/index.ts"],"sourcesContent":["import { env } from \"./env\";\r\nimport * as schema from \"./schema\";\r\nimport { MySql2Database, drizzle } from \"drizzle-orm/mysql2\";\r\nimport mysql from \"mysql2\";\r\n\r\ndeclare global {\r\n  var database: MySql2Database<typeof schema> | undefined;\r\n}\r\n\r\nlet database: MySql2Database<typeof schema>;\r\nlet connection: ReturnType<typeof mysql.createConnection>;\r\n\r\nif (env.NODE_ENV === \"production\") {\r\n  connection = mysql.createConnection(env.DATABASE_URL);\r\n  database = drizzle(connection);\r\n} else {\r\n  if (!global.database) {\r\n    connection = mysql.createConnection(env.DATABASE_URL);\r\n    global.database = drizzle(connection);\r\n  }\r\n  database = global.database;\r\n}\r\n\r\nexport { database, connection };\r\n"],"names":[],"mappings":";;;;AAAA;AAGA;AADA;;;;AAOA,IAAI;AACJ,IAAI;AAEJ,IAAI,iHAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc;IACjC,aAAa,uIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC,iHAAA,CAAA,MAAG,CAAC,YAAY;IACpD,WAAW,CAAA,GAAA,0KAAA,CAAA,UAAO,AAAD,EAAE;AACrB,OAAO;IACL,IAAI,CAAC,OAAO,QAAQ,EAAE;QACpB,aAAa,uIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC,iHAAA,CAAA,MAAG,CAAC,YAAY;QACpD,OAAO,QAAQ,GAAG,CAAA,GAAA,0KAAA,CAAA,UAAO,AAAD,EAAE;IAC5B;IACA,WAAW,OAAO,QAAQ;AAC5B"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/(main)/route/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nexport const runtime = \"edge\";\r\n\r\nconst DrizzlePage = () => {\r\n  const fetchComments = async () => {\r\n    const response = await fetch(`/api/comments`);\r\n    const comments = await response.json();\r\n\r\n    console.log(comments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"grid h-[100svh] items-center justify-center\">\r\n      <div>\r\n        <form\r\n          onSubmit={async (e: React.FormEvent<HTMLFormElement>) => {\r\n            e.preventDefault();\r\n\r\n            await fetch(`/api/comments`, {\r\n              method: \"POST\",\r\n            });\r\n          }}\r\n        >\r\n          <input name=\"comment\" type=\"text\" placeholder=\"comment\" />\r\n          <button type=\"submit\">comment</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default DrizzlePage;\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIO,MAAM,UAAU;AAEvB,MAAM,cAAc;IAClB,MAAM,gBAAgB;QACpB,MAAM,WAAW,MAAM,MAAM,CAAC,aAAa,CAAC;QAC5C,MAAM,WAAW,MAAM,SAAS,IAAI;QAEpC,QAAQ,GAAG,CAAC;IACd;IAEA,CAAA,GAAA,kKAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,qBACE,kMAAC;QAAQ,WAAU;kBACjB,cAAA,kMAAC;sBACC,cAAA,kMAAC;gBACC,UAAU,OAAO;oBACf,EAAE,cAAc;oBAEhB,MAAM,MAAM,CAAC,aAAa,CAAC,EAAE;wBAC3B,QAAQ;oBACV;gBACF;;kCAEA,kMAAC;wBAAM,MAAK;wBAAU,MAAK;wBAAO,aAAY;;;;;;kCAC9C,kMAAC;wBAAO,MAAK;kCAAS;;;;;;;;;;;;;;;;;;;;;;AAKhC;uCAEe"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}