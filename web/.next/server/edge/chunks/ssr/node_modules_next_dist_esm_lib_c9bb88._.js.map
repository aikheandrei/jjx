{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/constants.ts"],"sourcesContent":["import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 64\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The layer for the API routes.\n   */\n  api: 'api',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.api,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n"],"names":["NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","MATCHED_PATH_HEADER","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","ACTION_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_BODY_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_SOFT_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_RESUME_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_IMPLICIT_TAG_ID","CACHE_ONE_YEAR","INFINITE_CACHE","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","INSTRUMENTATION_HOOK_FILENAME","PAGES_DIR_ALIAS","DOT_NEXT_ALIAS","ROOT_DIR_ALIAS","APP_DIR_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","PUBLIC_DIR_MIDDLEWARE_CONFLICT","SSG_GET_INITIAL_PROPS_CONFLICT","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","SERVER_PROPS_EXPORT_ERROR","GSP_NO_RETURNED_VALUE","GSSP_NO_RETURNED_VALUE","UNSTABLE_REVALIDATE_RENAME_ERROR","GSSP_COMPONENT_MEMBER_ERROR","NON_STANDARD_NODE_ENV","SSG_FALLBACK_EXPORT_ERROR","ESLINT_DEFAULT_DIRS","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","api","middleware","instrument","edgeAsset","appPagesBrowser","WEBPACK_LAYERS","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","WEBPACK_RESOURCE_QUERIES","edgeSSREntry","metadata","metadataRoute","metadataImageMeta"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/detached-promise.ts"],"sourcesContent":["/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n"],"names":["DetachedPromise","constructor","resolve","reject","promise","Promise","res","rej"],"mappings":"AAAA;;;;;CAKC,GACD;;;AAAO,MAAMA;IAKXC,aAAc;QACZ,IAAIC;QACJ,IAAIC;QAEJ,6DAA6D;QAC7D,IAAI,CAACC,OAAO,GAAG,IAAIC,QAAW,CAACC,KAAKC;YAClCL,UAAUI;YACVH,SAASI;QACX;QAEA,yEAAyE;QACzE,iBAAiB;QACjB,IAAI,CAACL,OAAO,GAAGA;QACf,IAAI,CAACC,MAAM,GAAGA;IAChB;AACF","ignoreList":[0]}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/batcher.ts"],"sourcesContent":["import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n"],"names":["DetachedPromise","Batcher","cacheKeyFn","schedulerFn","fn","pending","Map","create","options","batch","key","cacheKey","Promise","resolve","get","promise","reject","set","result","err","delete"],"mappings":";;;AAEA,SAASA,eAAe,QAAQ,qBAAoB;;AAoB7C,MAAMC;IAGX,YACmBC,UAA6B,EAC9C;;;;KAIC,GACgBC,cAAiC,CAACC,KAAOA,IAAI,CAC9D;aAPiBF,UAAAA,GAAAA;aAMAC,WAAAA,GAAAA;aATFE,OAAAA,GAAU,IAAIC;IAU5B;IAcH,OAAcC,OACZC,OAA8B,EACZ;QAClB,OAAO,IAAIP,QAAiBO,WAAAA,OAAAA,KAAAA,IAAAA,QAASN,UAAU,EAAEM,WAAAA,OAAAA,KAAAA,IAAAA,QAASL,WAAW;IACvE;IAEA;;;;;;;;;GASC,GACD,MAAaM,MAAMC,GAAM,EAAEN,EAAgB,EAAc;QACvD,MAAMO,WAAY,IAAI,CAACT,UAAU,GAAG,MAAM,IAAI,CAACA,UAAU,CAACQ,OAAOA;QACjE,IAAIC,aAAa,MAAM;YACrB,OAAOP,GAAGO,UAAUC,QAAQC,OAAO;QACrC;QAEA,MAAMR,UAAU,IAAI,CAACA,OAAO,CAACS,GAAG,CAACH;QACjC,IAAIN,SAAS,OAAOA;QAEpB,MAAM,EAAEU,OAAO,EAAEF,OAAO,EAAEG,MAAM,EAAE,GAAG,8KAAIhB,kBAAAA;QACzC,IAAI,CAACK,OAAO,CAACY,GAAG,CAACN,UAAUI;QAE3B,IAAI,CAACZ,WAAW,CAAC;YACf,IAAI;gBACF,MAAMe,SAAS,MAAMd,GAAGO,UAAUE;gBAElC,kEAAkE;gBAClE,qDAAqD;gBACrDA,QAAQK;YACV,EAAE,OAAOC,KAAK;gBACZH,OAAOG;YACT,SAAU;gBACR,IAAI,CAACd,OAAO,CAACe,MAAM,CAACT;YACtB;QACF;QAEA,OAAOI;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/scheduler.ts"],"sourcesContent":["export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n"],"names":["scheduleOnNextTick","cb","Promise","resolve","then","process","env","NEXT_RUNTIME","setTimeout","nextTick","scheduleImmediate","setImmediate","atLeastOneTask","waitAtLeastOneReactRenderTask","r"],"mappings":"AAGA;;;;;CAKC,GACD;;;;;;AAAO,MAAMA,qBAAqB,CAAWC;IAC3C,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACFC,QAAQC,OAAO,GAAGC,IAAI,CAAC;QACrB,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;YACvCC,WAAWP,IAAI;QACjB,OAAO;;QAEP;IACF;AACF,EAAC;AAQM,MAAMS,oBAAoB,CAAWT;IAC1C,IAAII,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;QACvCC,WAAWP,IAAI;IACjB,OAAO;;IAEP;AACF,EAAC;AAOM,SAASW;IACd,OAAO,IAAIV,QAAc,CAACC,UAAYO,kBAAkBP;AAC1D;AAWO,SAASU;IACd,IAAIR,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;QACvC,OAAO,IAAIL,QAAQ,CAACY,IAAMN,WAAWM,GAAG;IAC1C,OAAO;;IAEP;AACF","ignoreList":[0]}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/redirect-status.ts"],"sourcesContent":["import { RedirectStatusCode } from '../client/components/redirect-status-code'\n\nexport const allowedStatusCodes = new Set([301, 302, 303, 307, 308])\n\nexport function getRedirectStatus(route: {\n  statusCode?: number\n  permanent?: boolean\n}): number {\n  return (\n    route.statusCode ||\n    (route.permanent\n      ? RedirectStatusCode.PermanentRedirect\n      : RedirectStatusCode.TemporaryRedirect)\n  )\n}\n\n// for redirects we restrict matching /_next and for all routes\n// we add an optional trailing slash at the end for easier\n// configuring between trailingSlash: true/false\nexport function modifyRouteRegex(regex: string, restrictedPaths?: string[]) {\n  if (restrictedPaths) {\n    regex = regex.replace(\n      /\\^/,\n      `^(?!${restrictedPaths\n        .map((path) => path.replace(/\\//g, '\\\\/'))\n        .join('|')})`\n    )\n  }\n  regex = regex.replace(/\\$$/, '(?:\\\\/)?$')\n  return regex\n}\n"],"names":["RedirectStatusCode","allowedStatusCodes","Set","getRedirectStatus","route","statusCode","permanent","PermanentRedirect","TemporaryRedirect","modifyRouteRegex","regex","restrictedPaths","replace","map","path","join"],"mappings":";;;;;AAAA,SAASA,kBAAkB,QAAQ,4CAA2C;;AAEvE,MAAMC,qBAAqB,IAAIC,IAAI;IAAC;IAAK;IAAK;IAAK;IAAK;CAAI,EAAC;AAE7D,SAASC,kBAAkBC,KAGjC;IACC,OACEA,MAAMC,UAAU,IACfD,CAAAA,MAAME,SAAS,qMACZN,qBAAAA,CAAmBO,iBAAiB,qMACpCP,qBAAAA,CAAmBQ,iBAAgB;AAE3C;AAKO,SAASC,iBAAiBC,KAAa,EAAEC,eAA0B;IACxE,IAAIA,iBAAiB;QACnBD,QAAQA,MAAME,OAAO,CACnB,MACA,CAAC,IAAI,EAAED,gBACJE,GAAG,CAAC,CAACC,OAASA,KAAKF,OAAO,CAAC,OAAO,QAClCG,IAAI,CAAC,KAAK,CAAC,CAAC;IAEnB;IACAL,QAAQA,MAAME,OAAO,CAAC,OAAO;IAC7B,OAAOF;AACT","ignoreList":[0]}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/is-edge-runtime.ts"],"sourcesContent":["import type { ServerRuntime } from '../types'\nimport { SERVER_RUNTIME } from './constants'\n\nexport function isEdgeRuntime(value?: string): value is ServerRuntime {\n  return (\n    value === SERVER_RUNTIME.experimentalEdge || value === SERVER_RUNTIME.edge\n  )\n}\n"],"names":["SERVER_RUNTIME","isEdgeRuntime","value","experimentalEdge","edge"],"mappings":";;;AACA,SAASA,cAAc,QAAQ,cAAa;;AAErC,SAASC,cAAcC,KAAc;IAC1C,OACEA,0KAAUF,iBAAAA,CAAeG,gBAAgB,IAAID,0KAAUF,iBAAAA,CAAeI,IAAI;AAE9E","ignoreList":[0]}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/picocolors.ts"],"sourcesContent":["// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n"],"names":["globalThis","env","stdout","process","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","length","nextIndex","indexOf","formatter","open","String","input","string","reset","s","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","purple","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite"],"mappings":"AAAA,cAAc;AAEd,wEAAwE;AAExE,2EAA2E;AAC3E,yEAAyE;AACzE,oEAAoE;AAEpE,2EAA2E;AAC3E,mEAAmE;AACnE,0EAA0E;AAC1E,yEAAyE;AACzE,wEAAwE;AACxE,0EAA0E;AAC1E,iEAAiE;AACjE,EAAE;AACF,8GAA8G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEtFA;AAAxB,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAE,GAAGF,CAAAA,CAAAA,cAAAA,UAAAA,KAAAA,OAAAA,KAAAA,IAAAA,YAAYG,OAAO,KAAI,CAAC;AAEhD,MAAMC,UACJH,OACA,CAACA,IAAII,QAAQ,IACZJ,CAAAA,IAAIK,WAAW,IAAKJ,CAAAA,UAAAA,OAAAA,KAAAA,IAAAA,OAAQK,KAAK,KAAI,CAACN,IAAIO,EAAE,IAAIP,IAAIQ,IAAI,KAAK,MAAM;AAEtE,MAAMC,eAAe,CACnBC,KACAC,OACAC,SACAC;IAEA,MAAMC,QAAQJ,IAAIK,SAAS,CAAC,GAAGF,SAASD;IACxC,MAAMI,MAAMN,IAAIK,SAAS,CAACF,QAAQF,MAAMM,MAAM;IAC9C,MAAMC,YAAYF,IAAIG,OAAO,CAACR;IAC9B,OAAO,CAACO,YACJJ,QAAQL,aAAaO,KAAKL,OAAOC,SAASM,aAC1CJ,QAAQE;AACd;AAEA,MAAMI,YAAY,CAACC,MAAcV,OAAeC,UAAUS,IAAI;IAC5D,IAAI,CAAClB,SAAS,OAAOmB;IACrB,OAAO,CAACC;QACN,MAAMC,SAAS,KAAKD;QACpB,MAAMV,QAAQW,OAAOL,OAAO,CAACR,OAAOU,KAAKJ,MAAM;QAC/C,OAAO,CAACJ,QACJQ,OAAOZ,aAAae,QAAQb,OAAOC,SAASC,SAASF,QACrDU,OAAOG,SAASb;IACtB;AACF;AAEO,MAAMc,QAAQtB,UAAU,CAACuB,IAAc,CAAC,OAAO,EAAEA,EAAE,OAAO,CAAC,GAAGJ,OAAM;AACpE,MAAMK,OAAOP,UAAU,WAAW,YAAY,mBAAkB;AAChE,MAAMQ,MAAMR,UAAU,WAAW,YAAY,mBAAkB;AAC/D,MAAMS,SAAST,UAAU,WAAW,YAAW;AAC/C,MAAMU,YAAYV,UAAU,WAAW,YAAW;AAClD,MAAMW,UAAUX,UAAU,WAAW,YAAW;AAChD,MAAMY,SAASZ,UAAU,WAAW,YAAW;AAC/C,MAAMa,gBAAgBb,UAAU,WAAW,YAAW;AACtD,MAAMc,QAAQd,UAAU,YAAY,YAAW;AAC/C,MAAMe,MAAMf,UAAU,YAAY,YAAW;AAC7C,MAAMgB,QAAQhB,UAAU,YAAY,YAAW;AAC/C,MAAMiB,SAASjB,UAAU,YAAY,YAAW;AAChD,MAAMkB,OAAOlB,UAAU,YAAY,YAAW;AAC9C,MAAMmB,UAAUnB,UAAU,YAAY,YAAW;AACjD,MAAMoB,SAASpB,UAAU,0BAA0B,YAAW;AAC9D,MAAMqB,OAAOrB,UAAU,YAAY,YAAW;AAC9C,MAAMsB,QAAQtB,UAAU,YAAY,YAAW;AAC/C,MAAMuB,OAAOvB,UAAU,YAAY,YAAW;AAC9C,MAAMwB,UAAUxB,UAAU,YAAY,YAAW;AACjD,MAAMyB,QAAQzB,UAAU,YAAY,YAAW;AAC/C,MAAM0B,UAAU1B,UAAU,YAAY,YAAW;AACjD,MAAM2B,WAAW3B,UAAU,YAAY,YAAW;AAClD,MAAM4B,SAAS5B,UAAU,YAAY,YAAW;AAChD,MAAM6B,YAAY7B,UAAU,YAAY,YAAW;AACnD,MAAM8B,SAAS9B,UAAU,YAAY,YAAW;AAChD,MAAM+B,UAAU/B,UAAU,YAAY,YAAW","ignoreList":[0]}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/is-error.ts"],"sourcesContent":["import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Next.js errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nfunction safeStringify(obj: any) {\n  const seen = new WeakSet()\n\n  return JSON.stringify(obj, (_key, value) => {\n    // If value is an object and already seen, replace with \"[Circular]\"\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]'\n      }\n      seen.add(value)\n    }\n    return value\n  })\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? safeStringify(err) : err + '')\n}\n"],"names":["isPlainObject","isError","err","safeStringify","obj","seen","WeakSet","JSON","stringify","_key","value","has","add","getProperError","process","env","NODE_ENV","Error"],"mappings":";;;;AAAA,SAASA,aAAa,QAAQ,gCAA+B;;AAe9C,SAASC,QAAQC,GAAY;IAC1C,OACE,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,UAAUA,OAAO,aAAaA;AAE7E;AAEA,SAASC,cAAcC,GAAQ;IAC7B,MAAMC,OAAO,IAAIC;IAEjB,OAAOC,KAAKC,SAAS,CAACJ,KAAK,CAACK,MAAMC;QAChC,oEAAoE;QACpE,IAAI,OAAOA,UAAU,YAAYA,UAAU,MAAM;YAC/C,IAAIL,KAAKM,GAAG,CAACD,QAAQ;gBACnB,OAAO;YACT;YACAL,KAAKO,GAAG,CAACF;QACX;QACA,OAAOA;IACT;AACF;AAEO,SAASG,eAAeX,GAAY;IACzC,IAAID,QAAQC,MAAM;QAChB,OAAOA;IACT;IAEA,IAAIY,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAe;QAC1C,wDAAwD;QACxD,2BAA2B;QAC3B,IAAI,OAAOd,QAAQ,aAAa;YAC9B,OAAO,IAAIe,MACT,oCACE;QAEN;QAEA,IAAIf,QAAQ,MAAM;YAChB,OAAO,IAAIe,MACT,8BACE;QAEN;IACF;IAEA,OAAO,IAAIA,gMAAMjB,gBAAAA,EAAcE,OAAOC,cAAcD,OAAOA,MAAM;AACnE","ignoreList":[0]}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/is-app-page-route.ts"],"sourcesContent":["export function isAppPageRoute(route: string): boolean {\n  return route.endsWith('/page')\n}\n"],"names":["isAppPageRoute","route","endsWith"],"mappings":";;;AAAO,SAASA,eAAeC,KAAa;IAC1C,OAAOA,MAAMC,QAAQ,CAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/page-types.ts"],"sourcesContent":["export const enum PAGE_TYPES {\n  PAGES = 'pages',\n  ROOT = 'root',\n  APP = 'app',\n}\n"],"names":["PAGE_TYPES"],"mappings":";;;;UAAkBA,UAAAA;;;;GAAAA,cAAAA,CAAAA,aAAAA,CAAAA,CAAAA","ignoreList":[0]}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/is-metadata-route.ts"],"sourcesContent":["import type { PageExtensions } from '../../build/page-extensions-type'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\n\nexport const STATIC_METADATA_IMAGES = {\n  icon: {\n    filename: 'icon',\n    extensions: ['ico', 'jpg', 'jpeg', 'png', 'svg'],\n  },\n  apple: {\n    filename: 'apple-icon',\n    extensions: ['jpg', 'jpeg', 'png'],\n  },\n  favicon: {\n    filename: 'favicon',\n    extensions: ['ico'],\n  },\n  openGraph: {\n    filename: 'opengraph-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n  twitter: {\n    filename: 'twitter-image',\n    extensions: ['jpg', 'jpeg', 'png', 'gif'],\n  },\n} as const\n\n// Match routes that are metadata routes, e.g. /sitemap.xml, /favicon.<ext>, /<icon>.<ext>, etc.\n// TODO-METADATA: support more metadata routes with more extensions\nconst defaultExtensions = ['js', 'jsx', 'ts', 'tsx']\n\n// Match the file extension with the dynamic multi-routes extensions\n// e.g. ([xml, js], null) -> can match `/sitemap.xml/route`, `sitemap.js/route`\n// e.g. ([png], [ts]) -> can match `/opengrapg-image.png/route`, `/opengraph-image.ts[]/route`\nexport const getExtensionRegexString = (\n  staticExtensions: readonly string[],\n  dynamicExtensions: readonly string[] | null\n) => {\n  // If there's no possible multi dynamic routes, will not match any <name>[].<ext> files\n  if (!dynamicExtensions) {\n    return `\\\\.(?:${staticExtensions.join('|')})`\n  }\n  return `(?:\\\\.(${staticExtensions.join('|')})|((\\\\[\\\\])?\\\\.(${dynamicExtensions.join('|')})))`\n}\n\n// When you only pass the file extension as `[]`, it will only match the static convention files\n// e.g. /robots.txt, /sitemap.xml, /favicon.ico, /manifest.json\n// When you pass the file extension as `['js', 'jsx', 'ts', 'tsx']`, it will also match the dynamic convention files\n// e.g. /robots.js, /sitemap.tsx, /favicon.jsx, /manifest.ts\n// When `withExtension` is false, it will match the static convention files without the extension, by default it's true\n// e.g. /robots, /sitemap, /favicon, /manifest, use to match dynamic API routes like app/robots.ts\nexport function isMetadataRouteFile(\n  appDirRelativePath: string,\n  pageExtensions: PageExtensions,\n  withExtension: boolean\n) {\n  const metadataRouteFilesRegex = [\n    new RegExp(\n      `^[\\\\\\\\/]robots${\n        withExtension\n          ? `${getExtensionRegexString(pageExtensions.concat('txt'), null)}$`\n          : ''\n      }`\n    ),\n    new RegExp(\n      `^[\\\\\\\\/]manifest${\n        withExtension\n          ? `${getExtensionRegexString(\n              pageExtensions.concat('webmanifest', 'json'),\n              null\n            )}$`\n          : ''\n      }`\n    ),\n    new RegExp(`^[\\\\\\\\/]favicon\\\\.ico$`),\n    new RegExp(\n      `[\\\\\\\\/]sitemap${\n        withExtension\n          ? `${getExtensionRegexString(['xml'], pageExtensions)}$`\n          : ''\n      }`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.icon.filename}\\\\d?${\n        withExtension\n          ? `${getExtensionRegexString(\n              STATIC_METADATA_IMAGES.icon.extensions,\n              pageExtensions\n            )}$`\n          : ''\n      }`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.apple.filename}\\\\d?${\n        withExtension\n          ? `${getExtensionRegexString(\n              STATIC_METADATA_IMAGES.apple.extensions,\n              pageExtensions\n            )}$`\n          : ''\n      }`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.openGraph.filename}\\\\d?${\n        withExtension\n          ? `${getExtensionRegexString(\n              STATIC_METADATA_IMAGES.openGraph.extensions,\n              pageExtensions\n            )}$`\n          : ''\n      }`\n    ),\n    new RegExp(\n      `[\\\\\\\\/]${STATIC_METADATA_IMAGES.twitter.filename}\\\\d?${\n        withExtension\n          ? `${getExtensionRegexString(\n              STATIC_METADATA_IMAGES.twitter.extensions,\n              pageExtensions\n            )}$`\n          : ''\n      }`\n    ),\n  ]\n\n  const normalizedAppDirRelativePath = normalizePathSep(appDirRelativePath)\n  return metadataRouteFilesRegex.some((r) =>\n    r.test(normalizedAppDirRelativePath)\n  )\n}\n\nexport function isStaticMetadataRouteFile(appDirRelativePath: string) {\n  return isMetadataRouteFile(appDirRelativePath, [], true)\n}\n\nexport function isStaticMetadataRoute(page: string) {\n  return (\n    page === '/robots' ||\n    page === '/manifest' ||\n    isStaticMetadataRouteFile(page)\n  )\n}\n\n/*\n * Remove the 'app' prefix or '/route' suffix, only check the route name since they're only allowed in root app directory\n * e.g.\n * /app/robots -> /robots\n * app/robots -> /robots\n * /robots -> /robots\n */\nexport function isMetadataRoute(route: string): boolean {\n  let page = route.replace(/^\\/?app\\//, '').replace(/\\/route$/, '')\n  if (page[0] !== '/') page = '/' + page\n\n  return (\n    !page.endsWith('/page') &&\n    isMetadataRouteFile(page, defaultExtensions, false)\n  )\n}\n"],"names":["normalizePathSep","STATIC_METADATA_IMAGES","icon","filename","extensions","apple","favicon","openGraph","twitter","defaultExtensions","getExtensionRegexString","staticExtensions","dynamicExtensions","join","isMetadataRouteFile","appDirRelativePath","pageExtensions","withExtension","metadataRouteFilesRegex","RegExp","concat","normalizedAppDirRelativePath","some","r","test","isStaticMetadataRouteFile","isStaticMetadataRoute","page","isMetadataRoute","route","replace","endsWith"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/get-metadata-route.ts"],"sourcesContent":["import { isMetadataRoute } from './is-metadata-route'\nimport path from '../../shared/lib/isomorphic/path'\nimport { interpolateDynamicPath } from '../../server/server-utils'\nimport { getNamedRouteRegex } from '../../shared/lib/router/utils/route-regex'\nimport { djb2Hash } from '../../shared/lib/hash'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\n\n/*\n * If there's special convention like (...) or @ in the page path,\n * Give it a unique hash suffix to avoid conflicts\n *\n * e.g.\n * /app/opengraph-image.tsx -> /opengraph-image\n * /app/(post)/opengraph-image.tsx -> /opengraph-image-[0-9a-z]{6}\n */\nfunction getMetadataRouteSuffix(page: string) {\n  let suffix = ''\n\n  if ((page.includes('(') && page.includes(')')) || page.includes('@')) {\n    suffix = djb2Hash(page).toString(36).slice(0, 6)\n  }\n  return suffix\n}\n\n/**\n * Fill the dynamic segment in the metadata route\n *\n * Example:\n * fillMetadataSegment('/a/[slug]', { params: { slug: 'b' } }, 'open-graph') -> '/a/b/open-graph'\n *\n */\nexport function fillMetadataSegment(\n  segment: string,\n  params: any,\n  imageSegment: string\n) {\n  const pathname = normalizeAppPath(segment)\n  const routeRegex = getNamedRouteRegex(pathname, false)\n  const route = interpolateDynamicPath(pathname, params, routeRegex)\n  const suffix = getMetadataRouteSuffix(segment)\n  const routeSuffix = suffix ? `-${suffix}` : ''\n\n  const { name, ext } = path.parse(imageSegment)\n\n  return normalizePathSep(path.join(route, `${name}${routeSuffix}${ext}`))\n}\n\n/**\n * Map metadata page key to the corresponding route\n *\n * static file page key:    /app/robots.txt -> /robots.xml -> /robots.txt/route\n * dynamic route page key:  /app/robots.tsx -> /robots -> /robots.txt/route\n *\n * @param page\n * @returns\n */\nexport function normalizeMetadataRoute(page: string) {\n  if (!isMetadataRoute(page)) {\n    return page\n  }\n  let route = page\n  let suffix = ''\n  if (page === '/robots') {\n    route += '.txt'\n  } else if (page === '/manifest') {\n    route += '.webmanifest'\n  } else {\n    // Remove the file extension,\n    // e.g. /path/robots.txt -> /route-path\n    // e.g. /path/opengraph-image.tsx -> /path/opengraph-image\n    const pathnamePrefix = page.slice(0, -(path.basename(page).length + 1))\n    suffix = getMetadataRouteSuffix(pathnamePrefix)\n  }\n  // Support both /<metadata-route.ext> and custom routes /<metadata-route>/route.ts.\n  // If it's a metadata file route, we need to append /[id]/route to the page.\n  if (!route.endsWith('/route')) {\n    const { dir, name: baseName, ext } = path.parse(route)\n    route = path.posix.join(\n      dir,\n      `${baseName}${suffix ? `-${suffix}` : ''}${ext}`,\n      'route'\n    )\n  }\n\n  return route\n}\n\n// Normalize metadata route page to either a single route or a dynamic route.\n// e.g. Input: /sitemap/route\n// when isDynamic is false, single route -> /sitemap.xml/route\n// when isDynamic is false, dynamic route -> /sitemap/[__metadata_id__]/route\n// also works for pathname such as /sitemap -> /sitemap.xml, but will not append /route suffix\nexport function normalizeMetadataPageToRoute(page: string, isDynamic: boolean) {\n  const isRoute = page.endsWith('/route')\n  const routePagePath = isRoute ? page.slice(0, -'/route'.length) : page\n  const metadataRouteExtension = routePagePath.endsWith('/sitemap')\n    ? '.xml'\n    : ''\n  const mapped = isDynamic\n    ? `${routePagePath}/[__metadata_id__]`\n    : `${routePagePath}${metadataRouteExtension}`\n\n  return mapped + (isRoute ? '/route' : '')\n}\n"],"names":["isMetadataRoute","path","interpolateDynamicPath","getNamedRouteRegex","djb2Hash","normalizeAppPath","normalizePathSep","getMetadataRouteSuffix","page","suffix","includes","toString","slice","fillMetadataSegment","segment","params","imageSegment","pathname","routeRegex","route","routeSuffix","name","ext","parse","join","normalizeMetadataRoute","pathnamePrefix","basename","length","endsWith","dir","baseName","posix","normalizeMetadataPageToRoute","isDynamic","isRoute","routePagePath","metadataRouteExtension","mapped"],"mappings":";;;;;AAAA,SAASA,eAAe,QAAQ,sBAAqB;AACrD,OAAOC,UAAU,mCAAkC;AACnD,SAASC,sBAAsB,QAAQ,4BAA2B;AAClE,SAASC,kBAAkB,QAAQ,4CAA2C;AAC9E,SAASC,QAAQ,QAAQ,wBAAuB;AAChD,SAASC,gBAAgB,QAAQ,0CAAyC;AAC1E,SAASC,gBAAgB,QAAQ,gDAA+C;;;;;;;;AAEhF;;;;;;;CAOC,GACD,SAASC,uBAAuBC,IAAY;IAC1C,IAAIC,SAAS;IAEb,IAAKD,KAAKE,QAAQ,CAAC,QAAQF,KAAKE,QAAQ,CAAC,QAASF,KAAKE,QAAQ,CAAC,MAAM;QACpED,kLAASL,WAAAA,EAASI,MAAMG,QAAQ,CAAC,IAAIC,KAAK,CAAC,GAAG;IAChD;IACA,OAAOH;AACT;AASO,SAASI,oBACdC,OAAe,EACfC,MAAW,EACXC,YAAoB;IAEpB,MAAMC,+MAAWZ,mBAAAA,EAAiBS;IAClC,MAAMI,iBAAaf,uNAAAA,EAAmBc,UAAU;IAChD,MAAME,qLAAQjB,yBAAAA,EAAuBe,UAAUF,QAAQG;IACvD,MAAMT,SAASF,uBAAuBO;IACtC,MAAMM,cAAcX,SAAS,CAAC,CAAC,EAAEA,OAAO,CAAC,GAAG;IAE5C,MAAM,EAAEY,IAAI,EAAEC,GAAG,EAAE,sLAAGrB,UAAAA,CAAKsB,KAAK,CAACP;IAEjC,oNAAOV,mBAAAA,qLAAiBL,UAAAA,CAAKuB,IAAI,CAACL,OAAO,CAAC,EAAEE,KAAK,EAAED,YAAY,EAAEE,IAAI,CAAC;AACxE;AAWO,SAASG,uBAAuBjB,IAAY;IACjD,IAAI,+LAACR,kBAAAA,EAAgBQ,OAAO;QAC1B,OAAOA;IACT;IACA,IAAIW,QAAQX;IACZ,IAAIC,SAAS;IACb,IAAID,SAAS,WAAW;QACtBW,SAAS;IACX,OAAO,IAAIX,SAAS,aAAa;QAC/BW,SAAS;IACX,OAAO;QACL,6BAA6B;QAC7B,uCAAuC;QACvC,0DAA0D;QAC1D,MAAMO,iBAAiBlB,KAAKI,KAAK,CAAC,GAAG,CAAEX,oLAAAA,UAAAA,CAAK0B,QAAQ,CAACnB,MAAMoB,MAAM,GAAG,CAAA;QACpEnB,SAASF,uBAAuBmB;IAClC;IACA,mFAAmF;IACnF,4EAA4E;IAC5E,IAAI,CAACP,MAAMU,QAAQ,CAAC,WAAW;QAC7B,MAAM,EAAEC,GAAG,EAAET,MAAMU,QAAQ,EAAET,GAAG,EAAE,sLAAGrB,UAAAA,CAAKsB,KAAK,CAACJ;QAChDA,2LAAQlB,UAAAA,CAAK+B,KAAK,CAACR,IAAI,CACrBM,KACA,CAAC,EAAEC,SAAS,EAAEtB,SAAS,CAAC,CAAC,EAAEA,OAAO,CAAC,GAAG,GAAG,EAAEa,IAAI,CAAC,EAChD;IAEJ;IAEA,OAAOH;AACT;AAOO,SAASc,6BAA6BzB,IAAY,EAAE0B,SAAkB;IAC3E,MAAMC,UAAU3B,KAAKqB,QAAQ,CAAC;IAC9B,MAAMO,gBAAgBD,UAAU3B,KAAKI,KAAK,CAAC,GAAG,CAAC,SAASgB,MAAM,IAAIpB;IAClE,MAAM6B,yBAAyBD,cAAcP,QAAQ,CAAC,cAClD,SACA;IACJ,MAAMS,SAASJ,YACX,CAAC,EAAEE,cAAc,kBAAkB,CAAC,GACpC,CAAC,EAAEA,cAAc,EAAEC,uBAAuB,CAAC;IAE/C,OAAOC,SAAUH,CAAAA,UAAU,WAAW,EAAC;AACzC","ignoreList":[0]}},
    {"offset": {"line": 725, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/is-app-route-route.ts"],"sourcesContent":["export function isAppRouteRoute(route: string): boolean {\n  return route.endsWith('/route')\n}\n"],"names":["isAppRouteRoute","route","endsWith"],"mappings":";;;AAAO,SAASA,gBAAgBC,KAAa;IAC3C,OAAOA,MAAMC,QAAQ,CAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/is-api-route.ts"],"sourcesContent":["export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n"],"names":["isAPIRoute","value","Boolean","startsWith"],"mappings":";;;AAAO,SAASA,WAAWC,KAAc;IACvC,OAAOA,UAAU,UAAUC,QAAQD,SAAAA,OAAAA,KAAAA,IAAAA,MAAOE,UAAU,CAAC;AACvD","ignoreList":[0]}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/fallback.ts"],"sourcesContent":["/**\n * Describes the different fallback modes that a given page can have.\n */\nexport const enum FallbackMode {\n  /**\n   * A BLOCKING_STATIC_RENDER fallback will block the request until the page is\n   * generated. No fallback page will be rendered, and users will have to wait\n   * to render the page.\n   */\n  BLOCKING_STATIC_RENDER = 'BLOCKING_STATIC_RENDER',\n\n  /**\n   * When set to PRERENDER, a fallback page will be sent to users in place of\n   * forcing them to wait for the page to be generated. This allows the user to\n   * see a rendered page earlier.\n   */\n  PRERENDER = 'PRERENDER',\n\n  /**\n   * When set to NOT_FOUND, pages that are not already prerendered will result\n   * in a not found response.\n   */\n  NOT_FOUND = 'NOT_FOUND',\n}\n\n/**\n * The fallback value returned from the `getStaticPaths` function.\n */\nexport type GetStaticPathsFallback = boolean | 'blocking'\n\n/**\n * Parses the fallback field from the prerender manifest.\n *\n * @param fallbackField The fallback field from the prerender manifest.\n * @returns The fallback mode.\n */\nexport function parseFallbackField(\n  fallbackField: string | boolean | null | undefined\n): FallbackMode | undefined {\n  if (typeof fallbackField === 'string') {\n    return FallbackMode.PRERENDER\n  } else if (fallbackField === null) {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else if (fallbackField === false) {\n    return FallbackMode.NOT_FOUND\n  } else if (fallbackField === undefined) {\n    return undefined\n  } else {\n    throw new Error(\n      `Invalid fallback option: ${fallbackField}. Fallback option must be a string, null, undefined, or false.`\n    )\n  }\n}\n\nexport function fallbackModeToFallbackField(\n  fallback: FallbackMode,\n  page: string | undefined\n): string | false | null {\n  switch (fallback) {\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return null\n    case FallbackMode.NOT_FOUND:\n      return false\n    case FallbackMode.PRERENDER:\n      if (!page) {\n        throw new Error(\n          `Invariant: expected a page to be provided when fallback mode is \"${fallback}\"`\n        )\n      }\n\n      return page\n    default:\n      throw new Error(`Invalid fallback mode: ${fallback}`)\n  }\n}\n\n/**\n * Parses the fallback from the static paths result.\n *\n * @param result The result from the static paths function.\n * @returns The fallback mode.\n */\nexport function parseStaticPathsResult(\n  result: GetStaticPathsFallback\n): FallbackMode {\n  if (result === true) {\n    return FallbackMode.PRERENDER\n  } else if (result === 'blocking') {\n    return FallbackMode.BLOCKING_STATIC_RENDER\n  } else {\n    return FallbackMode.NOT_FOUND\n  }\n}\n\n/**\n * Converts the fallback mode to a static paths result.\n *\n * @param fallback The fallback mode.\n * @returns The static paths fallback result.\n */\nexport function fallbackModeToStaticPathsResult(\n  fallback: FallbackMode\n): GetStaticPathsFallback {\n  switch (fallback) {\n    case FallbackMode.PRERENDER:\n      return true\n    case FallbackMode.BLOCKING_STATIC_RENDER:\n      return 'blocking'\n    case FallbackMode.NOT_FOUND:\n    default:\n      return false\n  }\n}\n"],"names":["FallbackMode","parseFallbackField","fallbackField","undefined","Error","fallbackModeToFallbackField","fallback","page","parseStaticPathsResult","result","fallbackModeToStaticPathsResult"],"mappings":"AAAA;;CAEC;;;;;;;AAAA,IAAA;UACiBA,YAAAA;IAChB;;;;GAIC,GAAA,YAAA,CAAA,yBAAA,GAAA;IAGD;;;;GAIC,GAAA,YAAA,CAAA,YAAA,GAAA;IAGD;;;GAGC,GAAA,YAAA,CAAA,YAAA,GAAA;GAlBeA,gBAAAA,CAAAA,eAAAA,CAAAA,CAAAA;AAiCX,SAASC,mBACdC,aAAkD;IAElD,IAAI,OAAOA,kBAAkB,UAAU;QACrC,OAAA;IACF,OAAO,IAAIA,kBAAkB,MAAM;QACjC,OAAA;IACF,OAAO,IAAIA,kBAAkB,OAAO;QAClC,OAAA;IACF,OAAO,IAAIA,kBAAkBC,WAAW;QACtC,OAAOA;IACT,OAAO;QACL,MAAM,IAAIC,MACR,CAAC,yBAAyB,EAAEF,cAAc,8DAA8D,CAAC;IAE7G;AACF;AAEO,SAASG,4BACdC,QAAsB,EACtBC,IAAwB;IAExB,OAAQD;QACN,KAAA;YACE,OAAO;QACT,KAAA;YACE,OAAO;QACT,KAAA;YACE,IAAI,CAACC,MAAM;gBACT,MAAM,IAAIH,MACR,CAAC,iEAAiE,EAAEE,SAAS,CAAC,CAAC;YAEnF;YAEA,OAAOC;QACT;YACE,MAAM,IAAIH,MAAM,CAAC,uBAAuB,EAAEE,SAAS,CAAC;IACxD;AACF;AAQO,SAASE,uBACdC,MAA8B;IAE9B,IAAIA,WAAW,MAAM;QACnB,OAAA;IACF,OAAO,IAAIA,WAAW,YAAY;QAChC,OAAA;IACF,OAAO;QACL,OAAA;IACF;AACF;AAQO,SAASC,gCACdJ,QAAsB;IAEtB,OAAQA;QACN,KAAA;YACE,OAAO;QACT,KAAA;YACE,OAAO;QACT,KAAA;QACA;YACE,OAAO;IACX;AACF","ignoreList":[0]}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/try-to-parse-path.ts"],"sourcesContent":["import type { Token } from 'next/dist/compiled/path-to-regexp'\nimport { parse, tokensToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport { parse as parseURL } from 'url'\nimport isError from './is-error'\n\ninterface ParseResult {\n  error?: any\n  parsedPath: string\n  regexStr?: string\n  route: string\n  tokens?: Token[]\n}\n\n/**\n * If there is an error show our error link but still show original error or\n * a formatted one if we can\n */\nfunction reportError({ route, parsedPath }: ParseResult, err: any) {\n  let errMatches\n  if (isError(err) && (errMatches = err.message.match(/at (\\d{0,})/))) {\n    const position = parseInt(errMatches[1], 10)\n    console.error(\n      `\\nError parsing \\`${route}\\` ` +\n        `https://nextjs.org/docs/messages/invalid-route-source\\n` +\n        `Reason: ${err.message}\\n\\n` +\n        `  ${parsedPath}\\n` +\n        `  ${new Array(position).fill(' ').join('')}^\\n`\n    )\n  } else {\n    console.error(\n      `\\nError parsing ${route} https://nextjs.org/docs/messages/invalid-route-source`,\n      err\n    )\n  }\n}\n\n/**\n * Attempts to parse a given route with `path-to-regexp` and returns an object\n * with the result. Whenever an error happens on parse, it will print an error\n * attempting to find the error position and showing a link to the docs. When\n * `handleUrl` is set to `true` it will also attempt to parse the route\n * and use the resulting pathname to parse with `path-to-regexp`.\n */\nexport function tryToParsePath(\n  route: string,\n  options?: {\n    handleUrl?: boolean\n  }\n): ParseResult {\n  const result: ParseResult = { route, parsedPath: route }\n  try {\n    if (options?.handleUrl) {\n      const parsed = parseURL(route, true)\n      result.parsedPath = `${parsed.pathname!}${parsed.hash || ''}`\n    }\n\n    result.tokens = parse(result.parsedPath)\n    result.regexStr = tokensToRegexp(result.tokens).source\n  } catch (err) {\n    reportError(result, err)\n    result.error = err\n  }\n\n  return result\n}\n"],"names":["parse","tokensToRegexp","parseURL","isError","reportError","route","parsedPath","err","errMatches","message","match","position","parseInt","console","error","Array","fill","join","tryToParsePath","options","result","handleUrl","parsed","pathname","hash","tokens","regexStr","source"],"mappings":";;;AACA,SAASA,KAAK,EAAEC,cAAc,QAAQ,oCAAmC;AACzE,SAASD,SAASE,QAAQ,QAAQ,MAAK;AACvC,OAAOC,aAAa,aAAY;;;;AAUhC;;;CAGC,GACD,SAASC,YAAY,EAAEC,KAAK,EAAEC,UAAU,EAAe,EAAEC,GAAQ;IAC/D,IAAIC;IACJ,0KAAIL,UAAAA,EAAQI,QAASC,CAAAA,aAAaD,IAAIE,OAAO,CAACC,KAAK,CAAC,cAAa,GAAI;QACnE,MAAMC,WAAWC,SAASJ,UAAU,CAAC,EAAE,EAAE;QACzCK,QAAQC,KAAK,CACX,CAAC,kBAAkB,EAAET,MAAM,GAAG,CAAC,GAC7B,CAAC,uDAAuD,CAAC,GACzD,CAAC,QAAQ,EAAEE,IAAIE,OAAO,CAAC,IAAI,CAAC,GAC5B,CAAC,EAAE,EAAEH,WAAW,EAAE,CAAC,GACnB,CAAC,EAAE,EAAE,IAAIS,MAAMJ,UAAUK,IAAI,CAAC,KAAKC,IAAI,CAAC,IAAI,GAAG,CAAC;IAEtD,OAAO;QACLJ,QAAQC,KAAK,CACX,CAAC,gBAAgB,EAAET,MAAM,sDAAsD,CAAC,EAChFE;IAEJ;AACF;AASO,SAASW,eACdb,KAAa,EACbc,OAEC;IAED,MAAMC,SAAsB;QAAEf;QAAOC,YAAYD;IAAM;IACvD,IAAI;QACF,IAAIc,WAAAA,OAAAA,KAAAA,IAAAA,QAASE,SAAS,EAAE;YACtB,MAAMC,UAASpB,sLAAAA,EAASG,OAAO;YAC/Be,OAAOd,UAAU,GAAG,CAAC,EAAEgB,OAAOC,QAAQ,CAAE,EAAED,OAAOE,IAAI,IAAI,GAAG,CAAC;QAC/D;QAEAJ,OAAOK,MAAM,IAAGzB,6LAAAA,EAAMoB,OAAOd,UAAU;QACvCc,OAAOM,QAAQ,yLAAGzB,iBAAAA,EAAemB,OAAOK,MAAM,EAAEE,MAAM;IACxD,EAAE,OAAOpB,KAAK;QACZH,YAAYgB,QAAQb;QACpBa,OAAON,KAAK,GAAGP;IACjB;IAEA,OAAOa;AACT","ignoreList":[0]}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/url.ts"],"sourcesContent":["import { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\n\nconst DUMMY_ORIGIN = 'http://n'\n\nexport function isFullStringUrl(url: string) {\n  return /https?:\\/\\//.test(url)\n}\n\nexport function parseUrl(url: string): URL | undefined {\n  let parsed = undefined\n  try {\n    parsed = new URL(url, DUMMY_ORIGIN)\n  } catch {}\n  return parsed\n}\n\nexport function stripNextRscUnionQuery(relativeUrl: string): string {\n  const urlInstance = new URL(relativeUrl, DUMMY_ORIGIN)\n  urlInstance.searchParams.delete(NEXT_RSC_UNION_QUERY)\n\n  return urlInstance.pathname + urlInstance.search\n}\n"],"names":["NEXT_RSC_UNION_QUERY","DUMMY_ORIGIN","isFullStringUrl","url","test","parseUrl","parsed","undefined","URL","stripNextRscUnionQuery","relativeUrl","urlInstance","searchParams","delete","pathname","search"],"mappings":";;;;;AAAA,SAASA,oBAAoB,QAAQ,0CAAyC;;AAE9E,MAAMC,eAAe;AAEd,SAASC,gBAAgBC,GAAW;IACzC,OAAO,cAAcC,IAAI,CAACD;AAC5B;AAEO,SAASE,SAASF,GAAW;IAClC,IAAIG,SAASC;IACb,IAAI;QACFD,SAAS,IAAIE,IAAIL,KAAKF;IACxB,EAAE,OAAM,CAAC;IACT,OAAOK;AACT;AAEO,SAASG,uBAAuBC,WAAmB;IACxD,MAAMC,cAAc,IAAIH,IAAIE,aAAaT;IACzCU,YAAYC,YAAY,CAACC,MAAM,iMAACb,uBAAAA;IAEhC,OAAOW,YAAYG,QAAQ,GAAGH,YAAYI,MAAM;AAClD","ignoreList":[0]}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/load-custom-routes.ts"],"sourcesContent":["import type { NextConfig } from '../server/config'\nimport type { Token } from 'next/dist/compiled/path-to-regexp'\n\nimport { bold, yellow } from './picocolors'\nimport { escapeStringRegexp } from '../shared/lib/escape-regexp'\nimport { tryToParsePath } from './try-to-parse-path'\nimport { allowedStatusCodes } from './redirect-status'\nimport { isFullStringUrl } from './url'\n\nexport type RouteHas =\n  | {\n      type: string\n      key: string\n      value?: string\n    }\n  | {\n      type: 'host'\n      key?: undefined\n      value: string\n    }\n\nexport type Rewrite = {\n  source: string\n  destination: string\n  basePath?: false\n  locale?: false\n  has?: RouteHas[]\n  missing?: RouteHas[]\n\n  /**\n   * @internal - used internally for routing\n   */\n  internal?: boolean\n}\n\nexport type Header = {\n  source: string\n  basePath?: false\n  locale?: false\n  headers: Array<{ key: string; value: string }>\n  has?: RouteHas[]\n  missing?: RouteHas[]\n\n  /**\n   * @internal - used internally for routing\n   */\n  internal?: boolean\n}\n\n// internal type used for validation (not user facing)\nexport type Redirect = {\n  source: string\n  destination: string\n  basePath?: false\n  locale?: false\n  has?: RouteHas[]\n  missing?: RouteHas[]\n\n  /**\n   * @internal - used internally for routing\n   */\n  internal?: boolean\n} & (\n  | {\n      statusCode?: never\n      permanent: boolean\n    }\n  | {\n      statusCode: number\n      permanent?: never\n    }\n)\n\nexport type Middleware = {\n  source: string\n  locale?: false\n  has?: RouteHas[]\n  missing?: RouteHas[]\n}\n\nconst allowedHasTypes = new Set(['header', 'cookie', 'query', 'host'])\nconst namedGroupsRegex = /\\(\\?<([a-zA-Z][a-zA-Z0-9]*)>/g\n\nexport function normalizeRouteRegex(regex: string) {\n  // clean up un-necessary escaping from regex.source which turns / into \\\\/\n  return regex.replace(/\\\\\\//g, '/')\n}\n\nfunction checkRedirect(route: Redirect): {\n  invalidParts: string[]\n  hadInvalidStatus: boolean\n} {\n  const invalidParts: string[] = []\n  let hadInvalidStatus: boolean = false\n\n  if (route.statusCode && !allowedStatusCodes.has(route['statusCode'])) {\n    hadInvalidStatus = true\n    invalidParts.push(`\\`statusCode\\` is not undefined or valid statusCode`)\n  }\n  if (typeof route.permanent !== 'boolean' && !route['statusCode']) {\n    invalidParts.push(`\\`permanent\\` is not set to \\`true\\` or \\`false\\``)\n  }\n\n  return {\n    invalidParts,\n    hadInvalidStatus,\n  }\n}\n\nfunction checkHeader(route: Header): string[] {\n  const invalidParts: string[] = []\n\n  if (!Array.isArray(route.headers)) {\n    invalidParts.push('`headers` field must be an array')\n  } else if (route.headers.length === 0) {\n    invalidParts.push('`headers` field cannot be empty')\n  } else {\n    for (const header of route.headers) {\n      if (!header || typeof header !== 'object') {\n        invalidParts.push(\n          \"`headers` items must be object with { key: '', value: '' }\"\n        )\n        break\n      }\n      if (typeof header.key !== 'string') {\n        invalidParts.push('`key` in header item must be string')\n        break\n      }\n      if (typeof header.value !== 'string') {\n        invalidParts.push('`value` in header item must be string')\n        break\n      }\n    }\n  }\n  return invalidParts\n}\n\nexport type RouteType = 'rewrite' | 'redirect' | 'header'\n\nexport function checkCustomRoutes(\n  routes: Redirect[] | Header[] | Rewrite[] | Middleware[],\n  type: RouteType | 'middleware'\n): void {\n  if (!Array.isArray(routes)) {\n    console.error(\n      `Error: ${type}s must return an array, received ${typeof routes}.\\n` +\n        `See here for more info: https://nextjs.org/docs/messages/routes-must-be-array`\n    )\n    process.exit(1)\n  }\n\n  let numInvalidRoutes = 0\n  let hadInvalidStatus = false\n  let hadInvalidHas = false\n  let hadInvalidMissing = false\n\n  const allowedKeys = new Set<string>(['source', 'locale', 'has', 'missing'])\n\n  if (type === 'rewrite') {\n    allowedKeys.add('basePath')\n    allowedKeys.add('destination')\n  }\n  if (type === 'redirect') {\n    allowedKeys.add('basePath')\n    allowedKeys.add('statusCode')\n    allowedKeys.add('permanent')\n    allowedKeys.add('destination')\n  }\n  if (type === 'header') {\n    allowedKeys.add('basePath')\n    allowedKeys.add('headers')\n  }\n\n  for (const route of routes) {\n    if (!route || typeof route !== 'object') {\n      console.error(\n        `The route ${JSON.stringify(\n          route\n        )} is not a valid object with \\`source\\`${\n          type !== 'middleware'\n            ? ` and \\`${type === 'header' ? 'headers' : 'destination'}\\``\n            : ''\n        }`\n      )\n      numInvalidRoutes++\n      continue\n    }\n\n    if (\n      type === 'rewrite' &&\n      (route as Rewrite).basePath === false &&\n      !(\n        (route as Rewrite).destination.startsWith('http://') ||\n        (route as Rewrite).destination.startsWith('https://')\n      )\n    ) {\n      console.error(\n        `The route ${\n          (route as Rewrite).source\n        } rewrites urls outside of the basePath. Please use a destination that starts with \\`http://\\` or \\`https://\\` https://nextjs.org/docs/messages/invalid-external-rewrite`\n      )\n      numInvalidRoutes++\n      continue\n    }\n\n    const keys = Object.keys(route)\n    const invalidKeys = keys.filter((key) => !allowedKeys.has(key))\n    const invalidParts: string[] = []\n\n    if (\n      'basePath' in route &&\n      typeof route.basePath !== 'undefined' &&\n      route.basePath !== false\n    ) {\n      invalidParts.push('`basePath` must be undefined or false')\n    }\n\n    if (typeof route.locale !== 'undefined' && route.locale !== false) {\n      invalidParts.push('`locale` must be undefined or false')\n    }\n\n    const checkInvalidHasMissing = (\n      items: any,\n      fieldName: 'has' | 'missing'\n    ) => {\n      let hadInvalidItem = false\n\n      if (typeof items !== 'undefined' && !Array.isArray(items)) {\n        invalidParts.push(\n          `\\`${fieldName}\\` must be undefined or valid has object`\n        )\n        hadInvalidItem = true\n      } else if (items) {\n        const invalidHasItems = []\n\n        for (const hasItem of items) {\n          let invalidHasParts = []\n\n          if (!allowedHasTypes.has(hasItem.type)) {\n            invalidHasParts.push(`invalid type \"${hasItem.type}\"`)\n          }\n          if (typeof hasItem.key !== 'string' && hasItem.type !== 'host') {\n            invalidHasParts.push(`invalid key \"${hasItem.key}\"`)\n          }\n          if (\n            typeof hasItem.value !== 'undefined' &&\n            typeof hasItem.value !== 'string'\n          ) {\n            invalidHasParts.push(`invalid value \"${hasItem.value}\"`)\n          }\n          if (typeof hasItem.value === 'undefined' && hasItem.type === 'host') {\n            invalidHasParts.push(`value is required for \"host\" type`)\n          }\n\n          if (invalidHasParts.length > 0) {\n            invalidHasItems.push(\n              `${invalidHasParts.join(', ')} for ${JSON.stringify(hasItem)}`\n            )\n          }\n        }\n\n        if (invalidHasItems.length > 0) {\n          hadInvalidItem = true\n          const itemStr = `item${invalidHasItems.length === 1 ? '' : 's'}`\n\n          console.error(\n            `Invalid \\`${fieldName}\\` ${itemStr}:\\n` +\n              invalidHasItems.join('\\n')\n          )\n          console.error()\n          invalidParts.push(`invalid \\`${fieldName}\\` ${itemStr} found`)\n        }\n      }\n      return hadInvalidItem\n    }\n    if (checkInvalidHasMissing(route.has, 'has')) {\n      hadInvalidHas = true\n    }\n    if (checkInvalidHasMissing(route.missing, 'missing')) {\n      hadInvalidMissing = true\n    }\n\n    if (!route.source) {\n      invalidParts.push('`source` is missing')\n    } else if (typeof route.source !== 'string') {\n      invalidParts.push('`source` is not a string')\n    } else if (!route.source.startsWith('/')) {\n      invalidParts.push('`source` does not start with /')\n    }\n\n    if (type === 'header') {\n      invalidParts.push(...checkHeader(route as Header))\n    } else if (type !== 'middleware') {\n      let _route = route as Rewrite | Redirect\n      if (!_route.destination) {\n        invalidParts.push('`destination` is missing')\n      } else if (typeof _route.destination !== 'string') {\n        invalidParts.push('`destination` is not a string')\n      } else if (\n        type === 'rewrite' &&\n        !_route.destination.match(/^(\\/|https:\\/\\/|http:\\/\\/)/)\n      ) {\n        invalidParts.push(\n          '`destination` does not start with `/`, `http://`, or `https://`'\n        )\n      }\n    }\n\n    if (type === 'redirect') {\n      const result = checkRedirect(route as Redirect)\n      hadInvalidStatus = hadInvalidStatus || result.hadInvalidStatus\n      invalidParts.push(...result.invalidParts)\n    }\n\n    let sourceTokens: Token[] | undefined\n\n    if (typeof route.source === 'string' && route.source.startsWith('/')) {\n      // only show parse error if we didn't already show error\n      // for not being a string\n      const { tokens, error, regexStr } = tryToParsePath(route.source)\n\n      if (error) {\n        invalidParts.push('`source` parse failed')\n      }\n\n      if (regexStr && regexStr.length > 4096) {\n        invalidParts.push('`source` exceeds max built length of 4096')\n      }\n\n      sourceTokens = tokens\n    }\n    const hasSegments = new Set<string>()\n\n    if (route.has) {\n      for (const hasItem of route.has) {\n        if (!hasItem.value && hasItem.key) {\n          hasSegments.add(hasItem.key)\n        }\n\n        if (hasItem.value) {\n          for (const match of hasItem.value.matchAll(namedGroupsRegex)) {\n            if (match[1]) {\n              hasSegments.add(match[1])\n            }\n          }\n\n          if (hasItem.type === 'host') {\n            hasSegments.add('host')\n          }\n        }\n      }\n    }\n\n    // make sure no unnamed patterns are attempted to be used in the\n    // destination as this can cause confusion and is not allowed\n    if (typeof (route as Rewrite).destination === 'string') {\n      if (\n        (route as Rewrite).destination.startsWith('/') &&\n        Array.isArray(sourceTokens)\n      ) {\n        const unnamedInDest = new Set()\n\n        for (const token of sourceTokens) {\n          if (typeof token === 'object' && typeof token.name === 'number') {\n            const unnamedIndex = new RegExp(`:${token.name}(?!\\\\d)`)\n            if ((route as Rewrite).destination.match(unnamedIndex)) {\n              unnamedInDest.add(`:${token.name}`)\n            }\n          }\n        }\n\n        if (unnamedInDest.size > 0) {\n          invalidParts.push(\n            `\\`destination\\` has unnamed params ${[...unnamedInDest].join(\n              ', '\n            )}`\n          )\n        } else {\n          const {\n            tokens: destTokens,\n            regexStr: destRegexStr,\n            error: destinationParseFailed,\n          } = tryToParsePath((route as Rewrite).destination, {\n            handleUrl: true,\n          })\n\n          if (destRegexStr && destRegexStr.length > 4096) {\n            invalidParts.push('`destination` exceeds max built length of 4096')\n          }\n\n          if (destinationParseFailed) {\n            invalidParts.push('`destination` parse failed')\n          } else {\n            const sourceSegments = new Set(\n              sourceTokens\n                .map((item) => typeof item === 'object' && item.name)\n                .filter(Boolean)\n            )\n            const invalidDestSegments = new Set()\n\n            for (const token of destTokens!) {\n              if (\n                typeof token === 'object' &&\n                !sourceSegments.has(token.name) &&\n                !hasSegments.has(token.name as string)\n              ) {\n                invalidDestSegments.add(token.name)\n              }\n            }\n\n            if (invalidDestSegments.size) {\n              invalidParts.push(\n                `\\`destination\\` has segments not in \\`source\\` or \\`has\\` (${[\n                  ...invalidDestSegments,\n                ].join(', ')})`\n              )\n            }\n          }\n        }\n      }\n    }\n\n    const hasInvalidKeys = invalidKeys.length > 0\n    const hasInvalidParts = invalidParts.length > 0\n\n    if (hasInvalidKeys || hasInvalidParts) {\n      console.error(\n        `${invalidParts.join(', ')}${\n          invalidKeys.length\n            ? (hasInvalidParts ? ',' : '') +\n              ` invalid field${invalidKeys.length === 1 ? '' : 's'}: ` +\n              invalidKeys.join(',')\n            : ''\n        } for route ${JSON.stringify(route)}`\n      )\n      console.error()\n      numInvalidRoutes++\n    }\n  }\n\n  if (numInvalidRoutes > 0) {\n    if (hadInvalidStatus) {\n      console.error(\n        `\\nValid redirect statusCode values are ${[...allowedStatusCodes].join(\n          ', '\n        )}`\n      )\n    }\n    if (hadInvalidHas) {\n      console.error(\n        `\\nValid \\`has\\` object shape is ${JSON.stringify(\n          {\n            type: [...allowedHasTypes].join(', '),\n            key: 'the key to check for',\n            value: 'undefined or a value string to match against',\n          },\n          null,\n          2\n        )}`\n      )\n    }\n    if (hadInvalidMissing) {\n      console.error(\n        `\\nValid \\`missing\\` object shape is ${JSON.stringify(\n          {\n            type: [...allowedHasTypes].join(', '),\n            key: 'the key to check for',\n            value: 'undefined or a value string to match against',\n          },\n          null,\n          2\n        )}`\n      )\n    }\n    console.error()\n    console.error(\n      `Error: Invalid ${type}${numInvalidRoutes === 1 ? '' : 's'} found`\n    )\n    process.exit(1)\n  }\n}\n\nexport interface CustomRoutes {\n  headers: Header[]\n  rewrites: {\n    fallback: Rewrite[]\n    afterFiles: Rewrite[]\n    beforeFiles: Rewrite[]\n  }\n  redirects: Redirect[]\n}\n\nfunction processRoutes<T>(\n  routes: T,\n  config: NextConfig,\n  type: 'redirect' | 'rewrite' | 'header'\n): T {\n  const _routes = routes as any as Array<{\n    source: string\n    locale?: false\n    basePath?: false\n    destination?: string\n  }>\n  const newRoutes: typeof _routes = []\n  const defaultLocales: Array<{\n    locale: string\n    base: string\n  }> = []\n\n  if (config.i18n && type === 'redirect') {\n    for (const item of config.i18n?.domains || []) {\n      defaultLocales.push({\n        locale: item.defaultLocale,\n        base: `http${item.http ? '' : 's'}://${item.domain}`,\n      })\n    }\n\n    defaultLocales.push({\n      locale: config.i18n.defaultLocale,\n      base: '',\n    })\n  }\n\n  for (const r of _routes) {\n    const srcBasePath =\n      config.basePath && r.basePath !== false ? config.basePath : ''\n    const isExternal = !r.destination?.startsWith('/')\n    const destBasePath = srcBasePath && !isExternal ? srcBasePath : ''\n\n    if (config.i18n && r.locale !== false) {\n      if (!isExternal) {\n        defaultLocales.forEach((item) => {\n          let destination\n\n          if (r.destination) {\n            destination = item.base\n              ? `${item.base}${destBasePath}${r.destination}`\n              : `${destBasePath}${r.destination}`\n          }\n\n          newRoutes.push({\n            ...r,\n            destination,\n            source: `${srcBasePath}/${item.locale}${\n              r.source === '/' && !config.trailingSlash ? '' : r.source\n            }`,\n          })\n        })\n      }\n\n      r.source = `/:nextInternalLocale(${config.i18n.locales\n        .map((locale: string) => escapeStringRegexp(locale))\n        .join('|')})${\n        r.source === '/' && !config.trailingSlash ? '' : r.source\n      }`\n\n      if (r.destination && r.destination?.startsWith('/')) {\n        r.destination = `/:nextInternalLocale${\n          r.destination === '/' && !config.trailingSlash ? '' : r.destination\n        }`\n      }\n    }\n    r.source = `${srcBasePath}${\n      r.source === '/' && srcBasePath ? '' : r.source\n    }`\n\n    if (r.destination) {\n      r.destination = `${destBasePath}${\n        r.destination === '/' && destBasePath ? '' : r.destination\n      }`\n    }\n    newRoutes.push(r)\n  }\n  return newRoutes as any as T\n}\n\nasync function loadRedirects(config: NextConfig) {\n  if (typeof config.redirects !== 'function') {\n    return []\n  }\n  let redirects = await config.redirects()\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(redirects, 'redirect')\n\n  // save original redirects before transforms\n  if (Array.isArray(redirects)) {\n    config._originalRedirects = redirects.map((r) => ({ ...r }))\n  }\n  redirects = processRoutes(redirects, config, 'redirect')\n  checkCustomRoutes(redirects, 'redirect')\n  return redirects\n}\n\nasync function loadRewrites(config: NextConfig) {\n  // If assetPrefix is set, add a rewrite for `/${assetPrefix}/_next/*`\n  // requests so that they are handled in any of dev, start, or deploy\n  // automatically without the user having to configure this.\n  // If the assetPrefix is an absolute URL, we can't add an automatic rewrite.\n  let maybeAssetPrefixRewrite: Rewrite[] = []\n  if (config.assetPrefix && !isFullStringUrl(config.assetPrefix)) {\n    const assetPrefix = config.assetPrefix.startsWith('/')\n      ? config.assetPrefix\n      : `/${config.assetPrefix}`\n    const basePath = config.basePath || ''\n    // If these are the same, then this would result in an infinite rewrite.\n    if (assetPrefix !== basePath) {\n      maybeAssetPrefixRewrite.push({\n        source: `${assetPrefix}/_next/:path+`,\n        destination: `${basePath}/_next/:path+`,\n      })\n    }\n  }\n\n  if (typeof config.rewrites !== 'function') {\n    return {\n      beforeFiles: [...maybeAssetPrefixRewrite],\n      afterFiles: [],\n      fallback: [],\n    }\n  }\n  const _rewrites = await config.rewrites()\n  let beforeFiles: Rewrite[] = []\n  let afterFiles: Rewrite[] = []\n  let fallback: Rewrite[] = []\n\n  if (\n    !Array.isArray(_rewrites) &&\n    typeof _rewrites === 'object' &&\n    Object.keys(_rewrites).every(\n      (key) =>\n        key === 'beforeFiles' || key === 'afterFiles' || key === 'fallback'\n    )\n  ) {\n    beforeFiles = _rewrites.beforeFiles || []\n    afterFiles = _rewrites.afterFiles || []\n    fallback = _rewrites.fallback || []\n  } else {\n    afterFiles = _rewrites as any\n  }\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(beforeFiles, 'rewrite')\n  checkCustomRoutes(afterFiles, 'rewrite')\n  checkCustomRoutes(fallback, 'rewrite')\n\n  // save original rewrites before transforms\n  config._originalRewrites = {\n    beforeFiles: beforeFiles.map((r) => ({ ...r })),\n    afterFiles: afterFiles.map((r) => ({ ...r })),\n    fallback: fallback.map((r) => ({ ...r })),\n  }\n\n  beforeFiles = [\n    ...maybeAssetPrefixRewrite,\n    ...processRoutes(beforeFiles, config, 'rewrite'),\n  ]\n  afterFiles = processRoutes(afterFiles, config, 'rewrite')\n  fallback = processRoutes(fallback, config, 'rewrite')\n\n  checkCustomRoutes(beforeFiles, 'rewrite')\n  checkCustomRoutes(afterFiles, 'rewrite')\n  checkCustomRoutes(fallback, 'rewrite')\n\n  return {\n    beforeFiles,\n    afterFiles,\n    fallback,\n  }\n}\n\nasync function loadHeaders(config: NextConfig) {\n  if (typeof config.headers !== 'function') {\n    return []\n  }\n  let headers = await config.headers()\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(headers, 'header')\n\n  headers = processRoutes(headers, config, 'header')\n  checkCustomRoutes(headers, 'header')\n  return headers\n}\n\nexport default async function loadCustomRoutes(\n  config: NextConfig\n): Promise<CustomRoutes> {\n  const [headers, rewrites, redirects] = await Promise.all([\n    loadHeaders(config),\n    loadRewrites(config),\n    loadRedirects(config),\n  ])\n\n  const totalRewrites =\n    rewrites.beforeFiles.length +\n    rewrites.afterFiles.length +\n    rewrites.fallback.length\n\n  const totalRoutes = headers.length + redirects.length + totalRewrites\n\n  if (totalRoutes > 1000) {\n    console.warn(\n      bold(yellow(`Warning: `)) +\n        `total number of custom routes exceeds 1000, this can reduce performance. Route counts:\\n` +\n        `headers: ${headers.length}\\n` +\n        `rewrites: ${totalRewrites}\\n` +\n        `redirects: ${redirects.length}\\n` +\n        `See more info: https://nextjs.org/docs/messages/max-custom-routes-reached`\n    )\n  }\n\n  if (!config.skipTrailingSlashRedirect) {\n    if (config.trailingSlash) {\n      redirects.unshift(\n        {\n          source: '/:file((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\\\.\\\\w+)/',\n          destination: '/:file',\n          permanent: true,\n          locale: config.i18n ? false : undefined,\n          internal: true,\n          // don't run this redirect for _next/data requests\n          missing: [\n            {\n              type: 'header',\n              key: 'x-nextjs-data',\n            },\n          ],\n        },\n        {\n          source: '/:notfile((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\\\.]+)',\n          destination: '/:notfile/',\n          permanent: true,\n          locale: config.i18n ? false : undefined,\n          internal: true,\n        }\n      )\n      if (config.basePath) {\n        redirects.unshift({\n          source: config.basePath,\n          destination: config.basePath + '/',\n          permanent: true,\n          basePath: false,\n          locale: config.i18n ? false : undefined,\n          internal: true,\n        })\n      }\n    } else {\n      redirects.unshift({\n        source: '/:path+/',\n        destination: '/:path+',\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true,\n      })\n      if (config.basePath) {\n        redirects.unshift({\n          source: config.basePath + '/',\n          destination: config.basePath,\n          permanent: true,\n          basePath: false,\n          locale: config.i18n ? false : undefined,\n          internal: true,\n        })\n      }\n    }\n  }\n\n  return {\n    headers,\n    rewrites,\n    redirects,\n  }\n}\n"],"names":["bold","yellow","escapeStringRegexp","tryToParsePath","allowedStatusCodes","isFullStringUrl","allowedHasTypes","Set","namedGroupsRegex","normalizeRouteRegex","regex","replace","checkRedirect","route","invalidParts","hadInvalidStatus","statusCode","has","push","permanent","checkHeader","Array","isArray","headers","length","header","key","value","checkCustomRoutes","routes","type","console","error","process","exit","numInvalidRoutes","hadInvalidHas","hadInvalidMissing","allowedKeys","add","JSON","stringify","basePath","destination","startsWith","source","keys","Object","invalidKeys","filter","locale","checkInvalidHasMissing","items","fieldName","hadInvalidItem","invalidHasItems","hasItem","invalidHasParts","join","itemStr","missing","_route","match","result","sourceTokens","tokens","regexStr","hasSegments","matchAll","unnamedInDest","token","name","unnamedIndex","RegExp","size","destTokens","destRegexStr","destinationParseFailed","handleUrl","sourceSegments","map","item","Boolean","invalidDestSegments","hasInvalidKeys","hasInvalidParts","processRoutes","config","_routes","newRoutes","defaultLocales","i18n","domains","defaultLocale","base","http","domain","r","srcBasePath","isExternal","destBasePath","forEach","trailingSlash","locales","loadRedirects","redirects","_originalRedirects","loadRewrites","maybeAssetPrefixRewrite","assetPrefix","rewrites","beforeFiles","afterFiles","fallback","_rewrites","every","_originalRewrites","loadHeaders","loadCustomRoutes","Promise","all","totalRewrites","totalRoutes","warn","skipTrailingSlashRedirect","unshift","undefined","internal"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1423, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/build-custom-route.ts"],"sourcesContent":["import { pathToRegexp } from 'next/dist/compiled/path-to-regexp'\nimport type {\n  ManifestHeaderRoute,\n  ManifestRedirectRoute,\n  ManifestRewriteRoute,\n} from '../build'\nimport {\n  normalizeRouteRegex,\n  type Header,\n  type Redirect,\n  type Rewrite,\n  type RouteType,\n} from './load-custom-routes'\nimport { getRedirectStatus, modifyRouteRegex } from './redirect-status'\n\nexport function buildCustomRoute(\n  type: 'header',\n  route: Header\n): ManifestHeaderRoute\nexport function buildCustomRoute(\n  type: 'rewrite',\n  route: Rewrite\n): ManifestRewriteRoute\nexport function buildCustomRoute(\n  type: 'redirect',\n  route: Redirect,\n  restrictedRedirectPaths: string[]\n): ManifestRedirectRoute\nexport function buildCustomRoute(\n  type: RouteType,\n  route: Redirect | Rewrite | Header,\n  restrictedRedirectPaths?: string[]\n): ManifestHeaderRoute | ManifestRewriteRoute | ManifestRedirectRoute {\n  const compiled = pathToRegexp(route.source, [], {\n    strict: true,\n    sensitive: false,\n    delimiter: '/', // default is `/#?`, but Next does not pass query info\n  })\n\n  let source = compiled.source\n  if (!route.internal) {\n    source = modifyRouteRegex(\n      source,\n      type === 'redirect' ? restrictedRedirectPaths : undefined\n    )\n  }\n\n  const regex = normalizeRouteRegex(source)\n\n  if (type !== 'redirect') {\n    return { ...route, regex }\n  }\n\n  return {\n    ...route,\n    statusCode: getRedirectStatus(route as Redirect),\n    permanent: undefined,\n    regex,\n  }\n}\n"],"names":["pathToRegexp","normalizeRouteRegex","getRedirectStatus","modifyRouteRegex","buildCustomRoute","type","route","restrictedRedirectPaths","compiled","source","strict","sensitive","delimiter","internal","undefined","regex","statusCode","permanent"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,oCAAmC;AAMhE,SACEC,mBAAmB,QAKd,uBAAsB;AAC7B,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,oBAAmB;;;;AAehE,SAASC,iBACdC,IAAe,EACfC,KAAkC,EAClCC,uBAAkC;IAElC,MAAMC,iMAAWR,eAAAA,EAAaM,MAAMG,MAAM,EAAE,EAAE,EAAE;QAC9CC,QAAQ;QACRC,WAAW;QACXC,WAAW;IACb;IAEA,IAAIH,SAASD,SAASC,MAAM;IAC5B,IAAI,CAACH,MAAMO,QAAQ,EAAE;QACnBJ,sLAASN,mBAAAA,EACPM,QACAJ,SAAS,aAAaE,0BAA0BO;IAEpD;IAEA,MAAMC,2LAAQd,sBAAAA,EAAoBQ;IAElC,IAAIJ,SAAS,YAAY;QACvB,OAAO;YAAE,GAAGC,KAAK;YAAES;QAAM;IAC3B;IAEA,OAAO;QACL,GAAGT,KAAK;QACRU,yLAAYd,oBAAAA,EAAkBI;QAC9BW,WAAWH;QACXC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1462, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/metadata-constants.tsx"],"sourcesContent":["export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\n"],"names":["METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME"],"mappings":";;;;;AAAO,MAAMA,yBAAyB,6BAA4B;AAC3D,MAAMC,yBAAyB,6BAA4B;AAC3D,MAAMC,uBAAuB,2BAA0B","ignoreList":[0]}},
    {"offset": {"line": 1470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1476, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/metadata-context.tsx"],"sourcesContent":["import type { AppRenderContext } from '../../server/app-render/app-render'\nimport type { MetadataContext } from './types/resolvers'\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external'\nimport { trackFallbackParamAccessed } from '../../server/app-render/dynamic-rendering'\n\nexport function createMetadataContext(\n  pathname: string,\n  renderOpts: AppRenderContext['renderOpts']\n): MetadataContext {\n  return {\n    pathname,\n    trailingSlash: renderOpts.trailingSlash,\n    isStandaloneMode: renderOpts.nextConfigOutput === 'standalone',\n  }\n}\n\nexport function createTrackedMetadataContext(\n  pathname: string,\n  renderOpts: AppRenderContext['renderOpts'],\n  workStore: WorkStore | null\n): MetadataContext {\n  return {\n    // Use the regular metadata context, but we trap the pathname access.\n    ...createMetadataContext(pathname, renderOpts),\n\n    // Setup the trap around the pathname access so we can track when the\n    // pathname is accessed while resolving metadata which would indicate it's\n    // being used to resolve a relative URL. If that's the case, we don't want\n    // to provide it, and instead we should error.\n    get pathname() {\n      if (\n        workStore &&\n        workStore.isStaticGeneration &&\n        workStore.fallbackRouteParams &&\n        workStore.fallbackRouteParams.size > 0\n      ) {\n        trackFallbackParamAccessed(workStore, 'metadata relative url resolving')\n      }\n\n      return pathname\n    },\n  }\n}\n"],"names":["trackFallbackParamAccessed","createMetadataContext","pathname","renderOpts","trailingSlash","isStandaloneMode","nextConfigOutput","createTrackedMetadataContext","workStore","isStaticGeneration","fallbackRouteParams","size"],"mappings":";;;;AAGA,SAASA,0BAA0B,QAAQ,4CAA2C;;AAE/E,SAASC,sBACdC,QAAgB,EAChBC,UAA0C;IAE1C,OAAO;QACLD;QACAE,eAAeD,WAAWC,aAAa;QACvCC,kBAAkBF,WAAWG,gBAAgB,KAAK;IACpD;AACF;AAEO,SAASC,6BACdL,QAAgB,EAChBC,UAA0C,EAC1CK,SAA2B;IAE3B,OAAO;QACL,qEAAqE;QACrE,GAAGP,sBAAsBC,UAAUC,WAAW;QAE9C,qEAAqE;QACrE,0EAA0E;QAC1E,0EAA0E;QAC1E,8CAA8C;QAC9C,IAAID,YAAW;YACb,IACEM,aACAA,UAAUC,kBAAkB,IAC5BD,UAAUE,mBAAmB,IAC7BF,UAAUE,mBAAmB,CAACC,IAAI,GAAG,GACrC;mNACAX,6BAAAA,EAA2BQ,WAAW;YACxC;YAEA,OAAON;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/format-server-error.ts"],"sourcesContent":["const invalidServerComponentReactHooks = [\n  'useDeferredValue',\n  'useEffect',\n  'useImperativeHandle',\n  'useInsertionEffect',\n  'useLayoutEffect',\n  'useReducer',\n  'useRef',\n  'useState',\n  'useSyncExternalStore',\n  'useTransition',\n  'experimental_useOptimistic',\n  'useOptimistic',\n]\n\nfunction setMessage(error: Error, message: string): void {\n  error.message = message\n  if (error.stack) {\n    const lines = error.stack.split('\\n')\n    lines[0] = message\n    error.stack = lines.join('\\n')\n  }\n}\n\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */\nexport function getStackWithoutErrorMessage(error: Error): string {\n  const stack = error.stack\n  if (!stack) return ''\n  return stack.replace(/^[^\\n]*\\n/, '')\n}\n\nexport function formatServerError(error: Error): void {\n  if (typeof error?.message !== 'string') return\n\n  if (\n    error.message.includes(\n      'Class extends value undefined is not a constructor or null'\n    )\n  ) {\n    const addedMessage =\n      'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component'\n\n    // If this error instance already has the message, don't add it again\n    if (error.message.includes(addedMessage)) return\n\n    setMessage(\n      error,\n      `${error.message}\n\n${addedMessage}`\n    )\n    return\n  }\n\n  if (error.message.includes('createContext is not a function')) {\n    setMessage(\n      error,\n      'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component'\n    )\n    return\n  }\n\n  for (const clientHook of invalidServerComponentReactHooks) {\n    const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`)\n    if (regex.test(error.message)) {\n      setMessage(\n        error,\n        `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`\n      )\n      return\n    }\n  }\n}\n"],"names":["invalidServerComponentReactHooks","setMessage","error","message","stack","lines","split","join","getStackWithoutErrorMessage","replace","formatServerError","includes","addedMessage","clientHook","regex","RegExp","test"],"mappings":";;;;AAAA,MAAMA,mCAAmC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,SAASC,WAAWC,KAAY,EAAEC,OAAe;IAC/CD,MAAMC,OAAO,GAAGA;IAChB,IAAID,MAAME,KAAK,EAAE;QACf,MAAMC,QAAQH,MAAME,KAAK,CAACE,KAAK,CAAC;QAChCD,KAAK,CAAC,EAAE,GAAGF;QACXD,MAAME,KAAK,GAAGC,MAAME,IAAI,CAAC;IAC3B;AACF;AAYO,SAASC,4BAA4BN,KAAY;IACtD,MAAME,QAAQF,MAAME,KAAK;IACzB,IAAI,CAACA,OAAO,OAAO;IACnB,OAAOA,MAAMK,OAAO,CAAC,aAAa;AACpC;AAEO,SAASC,kBAAkBR,KAAY;IAC5C,IAAI,OAAA,CAAOA,SAAAA,OAAAA,KAAAA,IAAAA,MAAOC,OAAO,MAAK,UAAU;IAExC,IACED,MAAMC,OAAO,CAACQ,QAAQ,CACpB,+DAEF;QACA,MAAMC,eACJ;QAEF,qEAAqE;QACrE,IAAIV,MAAMC,OAAO,CAACQ,QAAQ,CAACC,eAAe;QAE1CX,WACEC,OACA,CAAC,EAAEA,MAAMC,OAAO,CAAC;;AAEvB,EAAES,aAAa,CAAC;QAEZ;IACF;IAEA,IAAIV,MAAMC,OAAO,CAACQ,QAAQ,CAAC,oCAAoC;QAC7DV,WACEC,OACA;QAEF;IACF;IAEA,KAAK,MAAMW,cAAcb,iCAAkC;QACzD,MAAMc,QAAQ,IAAIC,OAAO,CAAC,GAAG,EAAEF,WAAW,sBAAsB,CAAC;QACjE,IAAIC,MAAME,IAAI,CAACd,MAAMC,OAAO,GAAG;YAC7BF,WACEC,OACA,CAAC,EAAEW,WAAW,oLAAoL,CAAC;YAErM;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/client-reference.ts"],"sourcesContent":["export function isClientReference(mod: any): boolean {\n  const defaultExport = mod?.default || mod\n  return defaultExport?.$$typeof === Symbol.for('react.client.reference')\n}\n"],"names":["isClientReference","mod","defaultExport","default","$$typeof","Symbol","for"],"mappings":";;;AAAO,SAASA,kBAAkBC,GAAQ;IACxC,MAAMC,gBAAgBD,CAAAA,OAAAA,OAAAA,KAAAA,IAAAA,IAAKE,OAAO,KAAIF;IACtC,OAAOC,CAAAA,iBAAAA,OAAAA,KAAAA,IAAAA,cAAeE,QAAQ,MAAKC,OAAOC,GAAG,CAAC;AAChD","ignoreList":[0]}},
    {"offset": {"line": 1578, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/detached-promise.ts"],"sourcesContent":["/**\n * A `Promise.withResolvers` implementation that exposes the `resolve` and\n * `reject` functions on a `Promise`.\n *\n * @see https://tc39.es/proposal-promise-with-resolvers/\n */\nexport class DetachedPromise<T = any> {\n  public readonly resolve: (value: T | PromiseLike<T>) => void\n  public readonly reject: (reason: any) => void\n  public readonly promise: Promise<T>\n\n  constructor() {\n    let resolve: (value: T | PromiseLike<T>) => void\n    let reject: (reason: any) => void\n\n    // Create the promise and assign the resolvers to the object.\n    this.promise = new Promise<T>((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n\n    // We know that resolvers is defined because the Promise constructor runs\n    // synchronously.\n    this.resolve = resolve!\n    this.reject = reject!\n  }\n}\n"],"names":["DetachedPromise","constructor","resolve","reject","promise","Promise","res","rej"],"mappings":"AAAA;;;;;CAKC,GACD;;;AAAO,MAAMA;IAKXC,aAAc;QACZ,IAAIC;QACJ,IAAIC;QAEJ,6DAA6D;QAC7D,IAAI,CAACC,OAAO,GAAG,IAAIC,QAAW,CAACC,KAAKC;YAClCL,UAAUI;YACVH,SAASI;QACX;QAEA,yEAAyE;QACzE,iBAAiB;QACjB,IAAI,CAACL,OAAO,GAAGA;QACf,IAAI,CAACC,MAAM,GAAGA;IAChB;AACF","ignoreList":[0]}},
    {"offset": {"line": 1607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1613, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/scheduler.ts"],"sourcesContent":["export type ScheduledFn<T = void> = () => T | PromiseLike<T>\nexport type SchedulerFn<T = void> = (cb: ScheduledFn<T>) => void\n\n/**\n * Schedules a function to be called on the next tick after the other promises\n * have been resolved.\n *\n * @param cb the function to schedule\n */\nexport const scheduleOnNextTick = <T = void>(cb: ScheduledFn<T>): void => {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n      setTimeout(cb, 0)\n    } else {\n      process.nextTick(cb)\n    }\n  })\n}\n\n/**\n * Schedules a function to be called using `setImmediate` or `setTimeout` if\n * `setImmediate` is not available (like in the Edge runtime).\n *\n * @param cb the function to schedule\n */\nexport const scheduleImmediate = <T = void>(cb: ScheduledFn<T>): void => {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    setTimeout(cb, 0)\n  } else {\n    setImmediate(cb)\n  }\n}\n\n/**\n * returns a promise than resolves in a future task. There is no guarantee that the task it resolves in\n * will be the next task but if you await it you can at least be sure that the current task is over and\n * most usefully that the entire microtask queue of the current task has been emptied.\n */\nexport function atLeastOneTask() {\n  return new Promise<void>((resolve) => scheduleImmediate(resolve))\n}\n\n/**\n * This utility function is extracted to make it easier to find places where we are doing\n * specific timing tricks to try to schedule work after React has rendered. This is especially\n * important at the moment because Next.js uses the edge builds of React which use setTimeout to\n * schedule work when you might expect that something like setImmediate would do the trick.\n *\n * Long term we should switch to the node versions of React rendering when possible and then\n * update this to use setImmediate rather than setTimeout\n */\nexport function waitAtLeastOneReactRenderTask(): Promise<void> {\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    return new Promise((r) => setTimeout(r, 0))\n  } else {\n    return new Promise((r) => setImmediate(r))\n  }\n}\n"],"names":["scheduleOnNextTick","cb","Promise","resolve","then","process","env","NEXT_RUNTIME","setTimeout","nextTick","scheduleImmediate","setImmediate","atLeastOneTask","waitAtLeastOneReactRenderTask","r"],"mappings":"AAGA;;;;;CAKC,GACD;;;;;;AAAO,MAAMA,qBAAqB,CAAWC;IAC3C,6EAA6E;IAC7E,4EAA4E;IAC5E,uCAAuC;IACvC,EAAE;IACF,kLAAkL;IAClL,EAAE;IACFC,QAAQC,OAAO,GAAGC,IAAI,CAAC;QACrB,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;YACvCC,WAAWP,IAAI;QACjB,OAAO;;QAEP;IACF;AACF,EAAC;AAQM,MAAMS,oBAAoB,CAAWT;IAC1C,IAAII,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;QACvCC,WAAWP,IAAI;IACjB,OAAO;;IAEP;AACF,EAAC;AAOM,SAASW;IACd,OAAO,IAAIV,QAAc,CAACC,UAAYO,kBAAkBP;AAC1D;AAWO,SAASU;IACd,IAAIR,QAAQC,GAAG,CAACC,YAAY,KAAK,OAAQ;QACvC,OAAO,IAAIL,QAAQ,CAACY,IAAMN,WAAWM,GAAG;IAC1C,OAAO;;IAEP;AACF","ignoreList":[0]}},
    {"offset": {"line": 1656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1662, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/constants.ts"],"sourcesContent":["import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_SOFT_TAGS_HEADER = 'x-next-cache-soft-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 64\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The layer for the API routes.\n   */\n  api: 'api',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.api,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n"],"names":["NEXT_QUERY_PARAM_PREFIX","NEXT_INTERCEPTION_MARKER_PREFIX","MATCHED_PATH_HEADER","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","ACTION_SUFFIX","NEXT_DATA_SUFFIX","NEXT_META_SUFFIX","NEXT_BODY_SUFFIX","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_SOFT_TAGS_HEADER","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_RESUME_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_IMPLICIT_TAG_ID","CACHE_ONE_YEAR","INFINITE_CACHE","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","INSTRUMENTATION_HOOK_FILENAME","PAGES_DIR_ALIAS","DOT_NEXT_ALIAS","ROOT_DIR_ALIAS","APP_DIR_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","PUBLIC_DIR_MIDDLEWARE_CONFLICT","SSG_GET_INITIAL_PROPS_CONFLICT","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","SERVER_PROPS_EXPORT_ERROR","GSP_NO_RETURNED_VALUE","GSSP_NO_RETURNED_VALUE","UNSTABLE_REVALIDATE_RENAME_ERROR","GSSP_COMPONENT_MEMBER_ERROR","NON_STANDARD_NODE_ENV","SSG_FALLBACK_EXPORT_ERROR","ESLINT_DEFAULT_DIRS","SERVER_RUNTIME","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","api","middleware","instrument","edgeAsset","appPagesBrowser","WEBPACK_LAYERS","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","WEBPACK_RESOURCE_QUERIES","edgeSSREntry","metadata","metadataRoute","metadataImageMeta"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1857, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1863, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/metadata-constants.tsx"],"sourcesContent":["export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\n"],"names":["METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME"],"mappings":";;;;;AAAO,MAAMA,yBAAyB,6BAA4B;AAC3D,MAAMC,yBAAyB,6BAA4B;AAC3D,MAAMC,uBAAuB,2BAA0B","ignoreList":[0]}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1877, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/metadata-context.tsx"],"sourcesContent":["import type { AppRenderContext } from '../../server/app-render/app-render'\nimport type { MetadataContext } from './types/resolvers'\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external'\nimport { trackFallbackParamAccessed } from '../../server/app-render/dynamic-rendering'\n\nexport function createMetadataContext(\n  pathname: string,\n  renderOpts: AppRenderContext['renderOpts']\n): MetadataContext {\n  return {\n    pathname,\n    trailingSlash: renderOpts.trailingSlash,\n    isStandaloneMode: renderOpts.nextConfigOutput === 'standalone',\n  }\n}\n\nexport function createTrackedMetadataContext(\n  pathname: string,\n  renderOpts: AppRenderContext['renderOpts'],\n  workStore: WorkStore | null\n): MetadataContext {\n  return {\n    // Use the regular metadata context, but we trap the pathname access.\n    ...createMetadataContext(pathname, renderOpts),\n\n    // Setup the trap around the pathname access so we can track when the\n    // pathname is accessed while resolving metadata which would indicate it's\n    // being used to resolve a relative URL. If that's the case, we don't want\n    // to provide it, and instead we should error.\n    get pathname() {\n      if (\n        workStore &&\n        workStore.isStaticGeneration &&\n        workStore.fallbackRouteParams &&\n        workStore.fallbackRouteParams.size > 0\n      ) {\n        trackFallbackParamAccessed(workStore, 'metadata relative url resolving')\n      }\n\n      return pathname\n    },\n  }\n}\n"],"names":["trackFallbackParamAccessed","createMetadataContext","pathname","renderOpts","trailingSlash","isStandaloneMode","nextConfigOutput","createTrackedMetadataContext","workStore","isStaticGeneration","fallbackRouteParams","size"],"mappings":";;;;AAGA,SAASA,0BAA0B,QAAQ,4CAA2C;;AAE/E,SAASC,sBACdC,QAAgB,EAChBC,UAA0C;IAE1C,OAAO;QACLD;QACAE,eAAeD,WAAWC,aAAa;QACvCC,kBAAkBF,WAAWG,gBAAgB,KAAK;IACpD;AACF;AAEO,SAASC,6BACdL,QAAgB,EAChBC,UAA0C,EAC1CK,SAA2B;IAE3B,OAAO;QACL,qEAAqE;QACrE,GAAGP,sBAAsBC,UAAUC,WAAW;QAE9C,qEAAqE;QACrE,0EAA0E;QAC1E,0EAA0E;QAC1E,8CAA8C;QAC9C,IAAID,YAAW;YACb,IACEM,aACAA,UAAUC,kBAAkB,IAC5BD,UAAUE,mBAAmB,IAC7BF,UAAUE,mBAAmB,CAACC,IAAI,GAAG,GACrC;mNACAX,6BAAAA,EAA2BQ,WAAW;YACxC;YAEA,OAAON;QACT;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/format-server-error.ts"],"sourcesContent":["const invalidServerComponentReactHooks = [\n  'useDeferredValue',\n  'useEffect',\n  'useImperativeHandle',\n  'useInsertionEffect',\n  'useLayoutEffect',\n  'useReducer',\n  'useRef',\n  'useState',\n  'useSyncExternalStore',\n  'useTransition',\n  'experimental_useOptimistic',\n  'useOptimistic',\n]\n\nfunction setMessage(error: Error, message: string): void {\n  error.message = message\n  if (error.stack) {\n    const lines = error.stack.split('\\n')\n    lines[0] = message\n    error.stack = lines.join('\\n')\n  }\n}\n\n/**\n * Input:\n * Error: Something went wrong\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10)\n \n * Output:\n    at funcName (/path/to/file.js:10:5)\n    at anotherFunc (/path/to/file.js:15:10) \n */\nexport function getStackWithoutErrorMessage(error: Error): string {\n  const stack = error.stack\n  if (!stack) return ''\n  return stack.replace(/^[^\\n]*\\n/, '')\n}\n\nexport function formatServerError(error: Error): void {\n  if (typeof error?.message !== 'string') return\n\n  if (\n    error.message.includes(\n      'Class extends value undefined is not a constructor or null'\n    )\n  ) {\n    const addedMessage =\n      'This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component'\n\n    // If this error instance already has the message, don't add it again\n    if (error.message.includes(addedMessage)) return\n\n    setMessage(\n      error,\n      `${error.message}\n\n${addedMessage}`\n    )\n    return\n  }\n\n  if (error.message.includes('createContext is not a function')) {\n    setMessage(\n      error,\n      'createContext only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component'\n    )\n    return\n  }\n\n  for (const clientHook of invalidServerComponentReactHooks) {\n    const regex = new RegExp(`\\\\b${clientHook}\\\\b.*is not a function`)\n    if (regex.test(error.message)) {\n      setMessage(\n        error,\n        `${clientHook} only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`\n      )\n      return\n    }\n  }\n}\n"],"names":["invalidServerComponentReactHooks","setMessage","error","message","stack","lines","split","join","getStackWithoutErrorMessage","replace","formatServerError","includes","addedMessage","clientHook","regex","RegExp","test"],"mappings":";;;;AAAA,MAAMA,mCAAmC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,SAASC,WAAWC,KAAY,EAAEC,OAAe;IAC/CD,MAAMC,OAAO,GAAGA;IAChB,IAAID,MAAME,KAAK,EAAE;QACf,MAAMC,QAAQH,MAAME,KAAK,CAACE,KAAK,CAAC;QAChCD,KAAK,CAAC,EAAE,GAAGF;QACXD,MAAME,KAAK,GAAGC,MAAME,IAAI,CAAC;IAC3B;AACF;AAYO,SAASC,4BAA4BN,KAAY;IACtD,MAAME,QAAQF,MAAME,KAAK;IACzB,IAAI,CAACA,OAAO,OAAO;IACnB,OAAOA,MAAMK,OAAO,CAAC,aAAa;AACpC;AAEO,SAASC,kBAAkBR,KAAY;IAC5C,IAAI,OAAA,CAAOA,SAAAA,OAAAA,KAAAA,IAAAA,MAAOC,OAAO,MAAK,UAAU;IAExC,IACED,MAAMC,OAAO,CAACQ,QAAQ,CACpB,+DAEF;QACA,MAAMC,eACJ;QAEF,qEAAqE;QACrE,IAAIV,MAAMC,OAAO,CAACQ,QAAQ,CAACC,eAAe;QAE1CX,WACEC,OACA,CAAC,EAAEA,MAAMC,OAAO,CAAC;;AAEvB,EAAES,aAAa,CAAC;QAEZ;IACF;IAEA,IAAIV,MAAMC,OAAO,CAACQ,QAAQ,CAAC,oCAAoC;QAC7DV,WACEC,OACA;QAEF;IACF;IAEA,KAAK,MAAMW,cAAcb,iCAAkC;QACzD,MAAMc,QAAQ,IAAIC,OAAO,CAAC,GAAG,EAAEF,WAAW,sBAAsB,CAAC;QACjE,IAAIC,MAAME,IAAI,CAACd,MAAMC,OAAO,GAAG;YAC7BF,WACEC,OACA,CAAC,EAAEW,WAAW,oLAAoL,CAAC;YAErM;QACF;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1966, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1972, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/is-error.ts"],"sourcesContent":["import { isPlainObject } from '../shared/lib/is-plain-object'\n\n// We allow some additional attached properties for Next.js errors\nexport interface NextError extends Error {\n  type?: string\n  page?: string\n  code?: string | number\n  cancelled?: boolean\n  digest?: number\n}\n\n/**\n * Checks whether the given value is a NextError.\n * This can be used to print a more detailed error message with properties like `code` & `digest`.\n */\nexport default function isError(err: unknown): err is NextError {\n  return (\n    typeof err === 'object' && err !== null && 'name' in err && 'message' in err\n  )\n}\n\nfunction safeStringify(obj: any) {\n  const seen = new WeakSet()\n\n  return JSON.stringify(obj, (_key, value) => {\n    // If value is an object and already seen, replace with \"[Circular]\"\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]'\n      }\n      seen.add(value)\n    }\n    return value\n  })\n}\n\nexport function getProperError(err: unknown): Error {\n  if (isError(err)) {\n    return err\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    // provide better error for case where `throw undefined`\n    // is called in development\n    if (typeof err === 'undefined') {\n      return new Error(\n        'An undefined error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n\n    if (err === null) {\n      return new Error(\n        'A null error was thrown, ' +\n          'see here for more info: https://nextjs.org/docs/messages/threw-undefined'\n      )\n    }\n  }\n\n  return new Error(isPlainObject(err) ? safeStringify(err) : err + '')\n}\n"],"names":["isPlainObject","isError","err","safeStringify","obj","seen","WeakSet","JSON","stringify","_key","value","has","add","getProperError","process","env","NODE_ENV","Error"],"mappings":";;;;AAAA,SAASA,aAAa,QAAQ,gCAA+B;;AAe9C,SAASC,QAAQC,GAAY;IAC1C,OACE,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,UAAUA,OAAO,aAAaA;AAE7E;AAEA,SAASC,cAAcC,GAAQ;IAC7B,MAAMC,OAAO,IAAIC;IAEjB,OAAOC,KAAKC,SAAS,CAACJ,KAAK,CAACK,MAAMC;QAChC,oEAAoE;QACpE,IAAI,OAAOA,UAAU,YAAYA,UAAU,MAAM;YAC/C,IAAIL,KAAKM,GAAG,CAACD,QAAQ;gBACnB,OAAO;YACT;YACAL,KAAKO,GAAG,CAACF;QACX;QACA,OAAOA;IACT;AACF;AAEO,SAASG,eAAeX,GAAY;IACzC,IAAID,QAAQC,MAAM;QAChB,OAAOA;IACT;IAEA,IAAIY,QAAQC,GAAG,CAACC,QAAQ,KAAK,WAAe;QAC1C,wDAAwD;QACxD,2BAA2B;QAC3B,IAAI,OAAOd,QAAQ,aAAa;YAC9B,OAAO,IAAIe,MACT,oCACE;QAEN;QAEA,IAAIf,QAAQ,MAAM;YAChB,OAAO,IAAIe,MACT,8BACE;QAEN;IACF;IAEA,OAAO,IAAIA,gMAAMjB,gBAAAA,EAAcE,OAAOC,cAAcD,OAAOA,MAAM;AACnE","ignoreList":[0]}},
    {"offset": {"line": 2010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/picocolors.ts"],"sourcesContent":["// ISC License\n\n// Copyright (c) 2021 Alexey Raspopov, Kostiantyn Denysov, Anton Verinov\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n// https://github.com/alexeyraspopov/picocolors/blob/b6261487e7b81aaab2440e397a356732cad9e342/picocolors.js#L1\n\nconst { env, stdout } = globalThis?.process ?? {}\n\nconst enabled =\n  env &&\n  !env.NO_COLOR &&\n  (env.FORCE_COLOR || (stdout?.isTTY && !env.CI && env.TERM !== 'dumb'))\n\nconst replaceClose = (\n  str: string,\n  close: string,\n  replace: string,\n  index: number\n): string => {\n  const start = str.substring(0, index) + replace\n  const end = str.substring(index + close.length)\n  const nextIndex = end.indexOf(close)\n  return ~nextIndex\n    ? start + replaceClose(end, close, replace, nextIndex)\n    : start + end\n}\n\nconst formatter = (open: string, close: string, replace = open) => {\n  if (!enabled) return String\n  return (input: string) => {\n    const string = '' + input\n    const index = string.indexOf(close, open.length)\n    return ~index\n      ? open + replaceClose(string, close, replace, index) + close\n      : open + string + close\n  }\n}\n\nexport const reset = enabled ? (s: string) => `\\x1b[0m${s}\\x1b[0m` : String\nexport const bold = formatter('\\x1b[1m', '\\x1b[22m', '\\x1b[22m\\x1b[1m')\nexport const dim = formatter('\\x1b[2m', '\\x1b[22m', '\\x1b[22m\\x1b[2m')\nexport const italic = formatter('\\x1b[3m', '\\x1b[23m')\nexport const underline = formatter('\\x1b[4m', '\\x1b[24m')\nexport const inverse = formatter('\\x1b[7m', '\\x1b[27m')\nexport const hidden = formatter('\\x1b[8m', '\\x1b[28m')\nexport const strikethrough = formatter('\\x1b[9m', '\\x1b[29m')\nexport const black = formatter('\\x1b[30m', '\\x1b[39m')\nexport const red = formatter('\\x1b[31m', '\\x1b[39m')\nexport const green = formatter('\\x1b[32m', '\\x1b[39m')\nexport const yellow = formatter('\\x1b[33m', '\\x1b[39m')\nexport const blue = formatter('\\x1b[34m', '\\x1b[39m')\nexport const magenta = formatter('\\x1b[35m', '\\x1b[39m')\nexport const purple = formatter('\\x1b[38;2;173;127;168m', '\\x1b[39m')\nexport const cyan = formatter('\\x1b[36m', '\\x1b[39m')\nexport const white = formatter('\\x1b[37m', '\\x1b[39m')\nexport const gray = formatter('\\x1b[90m', '\\x1b[39m')\nexport const bgBlack = formatter('\\x1b[40m', '\\x1b[49m')\nexport const bgRed = formatter('\\x1b[41m', '\\x1b[49m')\nexport const bgGreen = formatter('\\x1b[42m', '\\x1b[49m')\nexport const bgYellow = formatter('\\x1b[43m', '\\x1b[49m')\nexport const bgBlue = formatter('\\x1b[44m', '\\x1b[49m')\nexport const bgMagenta = formatter('\\x1b[45m', '\\x1b[49m')\nexport const bgCyan = formatter('\\x1b[46m', '\\x1b[49m')\nexport const bgWhite = formatter('\\x1b[47m', '\\x1b[49m')\n"],"names":["globalThis","env","stdout","process","enabled","NO_COLOR","FORCE_COLOR","isTTY","CI","TERM","replaceClose","str","close","replace","index","start","substring","end","length","nextIndex","indexOf","formatter","open","String","input","string","reset","s","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","purple","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite"],"mappings":"AAAA,cAAc;AAEd,wEAAwE;AAExE,2EAA2E;AAC3E,yEAAyE;AACzE,oEAAoE;AAEpE,2EAA2E;AAC3E,mEAAmE;AACnE,0EAA0E;AAC1E,yEAAyE;AACzE,wEAAwE;AACxE,0EAA0E;AAC1E,iEAAiE;AACjE,EAAE;AACF,8GAA8G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEtFA;AAAxB,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAE,GAAGF,CAAAA,CAAAA,cAAAA,UAAAA,KAAAA,OAAAA,KAAAA,IAAAA,YAAYG,OAAO,KAAI,CAAC;AAEhD,MAAMC,UACJH,OACA,CAACA,IAAII,QAAQ,IACZJ,CAAAA,IAAIK,WAAW,IAAKJ,CAAAA,UAAAA,OAAAA,KAAAA,IAAAA,OAAQK,KAAK,KAAI,CAACN,IAAIO,EAAE,IAAIP,IAAIQ,IAAI,KAAK,MAAM;AAEtE,MAAMC,eAAe,CACnBC,KACAC,OACAC,SACAC;IAEA,MAAMC,QAAQJ,IAAIK,SAAS,CAAC,GAAGF,SAASD;IACxC,MAAMI,MAAMN,IAAIK,SAAS,CAACF,QAAQF,MAAMM,MAAM;IAC9C,MAAMC,YAAYF,IAAIG,OAAO,CAACR;IAC9B,OAAO,CAACO,YACJJ,QAAQL,aAAaO,KAAKL,OAAOC,SAASM,aAC1CJ,QAAQE;AACd;AAEA,MAAMI,YAAY,CAACC,MAAcV,OAAeC,UAAUS,IAAI;IAC5D,IAAI,CAAClB,SAAS,OAAOmB;IACrB,OAAO,CAACC;QACN,MAAMC,SAAS,KAAKD;QACpB,MAAMV,QAAQW,OAAOL,OAAO,CAACR,OAAOU,KAAKJ,MAAM;QAC/C,OAAO,CAACJ,QACJQ,OAAOZ,aAAae,QAAQb,OAAOC,SAASC,SAASF,QACrDU,OAAOG,SAASb;IACtB;AACF;AAEO,MAAMc,QAAQtB,UAAU,CAACuB,IAAc,CAAC,OAAO,EAAEA,EAAE,OAAO,CAAC,GAAGJ,OAAM;AACpE,MAAMK,OAAOP,UAAU,WAAW,YAAY,mBAAkB;AAChE,MAAMQ,MAAMR,UAAU,WAAW,YAAY,mBAAkB;AAC/D,MAAMS,SAAST,UAAU,WAAW,YAAW;AAC/C,MAAMU,YAAYV,UAAU,WAAW,YAAW;AAClD,MAAMW,UAAUX,UAAU,WAAW,YAAW;AAChD,MAAMY,SAASZ,UAAU,WAAW,YAAW;AAC/C,MAAMa,gBAAgBb,UAAU,WAAW,YAAW;AACtD,MAAMc,QAAQd,UAAU,YAAY,YAAW;AAC/C,MAAMe,MAAMf,UAAU,YAAY,YAAW;AAC7C,MAAMgB,QAAQhB,UAAU,YAAY,YAAW;AAC/C,MAAMiB,SAASjB,UAAU,YAAY,YAAW;AAChD,MAAMkB,OAAOlB,UAAU,YAAY,YAAW;AAC9C,MAAMmB,UAAUnB,UAAU,YAAY,YAAW;AACjD,MAAMoB,SAASpB,UAAU,0BAA0B,YAAW;AAC9D,MAAMqB,OAAOrB,UAAU,YAAY,YAAW;AAC9C,MAAMsB,QAAQtB,UAAU,YAAY,YAAW;AAC/C,MAAMuB,OAAOvB,UAAU,YAAY,YAAW;AAC9C,MAAMwB,UAAUxB,UAAU,YAAY,YAAW;AACjD,MAAMyB,QAAQzB,UAAU,YAAY,YAAW;AAC/C,MAAM0B,UAAU1B,UAAU,YAAY,YAAW;AACjD,MAAM2B,WAAW3B,UAAU,YAAY,YAAW;AAClD,MAAM4B,SAAS5B,UAAU,YAAY,YAAW;AAChD,MAAM6B,YAAY7B,UAAU,YAAY,YAAW;AACnD,MAAM8B,SAAS9B,UAAU,YAAY,YAAW;AAChD,MAAM+B,UAAU/B,UAAU,YAAY,YAAW","ignoreList":[0]}},
    {"offset": {"line": 2101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2107, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/client-reference.ts"],"sourcesContent":["export function isClientReference(mod: any): boolean {\n  const defaultExport = mod?.default || mod\n  return defaultExport?.$$typeof === Symbol.for('react.client.reference')\n}\n"],"names":["isClientReference","mod","defaultExport","default","$$typeof","Symbol","for"],"mappings":";;;AAAO,SAASA,kBAAkBC,GAAQ;IACxC,MAAMC,gBAAgBD,CAAAA,OAAAA,OAAAA,KAAAA,IAAAA,IAAKE,OAAO,KAAIF;IACtC,OAAOC,CAAAA,iBAAAA,OAAAA,KAAAA,IAAAA,cAAeE,QAAQ,MAAKC,OAAOC,GAAG,CAAC;AAChD","ignoreList":[0]}},
    {"offset": {"line": 2114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2120, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/batcher.ts"],"sourcesContent":["import type { SchedulerFn } from './scheduler'\n\nimport { DetachedPromise } from './detached-promise'\n\ntype CacheKeyFn<K, C extends string | number | null> = (\n  key: K\n) => PromiseLike<C> | C\n\ntype BatcherOptions<K, C extends string | number | null> = {\n  cacheKeyFn?: CacheKeyFn<K, C>\n  schedulerFn?: SchedulerFn<void>\n}\n\ntype WorkFn<V, C> = (\n  key: C,\n  resolve: (value: V | PromiseLike<V>) => void\n) => Promise<V>\n\n/**\n * A wrapper for a function that will only allow one call to the function to\n * execute at a time.\n */\nexport class Batcher<K, V, C extends string | number | null> {\n  private readonly pending = new Map<C, Promise<V>>()\n\n  protected constructor(\n    private readonly cacheKeyFn?: CacheKeyFn<K, C>,\n    /**\n     * A function that will be called to schedule the wrapped function to be\n     * executed. This defaults to a function that will execute the function\n     * immediately.\n     */\n    private readonly schedulerFn: SchedulerFn<void> = (fn) => fn()\n  ) {}\n\n  /**\n   * Creates a new instance of PendingWrapper. If the key extends a string or\n   * number, the key will be used as the cache key. If the key is an object, a\n   * cache key function must be provided.\n   */\n  public static create<K extends string | number | null, V>(\n    options?: BatcherOptions<K, K>\n  ): Batcher<K, V, K>\n  public static create<K, V, C extends string | number | null>(\n    options: BatcherOptions<K, C> &\n      Required<Pick<BatcherOptions<K, C>, 'cacheKeyFn'>>\n  ): Batcher<K, V, C>\n  public static create<K, V, C extends string | number | null>(\n    options?: BatcherOptions<K, C>\n  ): Batcher<K, V, C> {\n    return new Batcher<K, V, C>(options?.cacheKeyFn, options?.schedulerFn)\n  }\n\n  /**\n   * Wraps a function in a promise that will be resolved or rejected only once\n   * for a given key. This will allow multiple calls to the function to be\n   * made, but only one will be executed at a time. The result of the first\n   * call will be returned to all callers.\n   *\n   * @param key the key to use for the cache\n   * @param fn the function to wrap\n   * @returns a promise that resolves to the result of the function\n   */\n  public async batch(key: K, fn: WorkFn<V, C>): Promise<V> {\n    const cacheKey = (this.cacheKeyFn ? await this.cacheKeyFn(key) : key) as C\n    if (cacheKey === null) {\n      return fn(cacheKey, Promise.resolve)\n    }\n\n    const pending = this.pending.get(cacheKey)\n    if (pending) return pending\n\n    const { promise, resolve, reject } = new DetachedPromise<V>()\n    this.pending.set(cacheKey, promise)\n\n    this.schedulerFn(async () => {\n      try {\n        const result = await fn(cacheKey, resolve)\n\n        // Resolving a promise multiple times is a no-op, so we can safely\n        // resolve all pending promises with the same result.\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      } finally {\n        this.pending.delete(cacheKey)\n      }\n    })\n\n    return promise\n  }\n}\n"],"names":["DetachedPromise","Batcher","cacheKeyFn","schedulerFn","fn","pending","Map","create","options","batch","key","cacheKey","Promise","resolve","get","promise","reject","set","result","err","delete"],"mappings":";;;AAEA,SAASA,eAAe,QAAQ,qBAAoB;;AAoB7C,MAAMC;IAGX,YACmBC,UAA6B,EAC9C;;;;KAIC,GACgBC,cAAiC,CAACC,KAAOA,IAAI,CAC9D;aAPiBF,UAAAA,GAAAA;aAMAC,WAAAA,GAAAA;aATFE,OAAAA,GAAU,IAAIC;IAU5B;IAcH,OAAcC,OACZC,OAA8B,EACZ;QAClB,OAAO,IAAIP,QAAiBO,WAAAA,OAAAA,KAAAA,IAAAA,QAASN,UAAU,EAAEM,WAAAA,OAAAA,KAAAA,IAAAA,QAASL,WAAW;IACvE;IAEA;;;;;;;;;GASC,GACD,MAAaM,MAAMC,GAAM,EAAEN,EAAgB,EAAc;QACvD,MAAMO,WAAY,IAAI,CAACT,UAAU,GAAG,MAAM,IAAI,CAACA,UAAU,CAACQ,OAAOA;QACjE,IAAIC,aAAa,MAAM;YACrB,OAAOP,GAAGO,UAAUC,QAAQC,OAAO;QACrC;QAEA,MAAMR,UAAU,IAAI,CAACA,OAAO,CAACS,GAAG,CAACH;QACjC,IAAIN,SAAS,OAAOA;QAEpB,MAAM,EAAEU,OAAO,EAAEF,OAAO,EAAEG,MAAM,EAAE,GAAG,8KAAIhB,kBAAAA;QACzC,IAAI,CAACK,OAAO,CAACY,GAAG,CAACN,UAAUI;QAE3B,IAAI,CAACZ,WAAW,CAAC;YACf,IAAI;gBACF,MAAMe,SAAS,MAAMd,GAAGO,UAAUE;gBAElC,kEAAkE;gBAClE,qDAAqD;gBACrDA,QAAQK;YACV,EAAE,OAAOC,KAAK;gBACZH,OAAOG;YACT,SAAU;gBACR,IAAI,CAACd,OAAO,CAACe,MAAM,CAACT;YACtB;QACF;QAEA,OAAOI;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 2171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2177, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/non-nullable.ts"],"sourcesContent":["export function nonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n"],"names":["nonNullable","value","undefined"],"mappings":";;;AAAO,SAASA,YAAeC,KAAQ;IACrC,OAAOA,UAAU,QAAQA,UAAUC;AACrC","ignoreList":[0]}},
    {"offset": {"line": 2183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2189, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/generate/meta.tsx"],"sourcesContent":["import React from 'react'\nimport { nonNullable } from '../../non-nullable'\n\nexport function Meta({\n  name,\n  property,\n  content,\n  media,\n}: {\n  name?: string\n  property?: string\n  media?: string\n  content: string | number | URL | null | undefined\n}): React.ReactElement | null {\n  if (typeof content !== 'undefined' && content !== null && content !== '') {\n    return (\n      <meta\n        {...(name ? { name } : { property })}\n        {...(media ? { media } : undefined)}\n        content={typeof content === 'string' ? content : content.toString()}\n      />\n    )\n  }\n  return null\n}\n\nexport function MetaFilter<T extends {} | {}[]>(\n  items: (T | null)[]\n): NonNullable<T>[] {\n  const acc: NonNullable<T>[] = []\n  for (const item of items) {\n    if (Array.isArray(item)) {\n      acc.push(...item.filter(nonNullable))\n    } else if (nonNullable(item)) {\n      acc.push(item)\n    }\n  }\n  return acc\n}\n\ntype ExtendMetaContent = Record<\n  string,\n  undefined | string | URL | number | boolean | null | undefined\n>\ntype MultiMetaContent =\n  | (ExtendMetaContent | string | URL | number)[]\n  | null\n  | undefined\n\nfunction camelToSnake(camelCaseStr: string) {\n  return camelCaseStr.replace(/([A-Z])/g, function (match) {\n    return '_' + match.toLowerCase()\n  })\n}\n\nconst aliasPropPrefixes = new Set([\n  'og:image',\n  'twitter:image',\n  'og:video',\n  'og:audio',\n])\nfunction getMetaKey(prefix: string, key: string) {\n  // Use `twitter:image` and `og:image` instead of `twitter:image:url` and `og:image:url`\n  // to be more compatible as it's a more common format.\n  // `og:video` & `og:audio` do not have a `:url` suffix alias\n  if (aliasPropPrefixes.has(prefix) && key === 'url') {\n    return prefix\n  }\n  if (prefix.startsWith('og:') || prefix.startsWith('twitter:')) {\n    key = camelToSnake(key)\n  }\n  return prefix + ':' + key\n}\n\nfunction ExtendMeta({\n  content,\n  namePrefix,\n  propertyPrefix,\n}: {\n  content?: ExtendMetaContent\n  namePrefix?: string\n  propertyPrefix?: string\n}) {\n  if (!content) return null\n  return MetaFilter(\n    Object.entries(content).map(([k, v]) => {\n      return typeof v === 'undefined'\n        ? null\n        : Meta({\n            ...(propertyPrefix && { property: getMetaKey(propertyPrefix, k) }),\n            ...(namePrefix && { name: getMetaKey(namePrefix, k) }),\n            content: typeof v === 'string' ? v : v?.toString(),\n          })\n    })\n  )\n}\n\nexport function MultiMeta({\n  propertyPrefix,\n  namePrefix,\n  contents,\n}: {\n  propertyPrefix?: string\n  namePrefix?: string\n  contents?: MultiMetaContent | null\n}) {\n  if (typeof contents === 'undefined' || contents === null) {\n    return null\n  }\n\n  return MetaFilter(\n    contents.map((content) => {\n      if (\n        typeof content === 'string' ||\n        typeof content === 'number' ||\n        content instanceof URL\n      ) {\n        return Meta({\n          ...(propertyPrefix\n            ? { property: propertyPrefix }\n            : { name: namePrefix }),\n          content,\n        })\n      } else {\n        return ExtendMeta({\n          namePrefix,\n          propertyPrefix,\n          content,\n        })\n      }\n    })\n  )\n}\n"],"names":["React","nonNullable","Meta","name","property","content","media","meta","undefined","toString","MetaFilter","items","acc","item","Array","isArray","push","filter","camelToSnake","camelCaseStr","replace","match","toLowerCase","aliasPropPrefixes","Set","getMetaKey","prefix","key","has","startsWith","ExtendMeta","namePrefix","propertyPrefix","Object","entries","map","k","v","MultiMeta","contents","URL"],"mappings":";;;;;;AAAA,OAAOA,WAAW,QAAO;AACzB,SAASC,WAAW,QAAQ,qBAAoB;;;;AAEzC,SAASC,KAAK,EACnBC,IAAI,EACJC,QAAQ,EACRC,OAAO,EACPC,KAAK,EAMN;IACC,IAAI,OAAOD,YAAY,eAAeA,YAAY,QAAQA,YAAY,IAAI;QACxE,OAAA,WAAA,qMACE,OAAA,EAACE,QAAAA;YACE,GAAIJ,OAAO;gBAAEA;YAAK,IAAI;gBAAEC;YAAS,CAAC;YAClC,GAAIE,QAAQ;gBAAEA;YAAM,IAAIE,SAAS;YAClCH,SAAS,OAAOA,YAAY,WAAWA,UAAUA,QAAQI,QAAQ;;IAGvE;IACA,OAAO;AACT;AAEO,SAASC,WACdC,KAAmB;IAEnB,MAAMC,MAAwB,EAAE;IAChC,KAAK,MAAMC,QAAQF,MAAO;QACxB,IAAIG,MAAMC,OAAO,CAACF,OAAO;YACvBD,IAAII,IAAI,IAAIH,KAAKI,MAAM,uKAAChB,cAAAA;QAC1B,OAAO,IAAIA,wLAAAA,EAAYY,OAAO;YAC5BD,IAAII,IAAI,CAACH;QACX;IACF;IACA,OAAOD;AACT;AAWA,SAASM,aAAaC,YAAoB;IACxC,OAAOA,aAAaC,OAAO,CAAC,YAAY,SAAUC,KAAK;QACrD,OAAO,MAAMA,MAAMC,WAAW;IAChC;AACF;AAEA,MAAMC,oBAAoB,IAAIC,IAAI;IAChC;IACA;IACA;IACA;CACD;AACD,SAASC,WAAWC,MAAc,EAAEC,GAAW;IAC7C,uFAAuF;IACvF,sDAAsD;IACtD,4DAA4D;IAC5D,IAAIJ,kBAAkBK,GAAG,CAACF,WAAWC,QAAQ,OAAO;QAClD,OAAOD;IACT;IACA,IAAIA,OAAOG,UAAU,CAAC,UAAUH,OAAOG,UAAU,CAAC,aAAa;QAC7DF,MAAMT,aAAaS;IACrB;IACA,OAAOD,SAAS,MAAMC;AACxB;AAEA,SAASG,WAAW,EAClBzB,OAAO,EACP0B,UAAU,EACVC,cAAc,EAKf;IACC,IAAI,CAAC3B,SAAS,OAAO;IACrB,OAAOK,WACLuB,OAAOC,OAAO,CAAC7B,SAAS8B,GAAG,CAAC,CAAC,CAACC,GAAGC,EAAE;QACjC,OAAO,OAAOA,MAAM,cAChB,OACAnC,KAAK;YACH,GAAI8B,kBAAkB;gBAAE5B,UAAUqB,WAAWO,gBAAgBI;YAAG,CAAC;YACjE,GAAIL,cAAc;gBAAE5B,MAAMsB,WAAWM,YAAYK;YAAG,CAAC;YACrD/B,SAAS,OAAOgC,MAAM,WAAWA,IAAIA,KAAAA,OAAAA,KAAAA,IAAAA,EAAG5B,QAAQ;QAClD;IACN;AAEJ;AAEO,SAAS6B,UAAU,EACxBN,cAAc,EACdD,UAAU,EACVQ,QAAQ,EAKT;IACC,IAAI,OAAOA,aAAa,eAAeA,aAAa,MAAM;QACxD,OAAO;IACT;IAEA,OAAO7B,WACL6B,SAASJ,GAAG,CAAC,CAAC9B;QACZ,IACE,OAAOA,YAAY,YACnB,OAAOA,YAAY,YACnBA,mBAAmBmC,KACnB;YACA,OAAOtC,KAAK;gBACV,GAAI8B,iBACA;oBAAE5B,UAAU4B;gBAAe,IAC3B;oBAAE7B,MAAM4B;gBAAW,CAAC;gBACxB1B;YACF;QACF,OAAO;YACL,OAAOyB,WAAW;gBAChBC;gBACAC;gBACA3B;YACF;QACF;IACF;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2293, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/constants.ts"],"sourcesContent":["import type { ViewportLayout } from './types/extra-types'\nimport type { Icons } from './types/metadata-types'\n\nexport const ViewportMetaKeys: { [k in keyof ViewportLayout]: string } = {\n  width: 'width',\n  height: 'height',\n  initialScale: 'initial-scale',\n  minimumScale: 'minimum-scale',\n  maximumScale: 'maximum-scale',\n  viewportFit: 'viewport-fit',\n  userScalable: 'user-scalable',\n  interactiveWidget: 'interactive-widget',\n} as const\n\nexport const IconKeys: (keyof Icons)[] = ['icon', 'shortcut', 'apple', 'other']\n"],"names":["ViewportMetaKeys","width","height","initialScale","minimumScale","maximumScale","viewportFit","userScalable","interactiveWidget","IconKeys"],"mappings":";;;;AAGO,MAAMA,mBAA4D;IACvEC,OAAO;IACPC,QAAQ;IACRC,cAAc;IACdC,cAAc;IACdC,cAAc;IACdC,aAAa;IACbC,cAAc;IACdC,mBAAmB;AACrB,EAAU;AAEH,MAAMC,WAA4B;IAAC;IAAQ;IAAY;IAAS;CAAQ,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2319, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/generate/utils.ts"],"sourcesContent":["function resolveArray<T>(value: T | T[]): T[] {\n  if (Array.isArray(value)) {\n    return value as any\n  }\n  return [value] as any\n}\n\nfunction resolveAsArrayOrUndefined<T>(\n  value: T | T[] | undefined | null\n): T extends undefined | null ? undefined : T[] {\n  if (typeof value === 'undefined' || value === null) {\n    return undefined as any\n  }\n  return resolveArray(value) as any\n}\n\nfunction getOrigin(url: string | URL): string | undefined {\n  let origin = undefined\n  if (typeof url === 'string') {\n    try {\n      url = new URL(url)\n      origin = url.origin\n    } catch {}\n  }\n  return origin\n}\n\nexport { resolveAsArrayOrUndefined, resolveArray, getOrigin }\n"],"names":["resolveArray","value","Array","isArray","resolveAsArrayOrUndefined","undefined","getOrigin","url","origin","URL"],"mappings":";;;;;AAAA,SAASA,aAAgBC,KAAc;IACrC,IAAIC,MAAMC,OAAO,CAACF,QAAQ;QACxB,OAAOA;IACT;IACA,OAAO;QAACA;KAAM;AAChB;AAEA,SAASG,0BACPH,KAAiC;IAEjC,IAAI,OAAOA,UAAU,eAAeA,UAAU,MAAM;QAClD,OAAOI;IACT;IACA,OAAOL,aAAaC;AACtB;AAEA,SAASK,UAAUC,GAAiB;IAClC,IAAIC,SAASH;IACb,IAAI,OAAOE,QAAQ,UAAU;QAC3B,IAAI;YACFA,MAAM,IAAIE,IAAIF;YACdC,SAASD,IAAIC,MAAM;QACrB,EAAE,OAAM,CAAC;IACX;IACA,OAAOA;AACT","ignoreList":[0]}},
    {"offset": {"line": 2350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2356, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/generate/basic.tsx"],"sourcesContent":["import type {\n  ResolvedMetadata,\n  ResolvedViewport,\n  Viewport,\n} from '../types/metadata-interface'\nimport type { ViewportLayout } from '../types/extra-types'\n\nimport React from 'react'\nimport { Meta, MetaFilter, MultiMeta } from './meta'\nimport { ViewportMetaKeys } from '../constants'\nimport { getOrigin } from './utils'\n\n// convert viewport object to string for viewport meta tag\nfunction resolveViewportLayout(viewport: Viewport) {\n  let resolved: string | null = null\n\n  if (viewport && typeof viewport === 'object') {\n    resolved = ''\n    for (const viewportKey_ in ViewportMetaKeys) {\n      const viewportKey = viewportKey_ as keyof ViewportLayout\n      if (viewportKey in viewport) {\n        let value = viewport[viewportKey]\n        if (typeof value === 'boolean') value = value ? 'yes' : 'no'\n        if (resolved) resolved += ', '\n        resolved += `${ViewportMetaKeys[viewportKey]}=${value}`\n      }\n    }\n  }\n  return resolved\n}\n\nexport function ViewportMeta({ viewport }: { viewport: ResolvedViewport }) {\n  return MetaFilter([\n    Meta({ name: 'viewport', content: resolveViewportLayout(viewport) }),\n    ...(viewport.themeColor\n      ? viewport.themeColor.map((themeColor) =>\n          Meta({\n            name: 'theme-color',\n            content: themeColor.color,\n            media: themeColor.media,\n          })\n        )\n      : []),\n    Meta({ name: 'color-scheme', content: viewport.colorScheme }),\n  ])\n}\n\nexport function BasicMeta({ metadata }: { metadata: ResolvedMetadata }) {\n  const manifestOrigin = metadata.manifest\n    ? getOrigin(metadata.manifest)\n    : undefined\n\n  return MetaFilter([\n    <meta charSet=\"utf-8\" />,\n    metadata.title !== null && metadata.title.absolute ? (\n      <title>{metadata.title.absolute}</title>\n    ) : null,\n    Meta({ name: 'description', content: metadata.description }),\n    Meta({ name: 'application-name', content: metadata.applicationName }),\n    ...(metadata.authors\n      ? metadata.authors.map((author) => [\n          author.url ? (\n            <link rel=\"author\" href={author.url.toString()} />\n          ) : null,\n          Meta({ name: 'author', content: author.name }),\n        ])\n      : []),\n    metadata.manifest ? (\n      <link\n        rel=\"manifest\"\n        href={metadata.manifest.toString()}\n        // If it's same origin, and it's a preview deployment,\n        // including credentials for manifest request.\n        crossOrigin={\n          !manifestOrigin && process.env.VERCEL_ENV === 'preview'\n            ? 'use-credentials'\n            : undefined\n        }\n      />\n    ) : null,\n    Meta({ name: 'generator', content: metadata.generator }),\n    Meta({ name: 'keywords', content: metadata.keywords?.join(',') }),\n    Meta({ name: 'referrer', content: metadata.referrer }),\n    Meta({ name: 'creator', content: metadata.creator }),\n    Meta({ name: 'publisher', content: metadata.publisher }),\n    Meta({ name: 'robots', content: metadata.robots?.basic }),\n    Meta({ name: 'googlebot', content: metadata.robots?.googleBot }),\n    Meta({ name: 'abstract', content: metadata.abstract }),\n    ...(metadata.archives\n      ? metadata.archives.map((archive) => (\n          <link rel=\"archives\" href={archive} />\n        ))\n      : []),\n    ...(metadata.assets\n      ? metadata.assets.map((asset) => <link rel=\"assets\" href={asset} />)\n      : []),\n    ...(metadata.bookmarks\n      ? metadata.bookmarks.map((bookmark) => (\n          <link rel=\"bookmarks\" href={bookmark} />\n        ))\n      : []),\n    Meta({ name: 'category', content: metadata.category }),\n    Meta({ name: 'classification', content: metadata.classification }),\n    ...(metadata.other\n      ? Object.entries(metadata.other).map(([name, content]) => {\n          if (Array.isArray(content)) {\n            return content.map((contentItem) =>\n              Meta({ name, content: contentItem })\n            )\n          } else {\n            return Meta({ name, content })\n          }\n        })\n      : []),\n  ])\n}\n\nexport function ItunesMeta({ itunes }: { itunes: ResolvedMetadata['itunes'] }) {\n  if (!itunes) return null\n  const { appId, appArgument } = itunes\n  let content = `app-id=${appId}`\n  if (appArgument) {\n    content += `, app-argument=${appArgument}`\n  }\n  return <meta name=\"apple-itunes-app\" content={content} />\n}\n\nexport function FacebookMeta({\n  facebook,\n}: {\n  facebook: ResolvedMetadata['facebook']\n}) {\n  if (!facebook) return null\n\n  const { appId, admins } = facebook\n\n  return MetaFilter([\n    appId ? <meta property=\"fb:app_id\" content={appId} /> : null,\n    ...(admins\n      ? admins.map((admin) => <meta property=\"fb:admins\" content={admin} />)\n      : []),\n  ])\n}\n\nconst formatDetectionKeys = [\n  'telephone',\n  'date',\n  'address',\n  'email',\n  'url',\n] as const\nexport function FormatDetectionMeta({\n  formatDetection,\n}: {\n  formatDetection: ResolvedMetadata['formatDetection']\n}) {\n  if (!formatDetection) return null\n  let content = ''\n  for (const key of formatDetectionKeys) {\n    if (key in formatDetection) {\n      if (content) content += ', '\n      content += `${key}=no`\n    }\n  }\n  return <meta name=\"format-detection\" content={content} />\n}\n\nexport function AppleWebAppMeta({\n  appleWebApp,\n}: {\n  appleWebApp: ResolvedMetadata['appleWebApp']\n}) {\n  if (!appleWebApp) return null\n\n  const { capable, title, startupImage, statusBarStyle } = appleWebApp\n\n  return MetaFilter([\n    capable ? Meta({ name: 'mobile-web-app-capable', content: 'yes' }) : null,\n    Meta({ name: 'apple-mobile-web-app-title', content: title }),\n    startupImage\n      ? startupImage.map((image) => (\n          <link\n            href={image.url}\n            media={image.media}\n            rel=\"apple-touch-startup-image\"\n          />\n        ))\n      : null,\n    statusBarStyle\n      ? Meta({\n          name: 'apple-mobile-web-app-status-bar-style',\n          content: statusBarStyle,\n        })\n      : null,\n  ])\n}\n\nexport function VerificationMeta({\n  verification,\n}: {\n  verification: ResolvedMetadata['verification']\n}) {\n  if (!verification) return null\n\n  return MetaFilter([\n    MultiMeta({\n      namePrefix: 'google-site-verification',\n      contents: verification.google,\n    }),\n    MultiMeta({ namePrefix: 'y_key', contents: verification.yahoo }),\n    MultiMeta({\n      namePrefix: 'yandex-verification',\n      contents: verification.yandex,\n    }),\n    MultiMeta({ namePrefix: 'me', contents: verification.me }),\n    ...(verification.other\n      ? Object.entries(verification.other).map(([key, value]) =>\n          MultiMeta({ namePrefix: key, contents: value })\n        )\n      : []),\n  ])\n}\n"],"names":["React","Meta","MetaFilter","MultiMeta","ViewportMetaKeys","getOrigin","resolveViewportLayout","viewport","resolved","viewportKey_","viewportKey","value","ViewportMeta","name","content","themeColor","map","color","media","colorScheme","BasicMeta","metadata","manifestOrigin","manifest","undefined","meta","charSet","title","absolute","description","applicationName","authors","author","url","link","rel","href","toString","crossOrigin","process","env","VERCEL_ENV","generator","keywords","join","referrer","creator","publisher","robots","basic","googleBot","abstract","archives","archive","assets","asset","bookmarks","bookmark","category","classification","other","Object","entries","Array","isArray","contentItem","ItunesMeta","itunes","appId","appArgument","FacebookMeta","facebook","admins","property","admin","formatDetectionKeys","FormatDetectionMeta","formatDetection","key","AppleWebAppMeta","appleWebApp","capable","startupImage","statusBarStyle","image","VerificationMeta","verification","namePrefix","contents","google","yahoo","yandex","me"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2612, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/generate/alternate.tsx"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { AlternateLinkDescriptor } from '../types/alternative-urls-types'\n\nimport React from 'react'\nimport { MetaFilter } from './meta'\n\nfunction AlternateLink({\n  descriptor,\n  ...props\n}: {\n  descriptor: AlternateLinkDescriptor\n} & React.LinkHTMLAttributes<HTMLLinkElement>) {\n  if (!descriptor.url) return null\n  return (\n    <link\n      {...props}\n      {...(descriptor.title && { title: descriptor.title })}\n      href={descriptor.url.toString()}\n    />\n  )\n}\n\nexport function AlternatesMetadata({\n  alternates,\n}: {\n  alternates: ResolvedMetadata['alternates']\n}) {\n  if (!alternates) return null\n\n  const { canonical, languages, media, types } = alternates\n\n  return MetaFilter([\n    canonical\n      ? AlternateLink({ rel: 'canonical', descriptor: canonical })\n      : null,\n    languages\n      ? Object.entries(languages).flatMap(([locale, descriptors]) =>\n          descriptors?.map((descriptor) =>\n            AlternateLink({ rel: 'alternate', hrefLang: locale, descriptor })\n          )\n        )\n      : null,\n    media\n      ? Object.entries(media).flatMap(([mediaName, descriptors]) =>\n          descriptors?.map((descriptor) =>\n            AlternateLink({ rel: 'alternate', media: mediaName, descriptor })\n          )\n        )\n      : null,\n    types\n      ? Object.entries(types).flatMap(([type, descriptors]) =>\n          descriptors?.map((descriptor) =>\n            AlternateLink({ rel: 'alternate', type, descriptor })\n          )\n        )\n      : null,\n  ])\n}\n"],"names":["React","MetaFilter","AlternateLink","descriptor","props","url","link","title","href","toString","AlternatesMetadata","alternates","canonical","languages","media","types","rel","Object","entries","flatMap","locale","descriptors","map","hrefLang","mediaName","type"],"mappings":";;;;AAGA,OAAOA,WAAW,QAAO;AACzB,SAASC,UAAU,QAAQ,SAAQ;;;;AAEnC,SAASC,cAAc,EACrBC,UAAU,EACV,GAAGC,OAGwC;IAC3C,IAAI,CAACD,WAAWE,GAAG,EAAE,OAAO;IAC5B,OAAA,WAAA,sMACE,MAAA,EAACC,QAAAA;QACE,GAAGF,KAAK;QACR,GAAID,WAAWI,KAAK,IAAI;YAAEA,OAAOJ,WAAWI,KAAK;QAAC,CAAC;QACpDC,MAAML,WAAWE,GAAG,CAACI,QAAQ;;AAGnC;AAEO,SAASC,mBAAmB,EACjCC,UAAU,EAGX;IACC,IAAI,CAACA,YAAY,OAAO;IAExB,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAGJ;IAE/C,OAAOV,oMAAAA,EAAW;QAChBW,YACIV,cAAc;YAAEc,KAAK;YAAab,YAAYS;QAAU,KACxD;QACJC,YACII,OAAOC,OAAO,CAACL,WAAWM,OAAO,CAAC,CAAC,CAACC,QAAQC,YAAY,GACtDA,eAAAA,OAAAA,KAAAA,IAAAA,YAAaC,GAAG,CAAC,CAACnB,aAChBD,cAAc;oBAAEc,KAAK;oBAAaO,UAAUH;oBAAQjB;gBAAW,OAGnE;QACJW,QACIG,OAAOC,OAAO,CAACJ,OAAOK,OAAO,CAAC,CAAC,CAACK,WAAWH,YAAY,GACrDA,eAAAA,OAAAA,KAAAA,IAAAA,YAAaC,GAAG,CAAC,CAACnB,aAChBD,cAAc;oBAAEc,KAAK;oBAAaF,OAAOU;oBAAWrB;gBAAW,OAGnE;QACJY,QACIE,OAAOC,OAAO,CAACH,OAAOI,OAAO,CAAC,CAAC,CAACM,MAAMJ,YAAY,GAChDA,eAAAA,OAAAA,KAAAA,IAAAA,YAAaC,GAAG,CAAC,CAACnB,aAChBD,cAAc;oBAAEc,KAAK;oBAAaS;oBAAMtB;gBAAW,OAGvD;KACL;AACH","ignoreList":[0]}},
    {"offset": {"line": 2656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2662, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/generate/opengraph.tsx"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { TwitterAppDescriptor } from '../types/twitter-types'\n\nimport { Meta, MetaFilter, MultiMeta } from './meta'\n\nexport function OpenGraphMetadata({\n  openGraph,\n}: {\n  openGraph: ResolvedMetadata['openGraph']\n}) {\n  if (!openGraph) {\n    return null\n  }\n\n  let typedOpenGraph\n  if ('type' in openGraph) {\n    const openGraphType = openGraph.type\n    switch (openGraphType) {\n      case 'website':\n        typedOpenGraph = [Meta({ property: 'og:type', content: 'website' })]\n        break\n      case 'article':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'article' }),\n          Meta({\n            property: 'article:published_time',\n            content: openGraph.publishedTime?.toString(),\n          }),\n          Meta({\n            property: 'article:modified_time',\n            content: openGraph.modifiedTime?.toString(),\n          }),\n          Meta({\n            property: 'article:expiration_time',\n            content: openGraph.expirationTime?.toString(),\n          }),\n          MultiMeta({\n            propertyPrefix: 'article:author',\n            contents: openGraph.authors,\n          }),\n          Meta({ property: 'article:section', content: openGraph.section }),\n          MultiMeta({\n            propertyPrefix: 'article:tag',\n            contents: openGraph.tags,\n          }),\n        ]\n        break\n      case 'book':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'book' }),\n          Meta({ property: 'book:isbn', content: openGraph.isbn }),\n          Meta({\n            property: 'book:release_date',\n            content: openGraph.releaseDate,\n          }),\n          MultiMeta({\n            propertyPrefix: 'book:author',\n            contents: openGraph.authors,\n          }),\n          MultiMeta({ propertyPrefix: 'book:tag', contents: openGraph.tags }),\n        ]\n        break\n      case 'profile':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'profile' }),\n          Meta({\n            property: 'profile:first_name',\n            content: openGraph.firstName,\n          }),\n          Meta({ property: 'profile:last_name', content: openGraph.lastName }),\n          Meta({ property: 'profile:username', content: openGraph.username }),\n          Meta({ property: 'profile:gender', content: openGraph.gender }),\n        ]\n        break\n      case 'music.song':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.song' }),\n          Meta({\n            property: 'music:duration',\n            content: openGraph.duration?.toString(),\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:album',\n            contents: openGraph.albums,\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:musician',\n            contents: openGraph.musicians,\n          }),\n        ]\n        break\n      case 'music.album':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.album' }),\n          MultiMeta({\n            propertyPrefix: 'music:song',\n            contents: openGraph.songs,\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:musician',\n            contents: openGraph.musicians,\n          }),\n          Meta({\n            property: 'music:release_date',\n            content: openGraph.releaseDate,\n          }),\n        ]\n        break\n      case 'music.playlist':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.playlist' }),\n          MultiMeta({\n            propertyPrefix: 'music:song',\n            contents: openGraph.songs,\n          }),\n          MultiMeta({\n            propertyPrefix: 'music:creator',\n            contents: openGraph.creators,\n          }),\n        ]\n        break\n      case 'music.radio_station':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'music.radio_station' }),\n          MultiMeta({\n            propertyPrefix: 'music:creator',\n            contents: openGraph.creators,\n          }),\n        ]\n        break\n\n      case 'video.movie':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'video.movie' }),\n          MultiMeta({\n            propertyPrefix: 'video:actor',\n            contents: openGraph.actors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:director',\n            contents: openGraph.directors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:writer',\n            contents: openGraph.writers,\n          }),\n          Meta({ property: 'video:duration', content: openGraph.duration }),\n          Meta({\n            property: 'video:release_date',\n            content: openGraph.releaseDate,\n          }),\n          MultiMeta({ propertyPrefix: 'video:tag', contents: openGraph.tags }),\n        ]\n        break\n      case 'video.episode':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'video.episode' }),\n          MultiMeta({\n            propertyPrefix: 'video:actor',\n            contents: openGraph.actors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:director',\n            contents: openGraph.directors,\n          }),\n          MultiMeta({\n            propertyPrefix: 'video:writer',\n            contents: openGraph.writers,\n          }),\n          Meta({ property: 'video:duration', content: openGraph.duration }),\n          Meta({\n            property: 'video:release_date',\n            content: openGraph.releaseDate,\n          }),\n          MultiMeta({ propertyPrefix: 'video:tag', contents: openGraph.tags }),\n          Meta({ property: 'video:series', content: openGraph.series }),\n        ]\n        break\n      case 'video.tv_show':\n        typedOpenGraph = [\n          Meta({ property: 'og:type', content: 'video.tv_show' }),\n        ]\n        break\n      case 'video.other':\n        typedOpenGraph = [Meta({ property: 'og:type', content: 'video.other' })]\n        break\n\n      default:\n        const _exhaustiveCheck: never = openGraphType\n        throw new Error(`Invalid OpenGraph type: ${_exhaustiveCheck}`)\n    }\n  }\n\n  return MetaFilter([\n    Meta({ property: 'og:determiner', content: openGraph.determiner }),\n    Meta({ property: 'og:title', content: openGraph.title?.absolute }),\n    Meta({ property: 'og:description', content: openGraph.description }),\n    Meta({ property: 'og:url', content: openGraph.url?.toString() }),\n    Meta({ property: 'og:site_name', content: openGraph.siteName }),\n    Meta({ property: 'og:locale', content: openGraph.locale }),\n    Meta({ property: 'og:country_name', content: openGraph.countryName }),\n    Meta({ property: 'og:ttl', content: openGraph.ttl?.toString() }),\n    MultiMeta({ propertyPrefix: 'og:image', contents: openGraph.images }),\n    MultiMeta({ propertyPrefix: 'og:video', contents: openGraph.videos }),\n    MultiMeta({ propertyPrefix: 'og:audio', contents: openGraph.audio }),\n    MultiMeta({ propertyPrefix: 'og:email', contents: openGraph.emails }),\n    MultiMeta({\n      propertyPrefix: 'og:phone_number',\n      contents: openGraph.phoneNumbers,\n    }),\n    MultiMeta({\n      propertyPrefix: 'og:fax_number',\n      contents: openGraph.faxNumbers,\n    }),\n    MultiMeta({\n      propertyPrefix: 'og:locale:alternate',\n      contents: openGraph.alternateLocale,\n    }),\n    ...(typedOpenGraph ? typedOpenGraph : []),\n  ])\n}\n\nfunction TwitterAppItem({\n  app,\n  type,\n}: {\n  app: TwitterAppDescriptor\n  type: 'iphone' | 'ipad' | 'googleplay'\n}) {\n  return [\n    Meta({ name: `twitter:app:name:${type}`, content: app.name }),\n    Meta({ name: `twitter:app:id:${type}`, content: app.id[type] }),\n    Meta({\n      name: `twitter:app:url:${type}`,\n      content: app.url?.[type]?.toString(),\n    }),\n  ]\n}\n\nexport function TwitterMetadata({\n  twitter,\n}: {\n  twitter: ResolvedMetadata['twitter']\n}) {\n  if (!twitter) return null\n  const { card } = twitter\n\n  return MetaFilter([\n    Meta({ name: 'twitter:card', content: card }),\n    Meta({ name: 'twitter:site', content: twitter.site }),\n    Meta({ name: 'twitter:site:id', content: twitter.siteId }),\n    Meta({ name: 'twitter:creator', content: twitter.creator }),\n    Meta({ name: 'twitter:creator:id', content: twitter.creatorId }),\n    Meta({ name: 'twitter:title', content: twitter.title?.absolute }),\n    Meta({ name: 'twitter:description', content: twitter.description }),\n    MultiMeta({ namePrefix: 'twitter:image', contents: twitter.images }),\n    ...(card === 'player'\n      ? twitter.players.flatMap((player) => [\n          Meta({\n            name: 'twitter:player',\n            content: player.playerUrl.toString(),\n          }),\n          Meta({\n            name: 'twitter:player:stream',\n            content: player.streamUrl.toString(),\n          }),\n          Meta({ name: 'twitter:player:width', content: player.width }),\n          Meta({ name: 'twitter:player:height', content: player.height }),\n        ])\n      : []),\n    ...(card === 'app'\n      ? [\n          TwitterAppItem({ app: twitter.app, type: 'iphone' }),\n          TwitterAppItem({ app: twitter.app, type: 'ipad' }),\n          TwitterAppItem({ app: twitter.app, type: 'googleplay' }),\n        ]\n      : []),\n  ])\n}\n\nexport function AppLinksMeta({\n  appLinks,\n}: {\n  appLinks: ResolvedMetadata['appLinks']\n}) {\n  if (!appLinks) return null\n  return MetaFilter([\n    MultiMeta({ propertyPrefix: 'al:ios', contents: appLinks.ios }),\n    MultiMeta({ propertyPrefix: 'al:iphone', contents: appLinks.iphone }),\n    MultiMeta({ propertyPrefix: 'al:ipad', contents: appLinks.ipad }),\n    MultiMeta({ propertyPrefix: 'al:android', contents: appLinks.android }),\n    MultiMeta({\n      propertyPrefix: 'al:windows_phone',\n      contents: appLinks.windows_phone,\n    }),\n    MultiMeta({ propertyPrefix: 'al:windows', contents: appLinks.windows }),\n    MultiMeta({\n      propertyPrefix: 'al:windows_universal',\n      contents: appLinks.windows_universal,\n    }),\n    MultiMeta({ propertyPrefix: 'al:web', contents: appLinks.web }),\n  ])\n}\n"],"names":["Meta","MetaFilter","MultiMeta","OpenGraphMetadata","openGraph","typedOpenGraph","openGraphType","type","property","content","publishedTime","toString","modifiedTime","expirationTime","propertyPrefix","contents","authors","section","tags","isbn","releaseDate","firstName","lastName","username","gender","duration","albums","musicians","songs","creators","actors","directors","writers","series","_exhaustiveCheck","Error","determiner","title","absolute","description","url","siteName","locale","countryName","ttl","images","videos","audio","emails","phoneNumbers","faxNumbers","alternateLocale","TwitterAppItem","app","name","id","TwitterMetadata","twitter","card","site","siteId","creator","creatorId","namePrefix","players","flatMap","player","playerUrl","streamUrl","width","height","AppLinksMeta","appLinks","ios","iphone","ipad","android","windows_phone","windows","windows_universal","web"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3120, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/generate/icons.tsx"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { Icon, IconDescriptor } from '../types/metadata-types'\n\nimport React from 'react'\nimport { MetaFilter } from './meta'\n\nfunction IconDescriptorLink({ icon }: { icon: IconDescriptor }) {\n  const { url, rel = 'icon', ...props } = icon\n\n  return <link rel={rel} href={url.toString()} {...props} />\n}\n\nfunction IconLink({ rel, icon }: { rel?: string; icon: Icon }) {\n  if (typeof icon === 'object' && !(icon instanceof URL)) {\n    if (!icon.rel && rel) icon.rel = rel\n    return IconDescriptorLink({ icon })\n  } else {\n    const href = icon.toString()\n    return <link rel={rel} href={href} />\n  }\n}\n\nexport function IconsMetadata({ icons }: { icons: ResolvedMetadata['icons'] }) {\n  if (!icons) return null\n\n  const shortcutList = icons.shortcut\n  const iconList = icons.icon\n  const appleList = icons.apple\n  const otherList = icons.other\n\n  return MetaFilter([\n    shortcutList\n      ? shortcutList.map((icon) => IconLink({ rel: 'shortcut icon', icon }))\n      : null,\n    iconList ? iconList.map((icon) => IconLink({ rel: 'icon', icon })) : null,\n    appleList\n      ? appleList.map((icon) => IconLink({ rel: 'apple-touch-icon', icon }))\n      : null,\n    otherList ? otherList.map((icon) => IconDescriptorLink({ icon })) : null,\n  ])\n}\n"],"names":["React","MetaFilter","IconDescriptorLink","icon","url","rel","props","link","href","toString","IconLink","URL","IconsMetadata","icons","shortcutList","shortcut","iconList","appleList","apple","otherList","other","map"],"mappings":";;;;AAGA,OAAOA,WAAW,QAAO;AACzB,SAASC,UAAU,QAAQ,SAAQ;;;;AAEnC,SAASC,mBAAmB,EAAEC,IAAI,EAA4B;IAC5D,MAAM,EAAEC,GAAG,EAAEC,MAAM,MAAM,EAAE,GAAGC,OAAO,GAAGH;IAExC,OAAA,WAAA,sMAAO,MAAA,EAACI,QAAAA;QAAKF,KAAKA;QAAKG,MAAMJ,IAAIK,QAAQ;QAAK,GAAGH,KAAK;;AACxD;AAEA,SAASI,SAAS,EAAEL,GAAG,EAAEF,IAAI,EAAgC;IAC3D,IAAI,OAAOA,SAAS,YAAY,CAAEA,CAAAA,gBAAgBQ,GAAE,GAAI;QACtD,IAAI,CAACR,KAAKE,GAAG,IAAIA,KAAKF,KAAKE,GAAG,GAAGA;QACjC,OAAOH,mBAAmB;YAAEC;QAAK;IACnC,OAAO;QACL,MAAMK,OAAOL,KAAKM,QAAQ;QAC1B,OAAA,WAAA,sMAAO,MAAA,EAACF,QAAAA;YAAKF,KAAKA;YAAKG,MAAMA;;IAC/B;AACF;AAEO,SAASI,cAAc,EAAEC,KAAK,EAAwC;IAC3E,IAAI,CAACA,OAAO,OAAO;IAEnB,MAAMC,eAAeD,MAAME,QAAQ;IACnC,MAAMC,WAAWH,MAAMV,IAAI;IAC3B,MAAMc,YAAYJ,MAAMK,KAAK;IAC7B,MAAMC,YAAYN,MAAMO,KAAK;IAE7B,8LAAOnB,aAAAA,EAAW;QAChBa,eACIA,aAAaO,GAAG,CAAC,CAAClB,OAASO,SAAS;gBAAEL,KAAK;gBAAiBF;YAAK,MACjE;QACJa,WAAWA,SAASK,GAAG,CAAC,CAAClB,OAASO,SAAS;gBAAEL,KAAK;gBAAQF;YAAK,MAAM;QACrEc,YACIA,UAAUI,GAAG,CAAC,CAAClB,OAASO,SAAS;gBAAEL,KAAK;gBAAoBF;YAAK,MACjE;QACJgB,YAAYA,UAAUE,GAAG,CAAC,CAAClB,OAASD,mBAAmB;gBAAEC;YAAK,MAAM;KACrE;AACH","ignoreList":[0]}},
    {"offset": {"line": 3175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3181, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/default-metadata.tsx"],"sourcesContent":["import type {\n  ResolvedMetadata,\n  ResolvedViewport,\n} from './types/metadata-interface'\n\nexport function createDefaultViewport(): ResolvedViewport {\n  return {\n    // name=viewport\n    width: 'device-width',\n    initialScale: 1,\n    // visual metadata\n    themeColor: null,\n    colorScheme: null,\n  }\n}\n\nexport function createDefaultMetadata(): ResolvedMetadata {\n  return {\n    // Deprecated ones\n    viewport: null,\n    themeColor: null,\n    colorScheme: null,\n\n    metadataBase: null,\n    // Other values are all null\n    title: null,\n    description: null,\n    applicationName: null,\n    authors: null,\n    generator: null,\n    keywords: null,\n    referrer: null,\n    creator: null,\n    publisher: null,\n    robots: null,\n    manifest: null,\n    alternates: {\n      canonical: null,\n      languages: null,\n      media: null,\n      types: null,\n    },\n    icons: null,\n    openGraph: null,\n    twitter: null,\n    verification: {},\n    appleWebApp: null,\n    formatDetection: null,\n    itunes: null,\n    facebook: null,\n    abstract: null,\n    appLinks: null,\n    archives: null,\n    assets: null,\n    bookmarks: null,\n    category: null,\n    classification: null,\n    other: {},\n  }\n}\n"],"names":["createDefaultViewport","width","initialScale","themeColor","colorScheme","createDefaultMetadata","viewport","metadataBase","title","description","applicationName","authors","generator","keywords","referrer","creator","publisher","robots","manifest","alternates","canonical","languages","media","types","icons","openGraph","twitter","verification","appleWebApp","formatDetection","itunes","facebook","abstract","appLinks","archives","assets","bookmarks","category","classification","other"],"mappings":";;;;AAKO,SAASA;IACd,OAAO;QACL,gBAAgB;QAChBC,OAAO;QACPC,cAAc;QACd,kBAAkB;QAClBC,YAAY;QACZC,aAAa;IACf;AACF;AAEO,SAASC;IACd,OAAO;QACL,kBAAkB;QAClBC,UAAU;QACVH,YAAY;QACZC,aAAa;QAEbG,cAAc;QACd,4BAA4B;QAC5BC,OAAO;QACPC,aAAa;QACbC,iBAAiB;QACjBC,SAAS;QACTC,WAAW;QACXC,UAAU;QACVC,UAAU;QACVC,SAAS;QACTC,WAAW;QACXC,QAAQ;QACRC,UAAU;QACVC,YAAY;YACVC,WAAW;YACXC,WAAW;YACXC,OAAO;YACPC,OAAO;QACT;QACAC,OAAO;QACPC,WAAW;QACXC,SAAS;QACTC,cAAc,CAAC;QACfC,aAAa;QACbC,iBAAiB;QACjBC,QAAQ;QACRC,UAAU;QACVC,UAAU;QACVC,UAAU;QACVC,UAAU;QACVC,QAAQ;QACRC,WAAW;QACXC,UAAU;QACVC,gBAAgB;QAChBC,OAAO,CAAC;IACV;AACF","ignoreList":[0]}},
    {"offset": {"line": 3238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3244, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/resolvers/resolve-url.ts"],"sourcesContent":["import path from '../../../shared/lib/isomorphic/path'\nimport type { MetadataContext } from '../types/resolvers'\n\nfunction isStringOrURL(icon: any): icon is string | URL {\n  return typeof icon === 'string' || icon instanceof URL\n}\n\nfunction createLocalMetadataBase() {\n  return new URL(`http://localhost:${process.env.PORT || 3000}`)\n}\n\nfunction getPreviewDeploymentUrl(): URL | undefined {\n  const origin = process.env.VERCEL_BRANCH_URL || process.env.VERCEL_URL\n  return origin ? new URL(`https://${origin}`) : undefined\n}\n\nfunction getProductionDeploymentUrl(): URL | undefined {\n  const origin = process.env.VERCEL_PROJECT_PRODUCTION_URL\n  return origin ? new URL(`https://${origin}`) : undefined\n}\n\n// For deployment url for metadata routes, prefer to use the deployment url if possible\n// as these routes are unique to the deployments url.\nexport function getSocialImageFallbackMetadataBase(metadataBase: URL | null): {\n  fallbackMetadataBase: URL\n  isMetadataBaseMissing: boolean\n} {\n  const isMetadataBaseMissing = !metadataBase\n  const defaultMetadataBase = createLocalMetadataBase()\n  const previewDeploymentUrl = getPreviewDeploymentUrl()\n  const productionDeploymentUrl = getProductionDeploymentUrl()\n\n  let fallbackMetadataBase\n  if (process.env.NODE_ENV === 'development') {\n    fallbackMetadataBase = defaultMetadataBase\n  } else {\n    fallbackMetadataBase =\n      process.env.NODE_ENV === 'production' &&\n      previewDeploymentUrl &&\n      process.env.VERCEL_ENV === 'preview'\n        ? previewDeploymentUrl\n        : metadataBase || productionDeploymentUrl || defaultMetadataBase\n  }\n\n  return {\n    fallbackMetadataBase,\n    isMetadataBaseMissing,\n  }\n}\n\nfunction resolveUrl(url: null | undefined, metadataBase: URL | null): null\nfunction resolveUrl(url: string | URL, metadataBase: URL | null): URL\nfunction resolveUrl(\n  url: string | URL | null | undefined,\n  metadataBase: URL | null\n): URL | null\nfunction resolveUrl(\n  url: string | URL | null | undefined,\n  metadataBase: URL | null\n): URL | null {\n  if (url instanceof URL) return url\n  if (!url) return null\n\n  try {\n    // If we can construct a URL instance from url, ignore metadataBase\n    const parsedUrl = new URL(url)\n    return parsedUrl\n  } catch {}\n\n  if (!metadataBase) {\n    metadataBase = createLocalMetadataBase()\n  }\n\n  // Handle relative or absolute paths\n  const basePath = metadataBase.pathname || ''\n  const joinedPath = path.posix.join(basePath, url)\n\n  return new URL(joinedPath, metadataBase)\n}\n\n// Resolve with `pathname` if `url` is a relative path.\nfunction resolveRelativeUrl(url: string | URL, pathname: string): string | URL {\n  if (typeof url === 'string' && url.startsWith('./')) {\n    return path.posix.resolve(pathname, url)\n  }\n  return url\n}\n\n// The regex is matching logic from packages/next/src/lib/load-custom-routes.ts\nconst FILE_REGEX =\n  /^(?:\\/((?!\\.well-known(?:\\/.*)?)(?:[^/]+\\/)*[^/]+\\.\\w+))(\\/?|$)/i\nfunction isFilePattern(pathname: string): boolean {\n  return FILE_REGEX.test(pathname)\n}\n\n// Resolve `pathname` if `url` is a relative path the compose with `metadataBase`.\nfunction resolveAbsoluteUrlWithPathname(\n  url: string | URL,\n  metadataBase: URL | null,\n  { trailingSlash, pathname }: MetadataContext\n): string {\n  // Resolve url with pathname that always starts with `/`\n  url = resolveRelativeUrl(url, pathname)\n\n  // Convert string url or URL instance to absolute url string,\n  // if there's case needs to be resolved with metadataBase\n  let resolvedUrl = ''\n  const result = metadataBase ? resolveUrl(url, metadataBase) : url\n  if (typeof result === 'string') {\n    resolvedUrl = result\n  } else {\n    resolvedUrl = result.pathname === '/' ? result.origin : result.href\n  }\n\n  // Add trailing slash if it's enabled for urls matches the condition\n  // - Not external, same origin with metadataBase\n  // - Doesn't have query\n  if (trailingSlash && !resolvedUrl.endsWith('/')) {\n    let isRelative = resolvedUrl.startsWith('/')\n    let hasQuery = resolvedUrl.includes('?')\n    let isExternal = false\n    let isFileUrl = false\n\n    if (!isRelative) {\n      try {\n        const parsedUrl = new URL(resolvedUrl)\n        isExternal =\n          metadataBase != null && parsedUrl.origin !== metadataBase.origin\n        isFileUrl = isFilePattern(parsedUrl.pathname)\n      } catch {\n        // If it's not a valid URL, treat it as external\n        isExternal = true\n      }\n      if (\n        // Do not apply trailing slash for file like urls, aligning with the behavior with `trailingSlash`\n        !isFileUrl &&\n        !isExternal &&\n        !hasQuery\n      )\n        return `${resolvedUrl}/`\n    }\n  }\n\n  return resolvedUrl\n}\n\nexport {\n  isStringOrURL,\n  resolveUrl,\n  resolveRelativeUrl,\n  resolveAbsoluteUrlWithPathname,\n}\n"],"names":["path","isStringOrURL","icon","URL","createLocalMetadataBase","process","env","PORT","getPreviewDeploymentUrl","origin","VERCEL_BRANCH_URL","VERCEL_URL","undefined","getProductionDeploymentUrl","VERCEL_PROJECT_PRODUCTION_URL","getSocialImageFallbackMetadataBase","metadataBase","isMetadataBaseMissing","defaultMetadataBase","previewDeploymentUrl","productionDeploymentUrl","fallbackMetadataBase","NODE_ENV","VERCEL_ENV","resolveUrl","url","parsedUrl","basePath","pathname","joinedPath","posix","join","resolveRelativeUrl","startsWith","resolve","FILE_REGEX","isFilePattern","test","resolveAbsoluteUrlWithPathname","trailingSlash","resolvedUrl","result","href","endsWith","isRelative","hasQuery","includes","isExternal","isFileUrl"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3354, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/resolvers/resolve-title.ts"],"sourcesContent":["import type { Metadata } from '../types/metadata-interface'\nimport type { AbsoluteTemplateString } from '../types/metadata-types'\n\nfunction resolveTitleTemplate(\n  template: string | null | undefined,\n  title: string\n) {\n  return template ? template.replace(/%s/g, title) : title\n}\n\nexport function resolveTitle(\n  title: Metadata['title'],\n  stashedTemplate: string | null | undefined\n): AbsoluteTemplateString {\n  let resolved\n  const template =\n    typeof title !== 'string' && title && 'template' in title\n      ? title.template\n      : null\n\n  if (typeof title === 'string') {\n    resolved = resolveTitleTemplate(stashedTemplate, title)\n  } else if (title) {\n    if ('default' in title) {\n      resolved = resolveTitleTemplate(stashedTemplate, title.default)\n    }\n    if ('absolute' in title && title.absolute) {\n      resolved = title.absolute\n    }\n  }\n\n  if (title && typeof title !== 'string') {\n    return {\n      template,\n      absolute: resolved || '',\n    }\n  } else {\n    return { absolute: resolved || title || '', template }\n  }\n}\n"],"names":["resolveTitleTemplate","template","title","replace","resolveTitle","stashedTemplate","resolved","default","absolute"],"mappings":";;;AAGA,SAASA,qBACPC,QAAmC,EACnCC,KAAa;IAEb,OAAOD,WAAWA,SAASE,OAAO,CAAC,OAAOD,SAASA;AACrD;AAEO,SAASE,aACdF,KAAwB,EACxBG,eAA0C;IAE1C,IAAIC;IACJ,MAAML,WACJ,OAAOC,UAAU,YAAYA,SAAS,cAAcA,QAChDA,MAAMD,QAAQ,GACd;IAEN,IAAI,OAAOC,UAAU,UAAU;QAC7BI,WAAWN,qBAAqBK,iBAAiBH;IACnD,OAAO,IAAIA,OAAO;QAChB,IAAI,aAAaA,OAAO;YACtBI,WAAWN,qBAAqBK,iBAAiBH,MAAMK,OAAO;QAChE;QACA,IAAI,cAAcL,SAASA,MAAMM,QAAQ,EAAE;YACzCF,WAAWJ,MAAMM,QAAQ;QAC3B;IACF;IAEA,IAAIN,SAAS,OAAOA,UAAU,UAAU;QACtC,OAAO;YACLD;YACAO,UAAUF,YAAY;QACxB;IACF,OAAO;QACL,OAAO;YAAEE,UAAUF,YAAYJ,SAAS;YAAID;QAAS;IACvD;AACF","ignoreList":[0]}},
    {"offset": {"line": 3385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3391, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/resolvers/resolve-opengraph.ts"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type {\n  OpenGraphType,\n  OpenGraph,\n  ResolvedOpenGraph,\n} from '../types/opengraph-types'\nimport type {\n  FieldResolverExtraArgs,\n  MetadataContext,\n} from '../types/resolvers'\nimport type { ResolvedTwitterMetadata, Twitter } from '../types/twitter-types'\nimport { resolveArray, resolveAsArrayOrUndefined } from '../generate/utils'\nimport {\n  getSocialImageFallbackMetadataBase,\n  isStringOrURL,\n  resolveUrl,\n  resolveAbsoluteUrlWithPathname,\n} from './resolve-url'\nimport { resolveTitle } from './resolve-title'\nimport { isFullStringUrl } from '../../url'\nimport { warnOnce } from '../../../build/output/log'\n\ntype FlattenArray<T> = T extends (infer U)[] ? U : T\ntype ResolvedMetadataBase = ResolvedMetadata['metadataBase']\n\nconst OgTypeFields = {\n  article: ['authors', 'tags'],\n  song: ['albums', 'musicians'],\n  playlist: ['albums', 'musicians'],\n  radio: ['creators'],\n  video: ['actors', 'directors', 'writers', 'tags'],\n  basic: [\n    'emails',\n    'phoneNumbers',\n    'faxNumbers',\n    'alternateLocale',\n    'audio',\n    'videos',\n  ],\n} as const\n\nfunction resolveAndValidateImage(\n  item: FlattenArray<OpenGraph['images'] | Twitter['images']>,\n  metadataBase: NonNullable<ResolvedMetadataBase>,\n  isMetadataBaseMissing: boolean,\n  isStandaloneMode: boolean\n) {\n  if (!item) return undefined\n  const isItemUrl = isStringOrURL(item)\n  const inputUrl = isItemUrl ? item : item.url\n  if (!inputUrl) return undefined\n\n  // process.env.VERCEL is set to \"1\" when System Environment Variables are\n  // exposed. When exposed, validation is not necessary since we are falling back to\n  // process.env.VERCEL_PROJECT_PRODUCTION_URL, process.env.VERCEL_BRANCH_URL, or\n  // process.env.VERCEL_URL for the `metadataBase`. process.env.VERCEL is undefined\n  // when System Environment Variables are not exposed. When not exposed, we cannot\n  // detect in the build environment if the deployment is a Vercel deployment or not.\n  //\n  // x-ref: https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n  const isNonVercelDeployment =\n    !process.env.VERCEL && process.env.NODE_ENV === 'production'\n  // Validate url in self-host standalone mode or non-Vercel deployment\n  if (isStandaloneMode || isNonVercelDeployment) {\n    validateResolvedImageUrl(inputUrl, metadataBase, isMetadataBaseMissing)\n  }\n\n  return isItemUrl\n    ? {\n        url: resolveUrl(inputUrl, metadataBase),\n      }\n    : {\n        ...item,\n        // Update image descriptor url\n        url: resolveUrl(inputUrl, metadataBase),\n      }\n}\n\nexport function resolveImages(\n  images: Twitter['images'],\n  metadataBase: ResolvedMetadataBase,\n  isStandaloneMode: boolean\n): NonNullable<ResolvedMetadata['twitter']>['images']\nexport function resolveImages(\n  images: OpenGraph['images'],\n  metadataBase: ResolvedMetadataBase,\n  isStandaloneMode: boolean\n): NonNullable<ResolvedMetadata['openGraph']>['images']\nexport function resolveImages(\n  images: OpenGraph['images'] | Twitter['images'],\n  metadataBase: ResolvedMetadataBase,\n  isStandaloneMode: boolean\n):\n  | NonNullable<ResolvedMetadata['twitter']>['images']\n  | NonNullable<ResolvedMetadata['openGraph']>['images'] {\n  const resolvedImages = resolveAsArrayOrUndefined(images)\n  if (!resolvedImages) return resolvedImages\n\n  const { isMetadataBaseMissing, fallbackMetadataBase } =\n    getSocialImageFallbackMetadataBase(metadataBase)\n  const nonNullableImages = []\n  for (const item of resolvedImages) {\n    const resolvedItem = resolveAndValidateImage(\n      item,\n      fallbackMetadataBase,\n      isMetadataBaseMissing,\n      isStandaloneMode\n    )\n    if (!resolvedItem) continue\n\n    nonNullableImages.push(resolvedItem)\n  }\n\n  return nonNullableImages\n}\n\nconst ogTypeToFields: Record<string, readonly string[]> = {\n  article: OgTypeFields.article,\n  book: OgTypeFields.article,\n  'music.song': OgTypeFields.song,\n  'music.album': OgTypeFields.song,\n  'music.playlist': OgTypeFields.playlist,\n  'music.radio_station': OgTypeFields.radio,\n  'video.movie': OgTypeFields.video,\n  'video.episode': OgTypeFields.video,\n}\n\nfunction getFieldsByOgType(ogType: OpenGraphType | undefined) {\n  if (!ogType || !(ogType in ogTypeToFields)) return OgTypeFields.basic\n  return ogTypeToFields[ogType].concat(OgTypeFields.basic)\n}\n\nfunction validateResolvedImageUrl(\n  inputUrl: string | URL,\n  fallbackMetadataBase: NonNullable<ResolvedMetadataBase>,\n  isMetadataBaseMissing: boolean\n): void {\n  // Only warn on the image url that needs to be resolved with metadataBase\n  if (\n    typeof inputUrl === 'string' &&\n    !isFullStringUrl(inputUrl) &&\n    isMetadataBaseMissing\n  ) {\n    warnOnce(\n      `metadataBase property in metadata export is not set for resolving social open graph or twitter images, using \"${fallbackMetadataBase.origin}\". See https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase`\n    )\n  }\n}\n\nexport const resolveOpenGraph: FieldResolverExtraArgs<\n  'openGraph',\n  [ResolvedMetadataBase, MetadataContext, string | null]\n> = (openGraph, metadataBase, metadataContext, titleTemplate) => {\n  if (!openGraph) return null\n\n  function resolveProps(target: ResolvedOpenGraph, og: OpenGraph) {\n    const ogType = og && 'type' in og ? og.type : undefined\n    const keys = getFieldsByOgType(ogType)\n    for (const k of keys) {\n      const key = k as keyof ResolvedOpenGraph\n      if (key in og && key !== 'url') {\n        const value = og[key]\n        // TODO: improve typing inferring\n        ;(target as any)[key] = value ? resolveArray(value) : null\n      }\n    }\n    target.images = resolveImages(\n      og.images,\n      metadataBase,\n      metadataContext.isStandaloneMode\n    )\n  }\n\n  const resolved = {\n    ...openGraph,\n    title: resolveTitle(openGraph.title, titleTemplate),\n  } as ResolvedOpenGraph\n  resolveProps(resolved, openGraph)\n\n  resolved.url = openGraph.url\n    ? resolveAbsoluteUrlWithPathname(\n        openGraph.url,\n        metadataBase,\n        metadataContext\n      )\n    : null\n\n  return resolved\n}\n\nconst TwitterBasicInfoKeys = [\n  'site',\n  'siteId',\n  'creator',\n  'creatorId',\n  'description',\n] as const\n\nexport const resolveTwitter: FieldResolverExtraArgs<\n  'twitter',\n  [ResolvedMetadataBase, MetadataContext, string | null]\n> = (twitter, metadataBase, metadataContext, titleTemplate) => {\n  if (!twitter) return null\n  let card = 'card' in twitter ? twitter.card : undefined\n  const resolved = {\n    ...twitter,\n    title: resolveTitle(twitter.title, titleTemplate),\n  } as ResolvedTwitterMetadata\n  for (const infoKey of TwitterBasicInfoKeys) {\n    resolved[infoKey] = twitter[infoKey] || null\n  }\n\n  resolved.images = resolveImages(\n    twitter.images,\n    metadataBase,\n    metadataContext.isStandaloneMode\n  )\n\n  card = card || (resolved.images?.length ? 'summary_large_image' : 'summary')\n  resolved.card = card\n\n  if ('card' in resolved) {\n    switch (resolved.card) {\n      case 'player': {\n        resolved.players = resolveAsArrayOrUndefined(resolved.players) || []\n        break\n      }\n      case 'app': {\n        resolved.app = resolved.app || {}\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  return resolved\n}\n"],"names":["resolveArray","resolveAsArrayOrUndefined","getSocialImageFallbackMetadataBase","isStringOrURL","resolveUrl","resolveAbsoluteUrlWithPathname","resolveTitle","isFullStringUrl","warnOnce","OgTypeFields","article","song","playlist","radio","video","basic","resolveAndValidateImage","item","metadataBase","isMetadataBaseMissing","isStandaloneMode","undefined","isItemUrl","inputUrl","url","isNonVercelDeployment","process","env","VERCEL","NODE_ENV","validateResolvedImageUrl","resolveImages","images","resolvedImages","fallbackMetadataBase","nonNullableImages","resolvedItem","push","ogTypeToFields","book","getFieldsByOgType","ogType","concat","origin","resolveOpenGraph","openGraph","metadataContext","titleTemplate","resolveProps","target","og","type","keys","k","key","value","resolved","title","TwitterBasicInfoKeys","resolveTwitter","twitter","card","infoKey","length","players","app"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3562, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/interop-default.ts"],"sourcesContent":["export function interopDefault(mod: any) {\n  return mod.default || mod\n}\n"],"names":["interopDefault","mod","default"],"mappings":";;;AAAO,SAASA,eAAeC,GAAQ;IACrC,OAAOA,IAAIC,OAAO,IAAID;AACxB","ignoreList":[0]}},
    {"offset": {"line": 3568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3574, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/resolvers/resolve-basics.ts"],"sourcesContent":["import type {\n  AlternateLinkDescriptor,\n  ResolvedAlternateURLs,\n} from '../types/alternative-urls-types'\nimport type {\n  Metadata,\n  ResolvedMetadata,\n  Viewport,\n} from '../types/metadata-interface'\nimport type { ResolvedVerification } from '../types/metadata-types'\nimport type {\n  FieldResolver,\n  FieldResolverExtraArgs,\n  MetadataContext,\n} from '../types/resolvers'\nimport { resolveAsArrayOrUndefined } from '../generate/utils'\nimport { resolveAbsoluteUrlWithPathname } from './resolve-url'\n\nfunction resolveAlternateUrl(\n  url: string | URL,\n  metadataBase: URL | null,\n  metadataContext: MetadataContext\n) {\n  // If alter native url is an URL instance,\n  // we treat it as a URL base and resolve with current pathname\n  if (url instanceof URL) {\n    const newUrl = new URL(metadataContext.pathname, url)\n    url.searchParams.forEach((value, key) =>\n      newUrl.searchParams.set(key, value)\n    )\n    url = newUrl\n  }\n  return resolveAbsoluteUrlWithPathname(url, metadataBase, metadataContext)\n}\n\nexport const resolveThemeColor: FieldResolver<'themeColor', Viewport> = (\n  themeColor\n) => {\n  if (!themeColor) return null\n  const themeColorDescriptors: Viewport['themeColor'] = []\n\n  resolveAsArrayOrUndefined(themeColor)?.forEach((descriptor) => {\n    if (typeof descriptor === 'string')\n      themeColorDescriptors.push({ color: descriptor })\n    else if (typeof descriptor === 'object')\n      themeColorDescriptors.push({\n        color: descriptor.color,\n        media: descriptor.media,\n      })\n  })\n\n  return themeColorDescriptors\n}\n\nfunction resolveUrlValuesOfObject(\n  obj:\n    | Record<\n        string,\n        string | URL | AlternateLinkDescriptor[] | null | undefined\n      >\n    | null\n    | undefined,\n  metadataBase: ResolvedMetadata['metadataBase'],\n  metadataContext: MetadataContext\n): null | Record<string, AlternateLinkDescriptor[]> {\n  if (!obj) return null\n\n  const result: Record<string, AlternateLinkDescriptor[]> = {}\n  for (const [key, value] of Object.entries(obj)) {\n    if (typeof value === 'string' || value instanceof URL) {\n      result[key] = [\n        {\n          url: resolveAlternateUrl(value, metadataBase, metadataContext),\n        },\n      ]\n    } else {\n      result[key] = []\n      value?.forEach((item, index) => {\n        const url = resolveAlternateUrl(item.url, metadataBase, metadataContext)\n        result[key][index] = {\n          url,\n          title: item.title,\n        }\n      })\n    }\n  }\n  return result\n}\n\nfunction resolveCanonicalUrl(\n  urlOrDescriptor: string | URL | null | AlternateLinkDescriptor | undefined,\n  metadataBase: URL | null,\n  metadataContext: MetadataContext\n): null | AlternateLinkDescriptor {\n  if (!urlOrDescriptor) return null\n\n  const url =\n    typeof urlOrDescriptor === 'string' || urlOrDescriptor instanceof URL\n      ? urlOrDescriptor\n      : urlOrDescriptor.url\n\n  // Return string url because structureClone can't handle URL instance\n  return {\n    url: resolveAlternateUrl(url, metadataBase, metadataContext),\n  }\n}\n\nexport const resolveAlternates: FieldResolverExtraArgs<\n  'alternates',\n  [ResolvedMetadata['metadataBase'], MetadataContext]\n> = (alternates, metadataBase, context) => {\n  if (!alternates) return null\n\n  const canonical = resolveCanonicalUrl(\n    alternates.canonical,\n    metadataBase,\n    context\n  )\n  const languages = resolveUrlValuesOfObject(\n    alternates.languages,\n    metadataBase,\n    context\n  )\n  const media = resolveUrlValuesOfObject(\n    alternates.media,\n    metadataBase,\n    context\n  )\n  const types = resolveUrlValuesOfObject(\n    alternates.types,\n    metadataBase,\n    context\n  )\n\n  const result: ResolvedAlternateURLs = {\n    canonical,\n    languages,\n    media,\n    types,\n  }\n\n  return result\n}\n\nconst robotsKeys = [\n  'noarchive',\n  'nosnippet',\n  'noimageindex',\n  'nocache',\n  'notranslate',\n  'indexifembedded',\n  'nositelinkssearchbox',\n  'unavailable_after',\n  'max-video-preview',\n  'max-image-preview',\n  'max-snippet',\n] as const\nconst resolveRobotsValue: (robots: Metadata['robots']) => string | null = (\n  robots\n) => {\n  if (!robots) return null\n  if (typeof robots === 'string') return robots\n\n  const values: string[] = []\n\n  if (robots.index) values.push('index')\n  else if (typeof robots.index === 'boolean') values.push('noindex')\n\n  if (robots.follow) values.push('follow')\n  else if (typeof robots.follow === 'boolean') values.push('nofollow')\n\n  for (const key of robotsKeys) {\n    const value = robots[key]\n    if (typeof value !== 'undefined' && value !== false) {\n      values.push(typeof value === 'boolean' ? key : `${key}:${value}`)\n    }\n  }\n\n  return values.join(', ')\n}\n\nexport const resolveRobots: FieldResolver<'robots'> = (robots) => {\n  if (!robots) return null\n  return {\n    basic: resolveRobotsValue(robots),\n    googleBot:\n      typeof robots !== 'string' ? resolveRobotsValue(robots.googleBot) : null,\n  }\n}\n\nconst VerificationKeys = ['google', 'yahoo', 'yandex', 'me', 'other'] as const\nexport const resolveVerification: FieldResolver<'verification'> = (\n  verification\n) => {\n  if (!verification) return null\n  const res: ResolvedVerification = {}\n\n  for (const key of VerificationKeys) {\n    const value = verification[key]\n    if (value) {\n      if (key === 'other') {\n        res.other = {}\n        for (const otherKey in verification.other) {\n          const otherValue = resolveAsArrayOrUndefined(\n            verification.other[otherKey]\n          )\n          if (otherValue) res.other[otherKey] = otherValue\n        }\n      } else res[key] = resolveAsArrayOrUndefined(value) as (string | number)[]\n    }\n  }\n  return res\n}\n\nexport const resolveAppleWebApp: FieldResolver<'appleWebApp'> = (appWebApp) => {\n  if (!appWebApp) return null\n  if (appWebApp === true) {\n    return {\n      capable: true,\n    }\n  }\n\n  const startupImages = appWebApp.startupImage\n    ? resolveAsArrayOrUndefined(appWebApp.startupImage)?.map((item) =>\n        typeof item === 'string' ? { url: item } : item\n      )\n    : null\n\n  return {\n    capable: 'capable' in appWebApp ? !!appWebApp.capable : true,\n    title: appWebApp.title || null,\n    startupImage: startupImages,\n    statusBarStyle: appWebApp.statusBarStyle || 'default',\n  }\n}\n\nexport const resolveAppLinks: FieldResolver<'appLinks'> = (appLinks) => {\n  if (!appLinks) return null\n  for (const key in appLinks) {\n    // @ts-ignore // TODO: type infer\n    appLinks[key] = resolveAsArrayOrUndefined(appLinks[key])\n  }\n  return appLinks as ResolvedMetadata['appLinks']\n}\n\nexport const resolveItunes: FieldResolverExtraArgs<\n  'itunes',\n  [ResolvedMetadata['metadataBase'], MetadataContext]\n> = (itunes, metadataBase, context) => {\n  if (!itunes) return null\n  return {\n    appId: itunes.appId,\n    appArgument: itunes.appArgument\n      ? resolveAlternateUrl(itunes.appArgument, metadataBase, context)\n      : undefined,\n  }\n}\n\nexport const resolveFacebook: FieldResolver<'facebook'> = (facebook) => {\n  if (!facebook) return null\n  return {\n    appId: facebook.appId,\n    admins: resolveAsArrayOrUndefined(facebook.admins),\n  }\n}\n"],"names":["resolveAsArrayOrUndefined","resolveAbsoluteUrlWithPathname","resolveAlternateUrl","url","metadataBase","metadataContext","URL","newUrl","pathname","searchParams","forEach","value","key","set","resolveThemeColor","themeColor","themeColorDescriptors","descriptor","push","color","media","resolveUrlValuesOfObject","obj","result","Object","entries","item","index","title","resolveCanonicalUrl","urlOrDescriptor","resolveAlternates","alternates","context","canonical","languages","types","robotsKeys","resolveRobotsValue","robots","values","follow","join","resolveRobots","basic","googleBot","VerificationKeys","resolveVerification","verification","res","other","otherKey","otherValue","resolveAppleWebApp","appWebApp","capable","startupImages","startupImage","map","statusBarStyle","resolveAppLinks","appLinks","resolveItunes","itunes","appId","appArgument","undefined","resolveFacebook","facebook","admins"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3758, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3764, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/resolvers/resolve-icons.ts"],"sourcesContent":["import type { ResolvedMetadata } from '../types/metadata-interface'\nimport type { Icon, IconDescriptor } from '../types/metadata-types'\nimport type { FieldResolver } from '../types/resolvers'\nimport { resolveAsArrayOrUndefined } from '../generate/utils'\nimport { isStringOrURL } from './resolve-url'\nimport { IconKeys } from '../constants'\n\nexport function resolveIcon(icon: Icon): IconDescriptor {\n  if (isStringOrURL(icon)) return { url: icon }\n  else if (Array.isArray(icon)) return icon\n  return icon\n}\n\nexport const resolveIcons: FieldResolver<'icons'> = (icons) => {\n  if (!icons) {\n    return null\n  }\n\n  const resolved: ResolvedMetadata['icons'] = {\n    icon: [],\n    apple: [],\n  }\n  if (Array.isArray(icons)) {\n    resolved.icon = icons.map(resolveIcon).filter(Boolean)\n  } else if (isStringOrURL(icons)) {\n    resolved.icon = [resolveIcon(icons)]\n  } else {\n    for (const key of IconKeys) {\n      const values = resolveAsArrayOrUndefined(icons[key])\n      if (values) resolved[key] = values.map(resolveIcon)\n    }\n  }\n  return resolved\n}\n"],"names":["resolveAsArrayOrUndefined","isStringOrURL","IconKeys","resolveIcon","icon","url","Array","isArray","resolveIcons","icons","resolved","apple","map","filter","Boolean","key","values"],"mappings":";;;;AAGA,SAASA,yBAAyB,QAAQ,oBAAmB;AAC7D,SAASC,aAAa,QAAQ,gBAAe;AAC7C,SAASC,QAAQ,QAAQ,eAAc;;;;AAEhC,SAASC,YAAYC,IAAU;IACpC,sMAAIH,gBAAAA,EAAcG,OAAO,OAAO;QAAEC,KAAKD;IAAK;SACvC,IAAIE,MAAMC,OAAO,CAACH,OAAO,OAAOA;IACrC,OAAOA;AACT;AAEO,MAAMI,eAAuC,CAACC;IACnD,IAAI,CAACA,OAAO;QACV,OAAO;IACT;IAEA,MAAMC,WAAsC;QAC1CN,MAAM,EAAE;QACRO,OAAO,EAAE;IACX;IACA,IAAIL,MAAMC,OAAO,CAACE,QAAQ;QACxBC,SAASN,IAAI,GAAGK,MAAMG,GAAG,CAACT,aAAaU,MAAM,CAACC;IAChD,OAAO,sMAAIb,gBAAAA,EAAcQ,QAAQ;QAC/BC,SAASN,IAAI,GAAG;YAACD,YAAYM;SAAO;IACtC,OAAO;QACL,KAAK,MAAMM,kLAAOb,YAAAA,CAAU;YAC1B,MAAMc,iMAAShB,4BAAAA,EAA0BS,KAAK,CAACM,IAAI;YACnD,IAAIC,QAAQN,QAAQ,CAACK,IAAI,GAAGC,OAAOJ,GAAG,CAACT;QACzC;IACF;IACA,OAAOO;AACT,EAAC","ignoreList":[0]}},
    {"offset": {"line": 3803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3809, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/clone-metadata.ts"],"sourcesContent":["import type { ResolvedMetadata } from './types/metadata-interface'\n\nconst TYPE_URL = '__METADATA_URL'\n\nfunction replacer(_key: string, val: any) {\n  // clone URL as string but recover it as URL\n  if (val instanceof URL) {\n    return { _type: TYPE_URL, value: val.href }\n  }\n  return val\n}\n\nfunction reviver(_key: string, val: any) {\n  if (typeof val === 'object' && val !== null && val._type === TYPE_URL) {\n    return new URL(val.value)\n  }\n  return val\n}\n\nexport function cloneMetadata(metadata: ResolvedMetadata): ResolvedMetadata {\n  const jsonString = JSON.stringify(metadata, replacer)\n  return JSON.parse(jsonString, reviver)\n}\n"],"names":["TYPE_URL","replacer","_key","val","URL","_type","value","href","reviver","cloneMetadata","metadata","jsonString","JSON","stringify","parse"],"mappings":";;;AAEA,MAAMA,WAAW;AAEjB,SAASC,SAASC,IAAY,EAAEC,GAAQ;IACtC,4CAA4C;IAC5C,IAAIA,eAAeC,KAAK;QACtB,OAAO;YAAEC,OAAOL;YAAUM,OAAOH,IAAII,IAAI;QAAC;IAC5C;IACA,OAAOJ;AACT;AAEA,SAASK,QAAQN,IAAY,EAAEC,GAAQ;IACrC,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQA,IAAIE,KAAK,KAAKL,UAAU;QACrE,OAAO,IAAII,IAAID,IAAIG,KAAK;IAC1B;IACA,OAAOH;AACT;AAEO,SAASM,cAAcC,QAA0B;IACtD,MAAMC,aAAaC,KAAKC,SAAS,CAACH,UAAUT;IAC5C,OAAOW,KAAKE,KAAK,CAACH,YAAYH;AAChC","ignoreList":[0]}},
    {"offset": {"line": 3833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3839, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/resolve-metadata.ts"],"sourcesContent":["import type {\n  Metadata,\n  ResolvedMetadata,\n  ResolvedViewport,\n  ResolvingMetadata,\n  ResolvingViewport,\n  Viewport,\n} from './types/metadata-interface'\nimport type { MetadataImageModule } from '../../build/webpack/loaders/metadata/types'\nimport type { GetDynamicParamFromSegment } from '../../server/app-render/app-render'\nimport type { Twitter } from './types/twitter-types'\nimport type { OpenGraph } from './types/opengraph-types'\nimport type { AppDirModules } from '../../build/webpack/loaders/next-app-loader'\nimport type { MetadataContext } from './types/resolvers'\nimport type { LoaderTree } from '../../server/lib/app-dir-module'\nimport type {\n  AbsoluteTemplateString,\n  IconDescriptor,\n  ResolvedIcons,\n} from './types/metadata-types'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { StaticMetadata } from './types/icons'\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'server-only'\n\nimport { cache } from 'react'\nimport {\n  createDefaultMetadata,\n  createDefaultViewport,\n} from './default-metadata'\nimport { resolveOpenGraph, resolveTwitter } from './resolvers/resolve-opengraph'\nimport { resolveTitle } from './resolvers/resolve-title'\nimport { resolveAsArrayOrUndefined } from './generate/utils'\nimport {\n  getComponentTypeModule,\n  getLayoutOrPageModule,\n} from '../../server/lib/app-dir-module'\nimport { interopDefault } from '../interop-default'\nimport {\n  resolveAlternates,\n  resolveAppleWebApp,\n  resolveAppLinks,\n  resolveRobots,\n  resolveThemeColor,\n  resolveVerification,\n  resolveItunes,\n  resolveFacebook,\n} from './resolvers/resolve-basics'\nimport { resolveIcons } from './resolvers/resolve-icons'\nimport { getTracer } from '../../server/lib/trace/tracer'\nimport { ResolveMetadataSpan } from '../../server/lib/trace/constants'\nimport { PAGE_SEGMENT_KEY } from '../../shared/lib/segment'\nimport * as Log from '../../build/output/log'\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external'\nimport type {\n  Params,\n  CreateServerParamsForMetadata,\n} from '../../server/request/params'\n\ntype StaticIcons = Pick<ResolvedIcons, 'icon' | 'apple'>\n\ntype MetadataResolver = (\n  parent: ResolvingMetadata\n) => Metadata | Promise<Metadata>\ntype ViewportResolver = (\n  parent: ResolvingViewport\n) => Viewport | Promise<Viewport>\n\nexport type MetadataItems = [\n  Metadata | MetadataResolver | null,\n  StaticMetadata,\n  Viewport | ViewportResolver | null,\n][]\n\ntype TitleTemplates = {\n  title: string | null\n  twitter: string | null\n  openGraph: string | null\n}\n\ntype BuildState = {\n  warnings: Set<string>\n}\n\ntype LayoutProps = {\n  params: { [key: string]: any }\n}\ntype PageProps = {\n  params: { [key: string]: any }\n  searchParams: { [key: string]: any }\n}\n\nfunction isFavicon(icon: IconDescriptor | undefined): boolean {\n  if (!icon) {\n    return false\n  }\n\n  // turbopack appends a hash to all images\n  return (\n    (icon.url === '/favicon.ico' ||\n      icon.url.toString().startsWith('/favicon.ico?')) &&\n    icon.type === 'image/x-icon'\n  )\n}\n\nfunction mergeStaticMetadata(\n  source: Metadata | null,\n  target: ResolvedMetadata,\n  staticFilesMetadata: StaticMetadata,\n  metadataContext: MetadataContext,\n  titleTemplates: TitleTemplates,\n  leafSegmentStaticIcons: StaticIcons\n) {\n  if (!staticFilesMetadata) return\n  const { icon, apple, openGraph, twitter, manifest } = staticFilesMetadata\n\n  // Keep updating the static icons in the most leaf node\n\n  if (icon) {\n    leafSegmentStaticIcons.icon = icon\n  }\n  if (apple) {\n    leafSegmentStaticIcons.apple = apple\n  }\n\n  // file based metadata is specified and current level metadata twitter.images is not specified\n  if (twitter && !source?.twitter?.hasOwnProperty('images')) {\n    const resolvedTwitter = resolveTwitter(\n      { ...target.twitter, images: twitter } as Twitter,\n      target.metadataBase,\n      metadataContext,\n      titleTemplates.twitter\n    )\n    target.twitter = resolvedTwitter\n  }\n\n  // file based metadata is specified and current level metadata openGraph.images is not specified\n  if (openGraph && !source?.openGraph?.hasOwnProperty('images')) {\n    const resolvedOpenGraph = resolveOpenGraph(\n      { ...target.openGraph, images: openGraph } as OpenGraph,\n      target.metadataBase,\n      metadataContext,\n      titleTemplates.openGraph\n    )\n    target.openGraph = resolvedOpenGraph\n  }\n  if (manifest) {\n    target.manifest = manifest\n  }\n\n  return target\n}\n\n// Merge the source metadata into the resolved target metadata.\nfunction mergeMetadata({\n  source,\n  target,\n  staticFilesMetadata,\n  titleTemplates,\n  metadataContext,\n  buildState,\n  leafSegmentStaticIcons,\n}: {\n  source: Metadata | null\n  target: ResolvedMetadata\n  staticFilesMetadata: StaticMetadata\n  titleTemplates: TitleTemplates\n  metadataContext: MetadataContext\n  buildState: BuildState\n  leafSegmentStaticIcons: StaticIcons\n}): void {\n  // If there's override metadata, prefer it otherwise fallback to the default metadata.\n  const metadataBase =\n    typeof source?.metadataBase !== 'undefined'\n      ? source.metadataBase\n      : target.metadataBase\n  for (const key_ in source) {\n    const key = key_ as keyof Metadata\n\n    switch (key) {\n      case 'title': {\n        target.title = resolveTitle(source.title, titleTemplates.title)\n        break\n      }\n      case 'alternates': {\n        target.alternates = resolveAlternates(\n          source.alternates,\n          metadataBase,\n          metadataContext\n        )\n        break\n      }\n      case 'openGraph': {\n        target.openGraph = resolveOpenGraph(\n          source.openGraph,\n          metadataBase,\n          metadataContext,\n          titleTemplates.openGraph\n        )\n        break\n      }\n      case 'twitter': {\n        target.twitter = resolveTwitter(\n          source.twitter,\n          metadataBase,\n          metadataContext,\n          titleTemplates.twitter\n        )\n        break\n      }\n      case 'facebook':\n        target.facebook = resolveFacebook(source.facebook)\n        break\n\n      case 'verification':\n        target.verification = resolveVerification(source.verification)\n        break\n\n      case 'icons': {\n        target.icons = resolveIcons(source.icons)\n        break\n      }\n      case 'appleWebApp':\n        target.appleWebApp = resolveAppleWebApp(source.appleWebApp)\n        break\n      case 'appLinks':\n        target.appLinks = resolveAppLinks(source.appLinks)\n        break\n      case 'robots': {\n        target.robots = resolveRobots(source.robots)\n        break\n      }\n      case 'archives':\n      case 'assets':\n      case 'bookmarks':\n      case 'keywords': {\n        target[key] = resolveAsArrayOrUndefined(source[key])\n        break\n      }\n      case 'authors': {\n        target[key] = resolveAsArrayOrUndefined(source.authors)\n        break\n      }\n      case 'itunes': {\n        target[key] = resolveItunes(\n          source.itunes,\n          metadataBase,\n          metadataContext\n        )\n        break\n      }\n      // directly assign fields that fallback to null\n      case 'applicationName':\n      case 'description':\n      case 'generator':\n      case 'creator':\n      case 'publisher':\n      case 'category':\n      case 'classification':\n      case 'referrer':\n      case 'formatDetection':\n      case 'manifest':\n        // @ts-ignore TODO: support inferring\n        target[key] = source[key] || null\n        break\n      case 'other':\n        target.other = Object.assign({}, target.other, source.other)\n        break\n      case 'metadataBase':\n        target.metadataBase = metadataBase\n        break\n\n      default: {\n        if (\n          (key === 'viewport' ||\n            key === 'themeColor' ||\n            key === 'colorScheme') &&\n          source[key] != null\n        ) {\n          buildState.warnings.add(\n            `Unsupported metadata ${key} is configured in metadata export in ${metadataContext.pathname}. Please move it to viewport export instead.\\nRead more: https://nextjs.org/docs/app/api-reference/functions/generate-viewport`\n          )\n        }\n        break\n      }\n    }\n  }\n  mergeStaticMetadata(\n    source,\n    target,\n    staticFilesMetadata,\n    metadataContext,\n    titleTemplates,\n    leafSegmentStaticIcons\n  )\n}\n\nfunction mergeViewport({\n  target,\n  source,\n}: {\n  target: ResolvedViewport\n  source: Viewport | null\n}): void {\n  if (!source) return\n  for (const key_ in source) {\n    const key = key_ as keyof Viewport\n\n    switch (key) {\n      case 'themeColor': {\n        target.themeColor = resolveThemeColor(source.themeColor)\n        break\n      }\n      case 'colorScheme':\n        target.colorScheme = source.colorScheme || null\n        break\n      default:\n        if (typeof source[key] !== 'undefined') {\n          // @ts-ignore viewport properties\n          target[key] = source[key]\n        }\n        break\n    }\n  }\n}\n\nasync function getDefinedViewport(\n  mod: any,\n  props: any,\n  tracingProps: { route: string }\n): Promise<Viewport | ViewportResolver | null> {\n  if (typeof mod.generateViewport === 'function') {\n    const { route } = tracingProps\n    return (parent: ResolvingViewport) =>\n      getTracer().trace(\n        ResolveMetadataSpan.generateViewport,\n        {\n          spanName: `generateViewport ${route}`,\n          attributes: {\n            'next.page': route,\n          },\n        },\n        () => mod.generateViewport(props, parent)\n      )\n  }\n  return mod.viewport || null\n}\n\nasync function getDefinedMetadata(\n  mod: any,\n  props: any,\n  tracingProps: { route: string }\n): Promise<Metadata | MetadataResolver | null> {\n  if (typeof mod.generateMetadata === 'function') {\n    const { route } = tracingProps\n    return (parent: ResolvingMetadata) =>\n      getTracer().trace(\n        ResolveMetadataSpan.generateMetadata,\n        {\n          spanName: `generateMetadata ${route}`,\n          attributes: {\n            'next.page': route,\n          },\n        },\n        () => mod.generateMetadata(props, parent)\n      )\n  }\n  return mod.metadata || null\n}\n\nasync function collectStaticImagesFiles(\n  metadata: AppDirModules['metadata'],\n  props: any,\n  type: keyof NonNullable<AppDirModules['metadata']>\n) {\n  if (!metadata?.[type]) return undefined\n\n  const iconPromises = metadata[type as 'icon' | 'apple'].map(\n    async (imageModule: (p: any) => Promise<MetadataImageModule[]>) =>\n      interopDefault(await imageModule(props))\n  )\n\n  return iconPromises?.length > 0\n    ? (await Promise.all(iconPromises))?.flat()\n    : undefined\n}\n\nasync function resolveStaticMetadata(\n  modules: AppDirModules,\n  props: any\n): Promise<StaticMetadata> {\n  const { metadata } = modules\n  if (!metadata) return null\n\n  const [icon, apple, openGraph, twitter] = await Promise.all([\n    collectStaticImagesFiles(metadata, props, 'icon'),\n    collectStaticImagesFiles(metadata, props, 'apple'),\n    collectStaticImagesFiles(metadata, props, 'openGraph'),\n    collectStaticImagesFiles(metadata, props, 'twitter'),\n  ])\n\n  const staticMetadata = {\n    icon,\n    apple,\n    openGraph,\n    twitter,\n    manifest: metadata.manifest,\n  }\n\n  return staticMetadata\n}\n\n// [layout.metadata, static files metadata] -> ... -> [page.metadata, static files metadata]\nasync function collectMetadata({\n  tree,\n  metadataItems,\n  errorMetadataItem,\n  props,\n  route,\n  errorConvention,\n}: {\n  tree: LoaderTree\n  metadataItems: MetadataItems\n  errorMetadataItem: MetadataItems[number]\n  props: any\n  route: string\n  errorConvention?: 'not-found'\n}) {\n  let mod\n  let modType\n  const hasErrorConventionComponent = Boolean(\n    errorConvention && tree[2][errorConvention]\n  )\n  if (errorConvention) {\n    mod = await getComponentTypeModule(tree, 'layout')\n    modType = errorConvention\n  } else {\n    const { mod: layoutOrPageMod, modType: layoutOrPageModType } =\n      await getLayoutOrPageModule(tree)\n    mod = layoutOrPageMod\n    modType = layoutOrPageModType\n  }\n\n  if (modType) {\n    route += `/${modType}`\n  }\n\n  const staticFilesMetadata = await resolveStaticMetadata(tree[2], props)\n  const metadataExport = mod\n    ? await getDefinedMetadata(mod, props, { route })\n    : null\n\n  const viewportExport = mod\n    ? await getDefinedViewport(mod, props, { route })\n    : null\n\n  metadataItems.push([metadataExport, staticFilesMetadata, viewportExport])\n\n  if (hasErrorConventionComponent && errorConvention) {\n    const errorMod = await getComponentTypeModule(tree, errorConvention)\n    const errorViewportExport = errorMod\n      ? await getDefinedViewport(errorMod, props, { route })\n      : null\n    const errorMetadataExport = errorMod\n      ? await getDefinedMetadata(errorMod, props, { route })\n      : null\n\n    errorMetadataItem[0] = errorMetadataExport\n    errorMetadataItem[1] = staticFilesMetadata\n    errorMetadataItem[2] = errorViewportExport\n  }\n}\n\nconst cachedResolveMetadataItems = cache(resolveMetadataItems)\nexport { cachedResolveMetadataItems as resolveMetadataItems }\nasync function resolveMetadataItems(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: 'not-found' | undefined,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  createServerParamsForMetadata: CreateServerParamsForMetadata,\n  workStore: WorkStore\n) {\n  const parentParams = {}\n  const metadataItems: MetadataItems = []\n  const errorMetadataItem: MetadataItems[number] = [null, null, null]\n  const treePrefix = undefined\n  return resolveMetadataItemsImpl(\n    metadataItems,\n    tree,\n    treePrefix,\n    parentParams,\n    searchParams,\n    errorConvention,\n    errorMetadataItem,\n    getDynamicParamFromSegment,\n    createServerParamsForMetadata,\n    workStore\n  )\n}\n\nasync function resolveMetadataItemsImpl(\n  metadataItems: MetadataItems,\n  tree: LoaderTree,\n  /** Provided tree can be nested subtree, this argument says what is the path of such subtree */\n  treePrefix: undefined | string[],\n  parentParams: Params,\n  searchParams: Promise<ParsedUrlQuery>,\n  errorConvention: 'not-found' | undefined,\n  errorMetadataItem: MetadataItems[number],\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  createServerParamsForMetadata: CreateServerParamsForMetadata,\n  workStore: WorkStore\n): Promise<MetadataItems> {\n  const [segment, parallelRoutes, { page }] = tree\n  const currentTreePrefix =\n    treePrefix && treePrefix.length ? [...treePrefix, segment] : [segment]\n  const isPage = typeof page !== 'undefined'\n\n  // Handle dynamic segment params.\n  const segmentParam = getDynamicParamFromSegment(segment)\n  /**\n   * Create object holding the parent params and current params\n   */\n  let currentParams = parentParams\n  if (segmentParam && segmentParam.value !== null) {\n    currentParams = {\n      ...parentParams,\n      [segmentParam.param]: segmentParam.value,\n    }\n  }\n\n  const params = createServerParamsForMetadata(currentParams, workStore)\n\n  let layerProps: LayoutProps | PageProps\n  if (isPage) {\n    layerProps = {\n      params,\n      searchParams,\n    }\n  } else {\n    layerProps = {\n      params,\n    }\n  }\n\n  await collectMetadata({\n    tree,\n    metadataItems,\n    errorMetadataItem,\n    errorConvention,\n    props: layerProps,\n    route: currentTreePrefix\n      // __PAGE__ shouldn't be shown in a route\n      .filter((s) => s !== PAGE_SEGMENT_KEY)\n      .join('/'),\n  })\n\n  for (const key in parallelRoutes) {\n    const childTree = parallelRoutes[key]\n    await resolveMetadataItemsImpl(\n      metadataItems,\n      childTree,\n      currentTreePrefix,\n      currentParams,\n      searchParams,\n      errorConvention,\n      errorMetadataItem,\n      getDynamicParamFromSegment,\n      createServerParamsForMetadata,\n      workStore\n    )\n  }\n\n  if (Object.keys(parallelRoutes).length === 0 && errorConvention) {\n    // If there are no parallel routes, place error metadata as the last item.\n    // e.g. layout -> layout -> not-found\n    metadataItems.push(errorMetadataItem)\n  }\n\n  return metadataItems\n}\n\ntype WithTitle = { title?: AbsoluteTemplateString | null }\ntype WithDescription = { description?: string | null }\n\nconst isTitleTruthy = (title: AbsoluteTemplateString | null | undefined) =>\n  !!title?.absolute\nconst hasTitle = (metadata: WithTitle | null) => isTitleTruthy(metadata?.title)\n\nfunction inheritFromMetadata(\n  target: (WithTitle & WithDescription) | null,\n  metadata: ResolvedMetadata\n) {\n  if (target) {\n    if (!hasTitle(target) && hasTitle(metadata)) {\n      target.title = metadata.title\n    }\n    if (!target.description && metadata.description) {\n      target.description = metadata.description\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst commonOgKeys = ['title', 'description', 'images'] as const\nfunction postProcessMetadata(\n  metadata: ResolvedMetadata,\n  favicon: any,\n  titleTemplates: TitleTemplates,\n  metadataContext: MetadataContext\n): ResolvedMetadata {\n  const { openGraph, twitter } = metadata\n\n  if (openGraph) {\n    // If there's openGraph information but not configured in twitter,\n    // inherit them from openGraph metadata.\n    let autoFillProps: Partial<{\n      [Key in (typeof commonOgKeys)[number]]: NonNullable<\n        ResolvedMetadata['openGraph']\n      >[Key]\n    }> = {}\n    const hasTwTitle = hasTitle(twitter)\n    const hasTwDescription = twitter?.description\n    const hasTwImages = Boolean(\n      twitter?.hasOwnProperty('images') && twitter.images\n    )\n    if (!hasTwTitle) {\n      if (isTitleTruthy(openGraph.title)) {\n        autoFillProps.title = openGraph.title\n      } else if (metadata.title && isTitleTruthy(metadata.title)) {\n        autoFillProps.title = metadata.title\n      }\n    }\n    if (!hasTwDescription)\n      autoFillProps.description =\n        openGraph.description || metadata.description || undefined\n    if (!hasTwImages) autoFillProps.images = openGraph.images\n\n    if (Object.keys(autoFillProps).length > 0) {\n      const partialTwitter = resolveTwitter(\n        autoFillProps,\n        metadata.metadataBase,\n        metadataContext,\n        titleTemplates.twitter\n      )\n      if (metadata.twitter) {\n        metadata.twitter = Object.assign({}, metadata.twitter, {\n          ...(!hasTwTitle && { title: partialTwitter?.title }),\n          ...(!hasTwDescription && {\n            description: partialTwitter?.description,\n          }),\n          ...(!hasTwImages && { images: partialTwitter?.images }),\n        })\n      } else {\n        metadata.twitter = partialTwitter\n      }\n    }\n  }\n\n  // If there's no title and description configured in openGraph or twitter,\n  // use the title and description from metadata.\n  inheritFromMetadata(openGraph, metadata)\n  inheritFromMetadata(twitter, metadata)\n\n  if (favicon) {\n    if (!metadata.icons) {\n      metadata.icons = {\n        icon: [],\n        apple: [],\n      }\n    }\n\n    metadata.icons.icon.unshift(favicon)\n  }\n\n  return metadata\n}\n\ntype DataResolver<Data, ResolvedData> = (\n  parent: Promise<ResolvedData>\n) => Data | Promise<Data>\n\nfunction collectMetadataExportPreloading<Data, ResolvedData>(\n  results: (Data | Promise<Data>)[],\n  dynamicMetadataExportFn: DataResolver<Data, ResolvedData>,\n  resolvers: ((value: ResolvedData) => void)[]\n) {\n  const result = dynamicMetadataExportFn(\n    new Promise<any>((resolve) => {\n      resolvers.push(resolve)\n    })\n  )\n\n  if (result instanceof Promise) {\n    // since we eager execute generateMetadata and\n    // they can reject at anytime we need to ensure\n    // we attach the catch handler right away to\n    // prevent unhandled rejections crashing the process\n    result.catch((err) => {\n      return {\n        __nextError: err,\n      }\n    })\n  }\n  results.push(result)\n}\n\nasync function getMetadataFromExport<Data, ResolvedData>(\n  getPreloadMetadataExport: (\n    metadataItem: NonNullable<MetadataItems[number]>\n  ) => Data | DataResolver<Data, ResolvedData> | null,\n  dynamicMetadataResolveState: {\n    resolvers: ((value: ResolvedData) => void)[]\n    resolvingIndex: number\n  },\n  metadataItems: MetadataItems,\n  currentIndex: number,\n  resolvedMetadata: ResolvedData,\n  metadataResults: (Data | Promise<Data>)[]\n) {\n  const metadataExport = getPreloadMetadataExport(metadataItems[currentIndex])\n  const dynamicMetadataResolvers = dynamicMetadataResolveState.resolvers\n  let metadata: Data | null = null\n  if (typeof metadataExport === 'function') {\n    // Only preload at the beginning when resolves are empty\n    if (!dynamicMetadataResolvers.length) {\n      for (let j = currentIndex; j < metadataItems.length; j++) {\n        const preloadMetadataExport = getPreloadMetadataExport(metadataItems[j])\n        // call each `generateMetadata function concurrently and stash their resolver\n        if (typeof preloadMetadataExport === 'function') {\n          collectMetadataExportPreloading<Data, ResolvedData>(\n            metadataResults,\n            preloadMetadataExport as DataResolver<Data, ResolvedData>,\n            dynamicMetadataResolvers\n          )\n        }\n      }\n    }\n\n    const resolveParent =\n      dynamicMetadataResolvers[dynamicMetadataResolveState.resolvingIndex]\n    const metadataResult =\n      metadataResults[dynamicMetadataResolveState.resolvingIndex++]\n\n    // In dev we clone and freeze to prevent relying on mutating resolvedMetadata directly.\n    // In prod we just pass resolvedMetadata through without any copying.\n    const currentResolvedMetadata =\n      process.env.NODE_ENV === 'development'\n        ? Object.freeze(\n            require('./clone-metadata').cloneMetadata(resolvedMetadata)\n          )\n        : resolvedMetadata\n\n    // This resolve should unblock the generateMetadata function if it awaited the parent\n    // argument. If it didn't await the parent argument it might already have a value since it was\n    // called concurrently. Regardless we await the return value before continuing on to the next layer\n    resolveParent(currentResolvedMetadata)\n    metadata =\n      metadataResult instanceof Promise ? await metadataResult : metadataResult\n\n    if (metadata && typeof metadata === 'object' && '__nextError' in metadata) {\n      // re-throw caught metadata error from preloading\n      throw metadata['__nextError']\n    }\n  } else if (metadataExport !== null && typeof metadataExport === 'object') {\n    // This metadataExport is the object form\n    metadata = metadataExport\n  }\n\n  return metadata\n}\n\nexport async function accumulateMetadata(\n  metadataItems: MetadataItems,\n  metadataContext: MetadataContext\n): Promise<ResolvedMetadata> {\n  const resolvedMetadata = createDefaultMetadata()\n  const metadataResults: (Metadata | Promise<Metadata>)[] = []\n\n  let titleTemplates: TitleTemplates = {\n    title: null,\n    twitter: null,\n    openGraph: null,\n  }\n\n  // Loop over all metadata items again, merging synchronously any static object exports,\n  // awaiting any static promise exports, and resolving parent metadata and awaiting any generated metadata\n  const dynamicMetadataResolvers = {\n    resolvers: [],\n    resolvingIndex: 0,\n  }\n  const buildState = {\n    warnings: new Set<string>(),\n  }\n\n  let favicon\n\n  // Collect the static icons in the most leaf node,\n  // since we don't collect all the static metadata icons in the parent segments.\n  const leafSegmentStaticIcons = {\n    icon: [],\n    apple: [],\n  }\n  for (let i = 0; i < metadataItems.length; i++) {\n    const staticFilesMetadata = metadataItems[i][1]\n\n    // Treat favicon as special case, it should be the first icon in the list\n    // i <= 1 represents root layout, and if current page is also at root\n    if (i <= 1 && isFavicon(staticFilesMetadata?.icon?.[0])) {\n      const iconMod = staticFilesMetadata?.icon?.shift()\n      if (i === 0) favicon = iconMod\n    }\n\n    const metadata = await getMetadataFromExport<Metadata, ResolvedMetadata>(\n      (metadataItem) => metadataItem[0],\n      dynamicMetadataResolvers,\n      metadataItems,\n      i,\n      resolvedMetadata,\n      metadataResults\n    )\n\n    mergeMetadata({\n      target: resolvedMetadata,\n      source: metadata,\n      metadataContext,\n      staticFilesMetadata,\n      titleTemplates,\n      buildState,\n      leafSegmentStaticIcons,\n    })\n\n    // If the layout is the same layer with page, skip the leaf layout and leaf page\n    // The leaf layout and page are the last two items\n    if (i < metadataItems.length - 2) {\n      titleTemplates = {\n        title: resolvedMetadata.title?.template || null,\n        openGraph: resolvedMetadata.openGraph?.title.template || null,\n        twitter: resolvedMetadata.twitter?.title.template || null,\n      }\n    }\n  }\n\n  if (\n    leafSegmentStaticIcons.icon.length > 0 ||\n    leafSegmentStaticIcons.apple.length > 0\n  ) {\n    if (!resolvedMetadata.icons) {\n      resolvedMetadata.icons = {\n        icon: [],\n        apple: [],\n      }\n      if (leafSegmentStaticIcons.icon.length > 0) {\n        resolvedMetadata.icons.icon.unshift(...leafSegmentStaticIcons.icon)\n      }\n      if (leafSegmentStaticIcons.apple.length > 0) {\n        resolvedMetadata.icons.apple.unshift(...leafSegmentStaticIcons.apple)\n      }\n    }\n  }\n\n  // Only log warnings if there are any, and only once after the metadata resolving process is finished\n  if (buildState.warnings.size > 0) {\n    for (const warning of buildState.warnings) {\n      Log.warn(warning)\n    }\n  }\n\n  return postProcessMetadata(\n    resolvedMetadata,\n    favicon,\n    titleTemplates,\n    metadataContext\n  )\n}\n\nexport async function accumulateViewport(\n  metadataItems: MetadataItems\n): Promise<ResolvedViewport> {\n  const resolvedViewport: ResolvedViewport = createDefaultViewport()\n\n  const viewportResults: (Viewport | Promise<Viewport>)[] = []\n  const dynamicMetadataResolvers = {\n    resolvers: [],\n    resolvingIndex: 0,\n  }\n  for (let i = 0; i < metadataItems.length; i++) {\n    const viewport = await getMetadataFromExport<Viewport, ResolvedViewport>(\n      (metadataItem) => metadataItem[2],\n      dynamicMetadataResolvers,\n      metadataItems,\n      i,\n      resolvedViewport,\n      viewportResults\n    )\n\n    mergeViewport({\n      target: resolvedViewport,\n      source: viewport,\n    })\n  }\n  return resolvedViewport\n}\n"],"names":["cache","createDefaultMetadata","createDefaultViewport","resolveOpenGraph","resolveTwitter","resolveTitle","resolveAsArrayOrUndefined","getComponentTypeModule","getLayoutOrPageModule","interopDefault","resolveAlternates","resolveAppleWebApp","resolveAppLinks","resolveRobots","resolveThemeColor","resolveVerification","resolveItunes","resolveFacebook","resolveIcons","getTracer","ResolveMetadataSpan","PAGE_SEGMENT_KEY","Log","isFavicon","icon","url","toString","startsWith","type","mergeStaticMetadata","source","target","staticFilesMetadata","metadataContext","titleTemplates","leafSegmentStaticIcons","apple","openGraph","twitter","manifest","hasOwnProperty","resolvedTwitter","images","metadataBase","resolvedOpenGraph","mergeMetadata","buildState","key_","key","title","alternates","facebook","verification","icons","appleWebApp","appLinks","robots","authors","itunes","other","Object","assign","warnings","add","pathname","mergeViewport","themeColor","colorScheme","getDefinedViewport","mod","props","tracingProps","generateViewport","route","parent","trace","spanName","attributes","viewport","getDefinedMetadata","generateMetadata","metadata","collectStaticImagesFiles","undefined","iconPromises","map","imageModule","length","Promise","all","flat","resolveStaticMetadata","modules","staticMetadata","collectMetadata","tree","metadataItems","errorMetadataItem","errorConvention","modType","hasErrorConventionComponent","Boolean","layoutOrPageMod","layoutOrPageModType","metadataExport","viewportExport","push","errorMod","errorViewportExport","errorMetadataExport","cachedResolveMetadataItems","resolveMetadataItems","searchParams","getDynamicParamFromSegment","createServerParamsForMetadata","workStore","parentParams","treePrefix","resolveMetadataItemsImpl","segment","parallelRoutes","page","currentTreePrefix","isPage","segmentParam","currentParams","value","param","params","layerProps","filter","s","join","childTree","keys","isTitleTruthy","absolute","hasTitle","inheritFromMetadata","description","commonOgKeys","postProcessMetadata","favicon","autoFillProps","hasTwTitle","hasTwDescription","hasTwImages","partialTwitter","unshift","collectMetadataExportPreloading","results","dynamicMetadataExportFn","resolvers","result","resolve","catch","err","__nextError","getMetadataFromExport","getPreloadMetadataExport","dynamicMetadataResolveState","currentIndex","resolvedMetadata","metadataResults","dynamicMetadataResolvers","j","preloadMetadataExport","resolveParent","resolvingIndex","metadataResult","currentResolvedMetadata","process","env","NODE_ENV","freeze","require","cloneMetadata","accumulateMetadata","Set","i","iconMod","shift","metadataItem","template","size","warning","warn","accumulateViewport","resolvedViewport","viewportResults"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4407, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/metadata.tsx"],"sourcesContent":["import type { ParsedUrlQuery } from 'querystring'\nimport type { GetDynamicParamFromSegment } from '../../server/app-render/app-render'\nimport type { LoaderTree } from '../../server/lib/app-dir-module'\nimport type { CreateServerParamsForMetadata } from '../../server/request/params'\n\nimport { cache, cloneElement } from 'react'\nimport {\n  AppleWebAppMeta,\n  FormatDetectionMeta,\n  ItunesMeta,\n  BasicMeta,\n  ViewportMeta,\n  VerificationMeta,\n  FacebookMeta,\n} from './generate/basic'\nimport { AlternatesMetadata } from './generate/alternate'\nimport {\n  OpenGraphMetadata,\n  TwitterMetadata,\n  AppLinksMeta,\n} from './generate/opengraph'\nimport { IconsMetadata } from './generate/icons'\nimport {\n  resolveMetadataItems,\n  accumulateMetadata,\n  accumulateViewport,\n} from './resolve-metadata'\nimport { MetaFilter } from './generate/meta'\nimport type {\n  ResolvedMetadata,\n  ResolvedViewport,\n} from './types/metadata-interface'\nimport { isNotFoundError } from '../../client/components/not-found'\nimport type { MetadataContext } from './types/resolvers'\nimport type { WorkStore } from '../../server/app-render/work-async-storage.external'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n} from './metadata-constants'\n\n// Use a promise to share the status of the metadata resolving,\n// returning two components `MetadataTree` and `MetadataOutlet`\n// `MetadataTree` is the one that will be rendered at first in the content sequence for metadata tags.\n// `MetadataOutlet` is the one that will be rendered under error boundaries for metadata resolving errors.\n// In this way we can let the metadata tags always render successfully,\n// and the error will be caught by the error boundary and trigger fallbacks.\nexport function createMetadataComponents({\n  tree,\n  searchParams,\n  metadataContext,\n  getDynamicParamFromSegment,\n  appUsingSizeAdjustment,\n  errorType,\n  createServerParamsForMetadata,\n  workStore,\n  MetadataBoundary,\n  ViewportBoundary,\n}: {\n  tree: LoaderTree\n  searchParams: Promise<ParsedUrlQuery>\n  metadataContext: MetadataContext\n  getDynamicParamFromSegment: GetDynamicParamFromSegment\n  appUsingSizeAdjustment: boolean\n  errorType?: 'not-found' | 'redirect'\n  createServerParamsForMetadata: CreateServerParamsForMetadata\n  workStore: WorkStore\n  MetadataBoundary: (props: { children: React.ReactNode }) => React.ReactNode\n  ViewportBoundary: (props: { children: React.ReactNode }) => React.ReactNode\n}): [React.ComponentType, () => Promise<void>] {\n  function MetadataRoot() {\n    return (\n      <>\n        <MetadataBoundary>\n          <Metadata />\n        </MetadataBoundary>\n        <ViewportBoundary>\n          <Viewport />\n        </ViewportBoundary>\n        {appUsingSizeAdjustment ? <meta name=\"next-size-adjust\" /> : null}\n      </>\n    )\n  }\n\n  async function viewport() {\n    return getResolvedViewport(\n      tree,\n      searchParams,\n      getDynamicParamFromSegment,\n      createServerParamsForMetadata,\n      workStore,\n      errorType\n    )\n  }\n\n  async function Viewport() {\n    try {\n      return await viewport()\n    } catch (error) {\n      if (!errorType && isNotFoundError(error)) {\n        try {\n          return await getNotFoundViewport(\n            tree,\n            searchParams,\n            getDynamicParamFromSegment,\n            createServerParamsForMetadata,\n            workStore\n          )\n        } catch {}\n      }\n      // We don't actually want to error in this component. We will\n      // also error in the MetadataOutlet which causes the error to\n      // bubble from the right position in the page to be caught by the\n      // appropriate boundaries\n      return null\n    }\n  }\n  Viewport.displayName = VIEWPORT_BOUNDARY_NAME\n\n  async function metadata() {\n    return getResolvedMetadata(\n      tree,\n      searchParams,\n      getDynamicParamFromSegment,\n      metadataContext,\n      createServerParamsForMetadata,\n      workStore,\n      errorType\n    )\n  }\n\n  async function Metadata() {\n    try {\n      return await metadata()\n    } catch (error) {\n      if (!errorType && isNotFoundError(error)) {\n        try {\n          return await getNotFoundMetadata(\n            tree,\n            searchParams,\n            getDynamicParamFromSegment,\n            metadataContext,\n            createServerParamsForMetadata,\n            workStore\n          )\n        } catch {}\n      }\n      // We don't actually want to error in this component. We will\n      // also error in the MetadataOutlet which causes the error to\n      // bubble from the right position in the page to be caught by the\n      // appropriate boundaries\n      return null\n    }\n  }\n  Metadata.displayName = METADATA_BOUNDARY_NAME\n\n  async function getMetadataAndViewportReady(): Promise<void> {\n    await viewport()\n    await metadata()\n    return undefined\n  }\n\n  return [MetadataRoot, getMetadataAndViewportReady]\n}\n\nconst getResolvedMetadata = cache(getResolvedMetadataImpl)\nasync function getResolvedMetadataImpl(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  metadataContext: MetadataContext,\n  createServerParamsForMetadata: CreateServerParamsForMetadata,\n  workStore: WorkStore,\n  errorType?: 'not-found' | 'redirect'\n): Promise<React.ReactNode> {\n  const errorConvention = errorType === 'redirect' ? undefined : errorType\n\n  const metadataItems = await resolveMetadataItems(\n    tree,\n    searchParams,\n    errorConvention,\n    getDynamicParamFromSegment,\n    createServerParamsForMetadata,\n    workStore\n  )\n  const elements: Array<React.ReactNode> = createMetadataElements(\n    await accumulateMetadata(metadataItems, metadataContext)\n  )\n  return (\n    <>\n      {elements.map((el, index) => {\n        return cloneElement(el as React.ReactElement, { key: index })\n      })}\n    </>\n  )\n}\n\nconst getNotFoundMetadata = cache(getNotFoundMetadataImpl)\nasync function getNotFoundMetadataImpl(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  metadataContext: MetadataContext,\n  createServerParamsForMetadata: CreateServerParamsForMetadata,\n  workStore: WorkStore\n): Promise<React.ReactNode> {\n  const notFoundErrorConvention = 'not-found'\n  const notFoundMetadataItems = await resolveMetadataItems(\n    tree,\n    searchParams,\n    notFoundErrorConvention,\n    getDynamicParamFromSegment,\n    createServerParamsForMetadata,\n    workStore\n  )\n\n  const elements: Array<React.ReactNode> = createMetadataElements(\n    await accumulateMetadata(notFoundMetadataItems, metadataContext)\n  )\n  return (\n    <>\n      {elements.map((el, index) => {\n        return cloneElement(el as React.ReactElement, { key: index })\n      })}\n    </>\n  )\n}\n\nconst getResolvedViewport = cache(getResolvedViewportImpl)\nasync function getResolvedViewportImpl(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  createServerParamsForMetadata: CreateServerParamsForMetadata,\n  workStore: WorkStore,\n  errorType?: 'not-found' | 'redirect'\n): Promise<React.ReactNode> {\n  const errorConvention = errorType === 'redirect' ? undefined : errorType\n\n  const metadataItems = await resolveMetadataItems(\n    tree,\n    searchParams,\n    errorConvention,\n    getDynamicParamFromSegment,\n    createServerParamsForMetadata,\n    workStore\n  )\n  const elements: Array<React.ReactNode> = createViewportElements(\n    await accumulateViewport(metadataItems)\n  )\n  return (\n    <>\n      {elements.map((el, index) => {\n        return cloneElement(el as React.ReactElement, { key: index })\n      })}\n    </>\n  )\n}\n\nconst getNotFoundViewport = cache(getNotFoundViewportImpl)\nasync function getNotFoundViewportImpl(\n  tree: LoaderTree,\n  searchParams: Promise<ParsedUrlQuery>,\n  getDynamicParamFromSegment: GetDynamicParamFromSegment,\n  createServerParamsForMetadata: CreateServerParamsForMetadata,\n  workStore: WorkStore\n): Promise<React.ReactNode> {\n  const notFoundErrorConvention = 'not-found'\n  const notFoundMetadataItems = await resolveMetadataItems(\n    tree,\n    searchParams,\n    notFoundErrorConvention,\n    getDynamicParamFromSegment,\n    createServerParamsForMetadata,\n    workStore\n  )\n\n  const elements: Array<React.ReactNode> = createViewportElements(\n    await accumulateViewport(notFoundMetadataItems)\n  )\n  return (\n    <>\n      {elements.map((el, index) => {\n        return cloneElement(el as React.ReactElement, { key: index })\n      })}\n    </>\n  )\n}\n\nfunction createMetadataElements(metadata: ResolvedMetadata) {\n  return MetaFilter([\n    BasicMeta({ metadata }),\n    AlternatesMetadata({ alternates: metadata.alternates }),\n    ItunesMeta({ itunes: metadata.itunes }),\n    FacebookMeta({ facebook: metadata.facebook }),\n    FormatDetectionMeta({ formatDetection: metadata.formatDetection }),\n    VerificationMeta({ verification: metadata.verification }),\n    AppleWebAppMeta({ appleWebApp: metadata.appleWebApp }),\n    OpenGraphMetadata({ openGraph: metadata.openGraph }),\n    TwitterMetadata({ twitter: metadata.twitter }),\n    AppLinksMeta({ appLinks: metadata.appLinks }),\n    IconsMetadata({ icons: metadata.icons }),\n  ])\n}\n\nfunction createViewportElements(viewport: ResolvedViewport) {\n  return MetaFilter([ViewportMeta({ viewport: viewport })])\n}\n"],"names":["cache","cloneElement","AppleWebAppMeta","FormatDetectionMeta","ItunesMeta","BasicMeta","ViewportMeta","VerificationMeta","FacebookMeta","AlternatesMetadata","OpenGraphMetadata","TwitterMetadata","AppLinksMeta","IconsMetadata","resolveMetadataItems","accumulateMetadata","accumulateViewport","MetaFilter","isNotFoundError","METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","createMetadataComponents","tree","searchParams","metadataContext","getDynamicParamFromSegment","appUsingSizeAdjustment","errorType","createServerParamsForMetadata","workStore","MetadataBoundary","ViewportBoundary","MetadataRoot","Metadata","Viewport","meta","name","viewport","getResolvedViewport","error","getNotFoundViewport","displayName","metadata","getResolvedMetadata","getNotFoundMetadata","getMetadataAndViewportReady","undefined","getResolvedMetadataImpl","errorConvention","metadataItems","elements","createMetadataElements","map","el","index","key","getNotFoundMetadataImpl","notFoundErrorConvention","notFoundMetadataItems","getResolvedViewportImpl","createViewportElements","getNotFoundViewportImpl","alternates","itunes","facebook","formatDetection","verification","appleWebApp","openGraph","twitter","appLinks","icons"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4597, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/esm/lib/metadata/metadata-boundary.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/lib/metadata/metadata-boundary.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,+BAA+B,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 4599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4604, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/esm/lib/metadata/metadata-boundary.js/proxy.js"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/esm/lib/metadata/metadata-boundary.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,+BAA+B,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 4606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4612, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/lib/metadata/metadata-boundary.tsx"],"sourcesContent":["'use client'\n\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from './metadata-constants'\n\n// We use a namespace object to allow us to recover the name of the function\n// at runtime even when production bundling/minification is used.\nconst NameSpace = {\n  [METADATA_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n  [VIEWPORT_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n  [OUTLET_BOUNDARY_NAME]: function ({\n    children,\n  }: {\n    children: React.ReactNode\n  }) {\n    return children\n  },\n}\n\nexport const MetadataBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[METADATA_BOUNDARY_NAME.slice(0) as typeof METADATA_BOUNDARY_NAME]\n\nexport const ViewportBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[VIEWPORT_BOUNDARY_NAME.slice(0) as typeof VIEWPORT_BOUNDARY_NAME]\n\nexport const OutletBoundary =\n  // We use slice(0) to trick the bundler into not inlining/minifying the function\n  // so it retains the name inferred from the namespace object\n  NameSpace[OUTLET_BOUNDARY_NAME.slice(0) as typeof OUTLET_BOUNDARY_NAME]\n"],"names":["METADATA_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","NameSpace","children","MetadataBoundary","slice","ViewportBoundary","OutletBoundary"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 4616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}