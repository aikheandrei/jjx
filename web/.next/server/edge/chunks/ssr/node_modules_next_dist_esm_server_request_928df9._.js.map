{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/fallback-params.ts"],"sourcesContent":["import { getRouteMatcher } from '../../shared/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../../shared/lib/router/utils/route-regex'\n\nexport type FallbackRouteParams = ReadonlyMap<string, string>\n\nexport function getParamKeys(page: string) {\n  const pattern = getRouteRegex(page)\n  const matcher = getRouteMatcher(pattern)\n\n  // Get the default list of allowed params.\n  return Object.keys(matcher(page))\n}\n\nexport function getFallbackRouteParams(\n  pageOrKeys: string | readonly string[]\n): FallbackRouteParams | null {\n  let keys: readonly string[]\n  if (typeof pageOrKeys === 'string') {\n    keys = getParamKeys(pageOrKeys)\n  } else {\n    keys = pageOrKeys\n  }\n\n  // If there are no keys, we can return early.\n  if (keys.length === 0) return null\n\n  const params = new Map<string, string>()\n\n  // As we're creating unique keys for each of the dynamic route params, we only\n  // need to generate a unique ID once per request because each of the keys will\n  // be also be unique.\n  const uniqueID = Math.random().toString(16).slice(2)\n\n  for (const key of keys) {\n    params.set(key, `%%drp:${key}:${uniqueID}%%`)\n  }\n\n  return params\n}\n"],"names":["getRouteMatcher","getRouteRegex","getParamKeys","page","pattern","matcher","Object","keys","getFallbackRouteParams","pageOrKeys","length","params","Map","uniqueID","Math","random","toString","slice","key","set"],"mappings":";;;;AAAA,SAASA,eAAe,QAAQ,8CAA6C;AAC7E,SAASC,aAAa,QAAQ,4CAA2C;;;AAIlE,SAASC,aAAaC,IAAY;IACvC,MAAMC,gNAAUH,gBAAAA,EAAcE;IAC9B,MAAME,kNAAUL,kBAAAA,EAAgBI;IAEhC,0CAA0C;IAC1C,OAAOE,OAAOC,IAAI,CAACF,QAAQF;AAC7B;AAEO,SAASK,uBACdC,UAAsC;IAEtC,IAAIF;IACJ,IAAI,OAAOE,eAAe,UAAU;QAClCF,OAAOL,aAAaO;IACtB,OAAO;QACLF,OAAOE;IACT;IAEA,6CAA6C;IAC7C,IAAIF,KAAKG,MAAM,KAAK,GAAG,OAAO;IAE9B,MAAMC,SAAS,IAAIC;IAEnB,8EAA8E;IAC9E,8EAA8E;IAC9E,qBAAqB;IACrB,MAAMC,WAAWC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,KAAK,CAAC;IAElD,KAAK,MAAMC,OAAOX,KAAM;QACtBI,OAAOQ,GAAG,CAACD,KAAK,CAAC,MAAM,EAAEA,IAAI,CAAC,EAAEL,SAAS,EAAE,CAAC;IAC9C;IAEA,OAAOF;AACT","ignoreList":[0]}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/cookies.ts"],"sourcesContent":["import {\n  type ReadonlyRequestCookies,\n  type ResponseCookies,\n  areCookiesMutableInCurrentPhase,\n  RequestCookiesAdapter,\n} from '../web/spec-extension/adapters/request-cookies'\nimport { RequestCookies } from '../web/spec-extension/cookies'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  postponeWithTracking,\n  abortAndThrowOnSynchronousRequestDataAccess,\n  throwToInterruptStaticGeneration,\n  trackDynamicDataInDynamicRender,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { scheduleImmediate } from '../../lib/scheduler'\n\n/**\n * In this version of Next.js `cookies()` returns a Promise however you can still reference the properties of the underlying cookies object\n * synchronously to facilitate migration. The `UnsafeUnwrappedCookies` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `cookies()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedCookies` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `cookies()` value can be awaited or you should call `cookies()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedCookies` in your codebase or by search for a comment that\n * starts with `@next-codemod-error`.\n *\n * In a future version of Next.js `cookies()` will only return a Promise and you will not be able to access the underlying cookies object directly\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedCookies` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedCookies = ReadonlyRequestCookies\n\nexport function cookies(): Promise<ReadonlyRequestCookies> {\n  const callingExpression = 'cookies'\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workStore) {\n    if (workStore.forceStatic) {\n      // When using forceStatic we override all other logic and always just return an empty\n      // cookies object without tracking\n      const underlyingCookies = createEmptyCookies()\n      return makeUntrackedExoticCookies(underlyingCookies)\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'cache') {\n        throw new Error(\n          `Route ${workStore.route} used \"cookies\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n        )\n      } else if (workUnitStore.type === 'unstable-cache') {\n        throw new Error(\n          `Route ${workStore.route} used \"cookies\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n        )\n      } else if (workUnitStore.phase === 'after') {\n        throw new Error(\n          `Route ${workStore.route} used \"cookies\" inside \"unstable_after(...)\". This is not supported. If you need this data inside an \"unstable_after\" callback, use \"cookies\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/unstable_after`\n        )\n      }\n    }\n    if (workStore.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`cookies\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We don't track dynamic access here because access will be tracked when you access\n        // one of the properties of the cookies object.\n        return makeDynamicallyTrackedExoticCookies(\n          workStore.route,\n          workUnitStore\n        )\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // PPR Prerender (no dynamicIO)\n        // We are prerendering with PPR. We need track dynamic access here eagerly\n        // to keep continuity with how cookies has worked in PPR without dynamicIO.\n        postponeWithTracking(\n          workStore.route,\n          callingExpression,\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        // Legacy Prerender\n        // We track dynamic access here so we don't need to wrap the cookies in\n        // individual property access tracking.\n        throwToInterruptStaticGeneration(\n          callingExpression,\n          workStore,\n          workUnitStore\n        )\n      }\n    }\n    // We fall through to the dynamic context below but we still track dynamic access\n    // because in dev we can still error for things like using cookies inside a cache context\n    trackDynamicDataInDynamicRender(workStore, workUnitStore)\n  }\n\n  // cookies is being called in a dynamic context\n\n  const requestStore = getExpectedRequestStore(callingExpression)\n\n  let underlyingCookies: ReadonlyRequestCookies\n\n  if (areCookiesMutableInCurrentPhase(requestStore)) {\n    // We can't conditionally return different types here based on the context.\n    // To avoid confusion, we always return the readonly type here.\n    underlyingCookies =\n      requestStore.userspaceMutableCookies as unknown as ReadonlyRequestCookies\n  } else {\n    underlyingCookies = requestStore.cookies\n  }\n\n  if (process.env.NODE_ENV === 'development' && !workStore?.isPrefetchRequest) {\n    return makeUntrackedExoticCookiesWithDevWarnings(\n      underlyingCookies,\n      workStore?.route\n    )\n  } else {\n    return makeUntrackedExoticCookies(underlyingCookies)\n  }\n}\n\nfunction createEmptyCookies(): ReadonlyRequestCookies {\n  return RequestCookiesAdapter.seal(new RequestCookies(new Headers({})))\n}\n\ninterface CacheLifetime {}\nconst CachedCookies = new WeakMap<\n  CacheLifetime,\n  Promise<ReadonlyRequestCookies>\n>()\n\nfunction makeDynamicallyTrackedExoticCookies(\n  route: string,\n  prerenderStore: PrerenderStoreModern\n): Promise<ReadonlyRequestCookies> {\n  const cachedPromise = CachedCookies.get(prerenderStore)\n  if (cachedPromise) {\n    return cachedPromise\n  }\n\n  const promise = makeHangingPromise<ReadonlyRequestCookies>(\n    prerenderStore.renderSignal,\n    '`cookies()`'\n  )\n  CachedCookies.set(prerenderStore, promise)\n\n  Object.defineProperties(promise, {\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = '`cookies()[Symbol.iterator]()`'\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    size: {\n      get() {\n        const expression = '`cookies().size`'\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    get: {\n      value: function get() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().get()`'\n        } else {\n          expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``\n        }\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    getAll: {\n      value: function getAll() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().getAll()`'\n        } else {\n          expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``\n        }\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    has: {\n      value: function has() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().has()`'\n        } else {\n          expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``\n        }\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    set: {\n      value: function set() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().set()`'\n        } else {\n          const arg = arguments[0]\n          if (arg) {\n            expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``\n          } else {\n            expression = '`cookies().set(...)`'\n          }\n        }\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    delete: {\n      value: function () {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().delete()`'\n        } else if (arguments.length === 1) {\n          expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``\n        } else {\n          expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``\n        }\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    clear: {\n      value: function clear() {\n        const expression = '`cookies().clear()`'\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    toString: {\n      value: function toString() {\n        const expression = '`cookies().toString()`'\n        const error = createCookiesAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n  } satisfies CookieExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticCookies(\n  underlyingCookies: ReadonlyRequestCookies\n): Promise<ReadonlyRequestCookies> {\n  const cachedCookies = CachedCookies.get(underlyingCookies)\n  if (cachedCookies) {\n    return cachedCookies\n  }\n\n  const promise = Promise.resolve(underlyingCookies)\n  CachedCookies.set(underlyingCookies, promise)\n\n  Object.defineProperties(promise, {\n    [Symbol.iterator]: {\n      value: underlyingCookies[Symbol.iterator]\n        ? underlyingCookies[Symbol.iterator].bind(underlyingCookies)\n        : // TODO this is a polyfill for when the underlying type is ResponseCookies\n          // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n          // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n          // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n          // has extra properties not available on RequestCookie instances.\n          polyfilledResponseCookiesIterator.bind(underlyingCookies),\n    },\n    size: {\n      get(): number {\n        return underlyingCookies.size\n      },\n    },\n    get: {\n      value: underlyingCookies.get.bind(underlyingCookies),\n    },\n    getAll: {\n      value: underlyingCookies.getAll.bind(underlyingCookies),\n    },\n    has: {\n      value: underlyingCookies.has.bind(underlyingCookies),\n    },\n    set: {\n      value: underlyingCookies.set.bind(underlyingCookies),\n    },\n    delete: {\n      value: underlyingCookies.delete.bind(underlyingCookies),\n    },\n    clear: {\n      value:\n        // @ts-expect-error clear is defined in RequestCookies implementation but not in the type\n        typeof underlyingCookies.clear === 'function'\n          ? // @ts-expect-error clear is defined in RequestCookies implementation but not in the type\n            underlyingCookies.clear.bind(underlyingCookies)\n          : // TODO this is a polyfill for when the underlying type is ResponseCookies\n            // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.bind(underlyingCookies, promise),\n    },\n    toString: {\n      value: underlyingCookies.toString.bind(underlyingCookies),\n    },\n  } satisfies CookieExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticCookiesWithDevWarnings(\n  underlyingCookies: ReadonlyRequestCookies,\n  route?: string\n): Promise<ReadonlyRequestCookies> {\n  const cachedCookies = CachedCookies.get(underlyingCookies)\n  if (cachedCookies) {\n    return cachedCookies\n  }\n\n  const promise = new Promise<ReadonlyRequestCookies>((resolve) =>\n    scheduleImmediate(() => resolve(underlyingCookies))\n  )\n  CachedCookies.set(underlyingCookies, promise)\n\n  Object.defineProperties(promise, {\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = '`...cookies()` or similar iteration'\n        syncIODev(route, expression)\n        return underlyingCookies[Symbol.iterator]\n          ? underlyingCookies[Symbol.iterator].apply(\n              underlyingCookies,\n              arguments as any\n            )\n          : // TODO this is a polyfill for when the underlying type is ResponseCookies\n            // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesIterator.call(underlyingCookies)\n      },\n      writable: false,\n    },\n    size: {\n      get(): number {\n        const expression = '`cookies().size`'\n        syncIODev(route, expression)\n        return underlyingCookies.size\n      },\n    },\n    get: {\n      value: function get() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().get()`'\n        } else {\n          expression = `\\`cookies().get(${describeNameArg(arguments[0])})\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.get.apply(underlyingCookies, arguments as any)\n      },\n      writable: false,\n    },\n    getAll: {\n      value: function getAll() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().getAll()`'\n        } else {\n          expression = `\\`cookies().getAll(${describeNameArg(arguments[0])})\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.getAll.apply(\n          underlyingCookies,\n          arguments as any\n        )\n      },\n      writable: false,\n    },\n    has: {\n      value: function get() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().has()`'\n        } else {\n          expression = `\\`cookies().has(${describeNameArg(arguments[0])})\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.has.apply(underlyingCookies, arguments as any)\n      },\n      writable: false,\n    },\n    set: {\n      value: function set() {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().set()`'\n        } else {\n          const arg = arguments[0]\n          if (arg) {\n            expression = `\\`cookies().set(${describeNameArg(arg)}, ...)\\``\n          } else {\n            expression = '`cookies().set(...)`'\n          }\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.set.apply(underlyingCookies, arguments as any)\n      },\n      writable: false,\n    },\n    delete: {\n      value: function () {\n        let expression: string\n        if (arguments.length === 0) {\n          expression = '`cookies().delete()`'\n        } else if (arguments.length === 1) {\n          expression = `\\`cookies().delete(${describeNameArg(arguments[0])})\\``\n        } else {\n          expression = `\\`cookies().delete(${describeNameArg(arguments[0])}, ...)\\``\n        }\n        syncIODev(route, expression)\n        return underlyingCookies.delete.apply(\n          underlyingCookies,\n          arguments as any\n        )\n      },\n      writable: false,\n    },\n    clear: {\n      value: function clear() {\n        const expression = '`cookies().clear()`'\n        syncIODev(route, expression)\n        // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n        return typeof underlyingCookies.clear === 'function'\n          ? // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n            underlyingCookies.clear.apply(underlyingCookies, arguments)\n          : // TODO this is a polyfill for when the underlying type is ResponseCookies\n            // We should remove this and unify our cookies types. We could just let this continue to throw lazily\n            // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.call(underlyingCookies, promise)\n      },\n      writable: false,\n    },\n    toString: {\n      value: function toString() {\n        const expression = '`cookies().toString()` or implicit casting'\n        syncIODev(route, expression)\n        return underlyingCookies.toString.apply(\n          underlyingCookies,\n          arguments as any\n        )\n      },\n      writable: false,\n    },\n  } satisfies CookieExtensions)\n\n  return promise\n}\n\nfunction describeNameArg(arg: unknown) {\n  return typeof arg === 'object' &&\n    arg !== null &&\n    typeof (arg as any).name === 'string'\n    ? `'${(arg as any).name}'`\n    : typeof arg === 'string'\n      ? `'${arg}'`\n      : '...'\n}\n\nfunction syncIODev(route: string | undefined, expression: string) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (\n    workUnitStore &&\n    workUnitStore.type === 'request' &&\n    workUnitStore.prerenderPhase === true\n  ) {\n    // When we're rendering dynamically in dev we need to advance out of the\n    // Prerender environment when we read Request data synchronously\n    const requestStore = workUnitStore\n    trackSynchronousRequestDataAccessInDev(requestStore)\n  }\n  // In all cases we warn normally\n  warnForSyncAccess(route, expression)\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(createCookiesAccessError)\n\nfunction createCookiesAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`cookies()\\` should be awaited before using its value. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction polyfilledResponseCookiesIterator(\n  this: ResponseCookies\n): ReturnType<ReadonlyRequestCookies[typeof Symbol.iterator]> {\n  return this.getAll()\n    .map((c) => [c.name, c] as [string, any])\n    .values()\n}\n\nfunction polyfilledResponseCookiesClear(\n  this: ResponseCookies,\n  returnable: Promise<ReadonlyRequestCookies>\n): typeof returnable {\n  for (const cookie of this.getAll()) {\n    this.delete(cookie.name)\n  }\n  return returnable\n}\n\ntype CookieExtensions = {\n  [K in keyof ReadonlyRequestCookies | 'clear']: unknown\n}\n"],"names":["areCookiesMutableInCurrentPhase","RequestCookiesAdapter","RequestCookies","workAsyncStorage","workUnitAsyncStorage","postponeWithTracking","abortAndThrowOnSynchronousRequestDataAccess","throwToInterruptStaticGeneration","trackDynamicDataInDynamicRender","trackSynchronousRequestDataAccessInDev","getExpectedRequestStore","StaticGenBailoutError","makeHangingPromise","createDedupedByCallsiteServerErrorLoggerDev","scheduleImmediate","cookies","callingExpression","workStore","getStore","workUnitStore","forceStatic","underlyingCookies","createEmptyCookies","makeUntrackedExoticCookies","type","Error","route","phase","dynamicShouldError","makeDynamicallyTrackedExoticCookies","dynamicTracking","requestStore","userspaceMutableCookies","process","env","NODE_ENV","isPrefetchRequest","makeUntrackedExoticCookiesWithDevWarnings","seal","Headers","CachedCookies","WeakMap","prerenderStore","cachedPromise","get","promise","renderSignal","set","Object","defineProperties","Symbol","iterator","value","expression","error","createCookiesAccessError","size","arguments","length","describeNameArg","getAll","has","arg","delete","clear","toString","cachedCookies","Promise","resolve","bind","polyfilledResponseCookiesIterator","polyfilledResponseCookiesClear","syncIODev","apply","call","writable","name","prerenderPhase","warnForSyncAccess","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","prefix","map","c","values","returnable","cookie"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/headers.ts"],"sourcesContent":["import {\n  HeadersAdapter,\n  type ReadonlyHeaders,\n} from '../web/spec-extension/adapters/headers'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  postponeWithTracking,\n  abortAndThrowOnSynchronousRequestDataAccess,\n  throwToInterruptStaticGeneration,\n  trackDynamicDataInDynamicRender,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { scheduleImmediate } from '../../lib/scheduler'\n\n/**\n * In this version of Next.js `headers()` returns a Promise however you can still reference the properties of the underlying Headers instance\n * synchronously to facilitate migration. The `UnsafeUnwrappedHeaders` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `headers()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedHeaders` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `headers()` value can be awaited or you should call `headers()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedHeaders` in your codebase or by search for a comment that\n * starts with `@next-codemod-error`.\n *\n * In a future version of Next.js `headers()` will only return a Promise and you will not be able to access the underlying Headers instance\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedHeaders` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedHeaders = ReadonlyHeaders\n\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */\nexport function headers(): Promise<ReadonlyHeaders> {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workStore) {\n    if (workStore.forceStatic) {\n      // When using forceStatic we override all other logic and always just return an empty\n      // headers object without tracking\n      const underlyingHeaders = HeadersAdapter.seal(new Headers({}))\n      return makeUntrackedExoticHeaders(underlyingHeaders)\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'cache') {\n        throw new Error(\n          `Route ${workStore.route} used \"headers\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n        )\n      } else if (workUnitStore.type === 'unstable-cache') {\n        throw new Error(\n          `Route ${workStore.route} used \"headers\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n        )\n      } else if (workUnitStore.phase === 'after') {\n        throw new Error(\n          `Route ${workStore.route} used \"headers\" inside \"unstable_after(...)\". This is not supported. If you need this data inside an \"unstable_after\" callback, use \"headers\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/unstable_after`\n        )\n      }\n    }\n    if (workStore.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`headers\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We don't track dynamic access here because access will be tracked when you access\n        // one of the properties of the headers object.\n        return makeDynamicallyTrackedExoticHeaders(\n          workStore.route,\n          workUnitStore\n        )\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // PPR Prerender (no dynamicIO)\n        // We are prerendering with PPR. We need track dynamic access here eagerly\n        // to keep continuity with how headers has worked in PPR without dynamicIO.\n        // TODO consider switching the semantic to throw on property access instead\n        postponeWithTracking(\n          workStore.route,\n          'headers',\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        // Legacy Prerender\n        // We are in a legacy static generation mode while prerendering\n        // We track dynamic access here so we don't need to wrap the headers in\n        // individual property access tracking.\n        throwToInterruptStaticGeneration('headers', workStore, workUnitStore)\n      }\n    }\n    // We fall through to the dynamic context below but we still track dynamic access\n    // because in dev we can still error for things like using headers inside a cache context\n    trackDynamicDataInDynamicRender(workStore, workUnitStore)\n  }\n\n  const requestStore = getExpectedRequestStore('headers')\n  if (process.env.NODE_ENV === 'development' && !workStore?.isPrefetchRequest) {\n    return makeUntrackedExoticHeadersWithDevWarnings(\n      requestStore.headers,\n      workStore?.route\n    )\n  } else {\n    return makeUntrackedExoticHeaders(requestStore.headers)\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedHeaders = new WeakMap<CacheLifetime, Promise<ReadonlyHeaders>>()\n\nfunction makeDynamicallyTrackedExoticHeaders(\n  route: string,\n  prerenderStore: PrerenderStoreModern\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(prerenderStore)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeHangingPromise<ReadonlyHeaders>(\n    prerenderStore.renderSignal,\n    '`headers()`'\n  )\n  CachedHeaders.set(prerenderStore, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: function append() {\n        const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    delete: {\n      value: function _delete() {\n        const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    get: {\n      value: function get() {\n        const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    has: {\n      value: function has() {\n        const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    set: {\n      value: function set() {\n        const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    getSetCookie: {\n      value: function getSetCookie() {\n        const expression = '`headers().getSetCookie()`'\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    forEach: {\n      value: function forEach() {\n        const expression = '`headers().forEach(...)`'\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    keys: {\n      value: function keys() {\n        const expression = '`headers().keys()`'\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    values: {\n      value: function values() {\n        const expression = '`headers().values()`'\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    entries: {\n      value: function entries() {\n        const expression = '`headers().entries()`'\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = '`headers()[Symbol.iterator]()`'\n        const error = createHeadersAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      },\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticHeaders(\n  underlyingHeaders: ReadonlyHeaders\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = Promise.resolve(underlyingHeaders)\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: underlyingHeaders.append.bind(underlyingHeaders),\n    },\n    delete: {\n      value: underlyingHeaders.delete.bind(underlyingHeaders),\n    },\n    get: {\n      value: underlyingHeaders.get.bind(underlyingHeaders),\n    },\n    has: {\n      value: underlyingHeaders.has.bind(underlyingHeaders),\n    },\n    set: {\n      value: underlyingHeaders.set.bind(underlyingHeaders),\n    },\n    getSetCookie: {\n      value: underlyingHeaders.getSetCookie.bind(underlyingHeaders),\n    },\n    forEach: {\n      value: underlyingHeaders.forEach.bind(underlyingHeaders),\n    },\n    keys: {\n      value: underlyingHeaders.keys.bind(underlyingHeaders),\n    },\n    values: {\n      value: underlyingHeaders.values.bind(underlyingHeaders),\n    },\n    entries: {\n      value: underlyingHeaders.entries.bind(underlyingHeaders),\n    },\n    [Symbol.iterator]: {\n      value: underlyingHeaders[Symbol.iterator].bind(underlyingHeaders),\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticHeadersWithDevWarnings(\n  underlyingHeaders: ReadonlyHeaders,\n  route?: string\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = new Promise<ReadonlyHeaders>((resolve) =>\n    scheduleImmediate(() => resolve(underlyingHeaders))\n  )\n\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: function append() {\n        const expression = `\\`headers().append(${describeNameArg(arguments[0])}, ...)\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.append.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    delete: {\n      value: function _delete() {\n        const expression = `\\`headers().delete(${describeNameArg(arguments[0])})\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.delete.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    get: {\n      value: function get() {\n        const expression = `\\`headers().get(${describeNameArg(arguments[0])})\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.get.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    has: {\n      value: function has() {\n        const expression = `\\`headers().has(${describeNameArg(arguments[0])})\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.has.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    set: {\n      value: function set() {\n        const expression = `\\`headers().set(${describeNameArg(arguments[0])}, ...)\\``\n        syncIODev(route, expression)\n        return underlyingHeaders.set.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    getSetCookie: {\n      value: function getSetCookie() {\n        const expression = '`headers().getSetCookie()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.getSetCookie.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    forEach: {\n      value: function forEach() {\n        const expression = '`headers().forEach(...)`'\n        syncIODev(route, expression)\n        return underlyingHeaders.forEach.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    keys: {\n      value: function keys() {\n        const expression = '`headers().keys()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.keys.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    values: {\n      value: function values() {\n        const expression = '`headers().values()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.values.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    entries: {\n      value: function entries() {\n        const expression = '`headers().entries()`'\n        syncIODev(route, expression)\n        return underlyingHeaders.entries.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = '`...headers()` or similar iteration'\n        syncIODev(route, expression)\n        return underlyingHeaders[Symbol.iterator].apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction describeNameArg(arg: unknown) {\n  return typeof arg === 'string' ? `'${arg}'` : '...'\n}\n\nfunction syncIODev(route: string | undefined, expression: string) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (\n    workUnitStore &&\n    workUnitStore.type === 'request' &&\n    workUnitStore.prerenderPhase === true\n  ) {\n    // When we're rendering dynamically in dev we need to advance out of the\n    // Prerender environment when we read Request data synchronously\n    const requestStore = workUnitStore\n    trackSynchronousRequestDataAccessInDev(requestStore)\n  }\n  // In all cases we warn normally\n  warnForSyncAccess(route, expression)\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(createHeadersAccessError)\n\nfunction createHeadersAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`headers()\\` should be awaited before using its value. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\ntype HeadersExtensions = {\n  [K in keyof ReadonlyHeaders]: unknown\n}\n"],"names":["HeadersAdapter","workAsyncStorage","getExpectedRequestStore","workUnitAsyncStorage","postponeWithTracking","abortAndThrowOnSynchronousRequestDataAccess","throwToInterruptStaticGeneration","trackDynamicDataInDynamicRender","trackSynchronousRequestDataAccessInDev","StaticGenBailoutError","makeHangingPromise","createDedupedByCallsiteServerErrorLoggerDev","scheduleImmediate","headers","workStore","getStore","workUnitStore","forceStatic","underlyingHeaders","seal","Headers","makeUntrackedExoticHeaders","type","Error","route","phase","dynamicShouldError","makeDynamicallyTrackedExoticHeaders","dynamicTracking","requestStore","process","env","NODE_ENV","isPrefetchRequest","makeUntrackedExoticHeadersWithDevWarnings","CachedHeaders","WeakMap","prerenderStore","cachedHeaders","get","promise","renderSignal","set","Object","defineProperties","append","value","expression","describeNameArg","arguments","error","createHeadersAccessError","delete","_delete","has","getSetCookie","forEach","keys","values","entries","Symbol","iterator","Promise","resolve","bind","syncIODev","apply","arg","prerenderPhase","warnForSyncAccess","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","prefix"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/draft-mode.ts"],"sourcesContent":["import { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external'\n\nimport type { DraftModeProvider } from '../async-storage/draft-mode-provider'\n\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  postponeWithTracking,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\n\n/**\n * In this version of Next.js `draftMode()` returns a Promise however you can still reference the properties of the underlying draftMode object\n * synchronously to facilitate migration. The `UnsafeUnwrappedDraftMode` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `draftMode()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedDraftMode` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `draftMode()` value can be awaited or you should call `draftMode()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedDraftMode` in your codebase or by search for a comment that\n * starts with `@next-codemod-error`.\n *\n * In a future version of Next.js `draftMode()` will only return a Promise and you will not be able to access the underlying draftMode object directly\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedDraftMode` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedDraftMode = DraftMode\n\nexport function draftMode(): Promise<DraftMode> {\n  const callingExpression = 'draftMode'\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workUnitStore) {\n    if (workStore && workUnitStore.phase === 'after') {\n      throw new Error(\n        `Route ${workStore.route} used \"draftMode\" inside \"unstable_after(...)\". This is not supported, because \"unstable_after(...)\" runs after the request is finished and cannot affect the response. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/unstable_after`\n      )\n    }\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache' ||\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-ppr' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      // Return empty draft mode\n      if (\n        process.env.NODE_ENV === 'development' &&\n        !workStore?.isPrefetchRequest\n      ) {\n        const route = workStore?.route\n        return createExoticDraftModeWithDevWarnings(null, route)\n      } else {\n        return createExoticDraftMode(null)\n      }\n    }\n  }\n\n  const requestStore = getExpectedRequestStore(callingExpression)\n\n  const cachedDraftMode = CachedDraftModes.get(requestStore.draftMode)\n  if (cachedDraftMode) {\n    return cachedDraftMode\n  }\n\n  let promise\n  if (process.env.NODE_ENV === 'development' && !workStore?.isPrefetchRequest) {\n    const route = workStore?.route\n    promise = createExoticDraftModeWithDevWarnings(\n      requestStore.draftMode,\n      route\n    )\n  } else {\n    promise = createExoticDraftMode(requestStore.draftMode)\n  }\n  CachedDraftModes.set(requestStore.draftMode, promise)\n  return promise\n}\n\ninterface CacheLifetime {}\nconst CachedDraftModes = new WeakMap<CacheLifetime, Promise<DraftMode>>()\n\nfunction createExoticDraftMode(\n  underlyingProvider: null | DraftModeProvider\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  Object.defineProperty(promise, 'isEnabled', {\n    get() {\n      return instance.isEnabled\n    },\n    set(newValue) {\n      Object.defineProperty(promise, 'isEnabled', {\n        value: newValue,\n        writable: true,\n        enumerable: true,\n      })\n    },\n    enumerable: true,\n    configurable: true,\n  })\n  ;(promise as any).enable = instance.enable.bind(instance)\n  ;(promise as any).disable = instance.disable.bind(instance)\n\n  return promise\n}\n\nfunction createExoticDraftModeWithDevWarnings(\n  underlyingProvider: null | DraftModeProvider,\n  route: undefined | string\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  Object.defineProperty(promise, 'isEnabled', {\n    get() {\n      const expression = '`draftMode().isEnabled`'\n      syncIODev(route, expression)\n      return instance.isEnabled\n    },\n    set(newValue) {\n      Object.defineProperty(promise, 'isEnabled', {\n        value: newValue,\n        writable: true,\n        enumerable: true,\n      })\n    },\n    enumerable: true,\n    configurable: true,\n  })\n\n  Object.defineProperty(promise, 'enable', {\n    value: function get() {\n      const expression = '`draftMode().enable()`'\n      syncIODev(route, expression)\n      return instance.enable.apply(instance, arguments as any)\n    },\n  })\n\n  Object.defineProperty(promise, 'disable', {\n    value: function get() {\n      const expression = '`draftMode().disable()`'\n      syncIODev(route, expression)\n      return instance.disable.apply(instance, arguments as any)\n    },\n  })\n\n  return promise\n}\n\nclass DraftMode {\n  /**\n   * @internal - this declaration is stripped via `tsc --stripInternal`\n   */\n  private readonly _provider: null | DraftModeProvider\n\n  constructor(provider: null | DraftModeProvider) {\n    this._provider = provider\n  }\n  get isEnabled() {\n    if (this._provider !== null) {\n      return this._provider.isEnabled\n    }\n    return false\n  }\n  public enable() {\n    // We we have a store we want to track dynamic data access to ensure we\n    // don't statically generate routes that manipulate draft mode.\n    trackDynamicDraftMode('draftMode().enable()')\n    if (this._provider !== null) {\n      this._provider.enable()\n    }\n  }\n  public disable() {\n    trackDynamicDraftMode('draftMode().disable()')\n    if (this._provider !== null) {\n      this._provider.disable()\n    }\n  }\n}\n\nfunction syncIODev(route: string | undefined, expression: string) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (\n    workUnitStore &&\n    workUnitStore.type === 'request' &&\n    workUnitStore.prerenderPhase === true\n  ) {\n    // When we're rendering dynamically in dev we need to advance out of the\n    // Prerender environment when we read Request data synchronously\n    const requestStore = workUnitStore\n    trackSynchronousRequestDataAccessInDev(requestStore)\n  }\n  // In all cases we warn normally\n  warnForSyncAccess(route, expression)\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(createDraftModeAccessError)\n\nfunction createDraftModeAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`draftMode()\\` should be awaited before using its value. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction trackDynamicDraftMode(expression: string) {\n  const store = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (store) {\n    // We we have a store we want to track dynamic data access to ensure we\n    // don't statically generate routes that manipulate draft mode.\n    if (workUnitStore) {\n      if (workUnitStore.type === 'cache') {\n        throw new Error(\n          `Route ${store.route} used \"${expression}\" inside \"use cache\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n        )\n      } else if (workUnitStore.type === 'unstable-cache') {\n        throw new Error(\n          `Route ${store.route} used \"${expression}\" inside a function cached with \"unstable_cache(...)\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n        )\n      }\n    }\n\n    if (store.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'prerender') {\n        // dynamicIO Prerender\n        const error = new Error(\n          `Route ${store.route} used ${expression} without first calling \\`await connection()\\`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-headers`\n        )\n        abortAndThrowOnSynchronousRequestDataAccess(\n          store.route,\n          expression,\n          error,\n          workUnitStore\n        )\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // PPR Prerender\n        postponeWithTracking(\n          store.route,\n          expression,\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        // legacy Prerender\n        workUnitStore.revalidate = 0\n\n        const err = new DynamicServerError(\n          `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n        )\n        store.dynamicUsageDescription = expression\n        store.dynamicUsageStack = err.stack\n\n        throw err\n      } else if (\n        process.env.NODE_ENV === 'development' &&\n        workUnitStore &&\n        workUnitStore.type === 'request'\n      ) {\n        workUnitStore.usedDynamic = true\n      }\n    }\n  }\n}\n"],"names":["getExpectedRequestStore","workAsyncStorage","workUnitAsyncStorage","abortAndThrowOnSynchronousRequestDataAccess","postponeWithTracking","trackSynchronousRequestDataAccessInDev","createDedupedByCallsiteServerErrorLoggerDev","StaticGenBailoutError","DynamicServerError","draftMode","callingExpression","workStore","getStore","workUnitStore","phase","Error","route","type","process","env","NODE_ENV","isPrefetchRequest","createExoticDraftModeWithDevWarnings","createExoticDraftMode","requestStore","cachedDraftMode","CachedDraftModes","get","promise","set","WeakMap","underlyingProvider","instance","DraftMode","Promise","resolve","Object","defineProperty","isEnabled","newValue","value","writable","enumerable","configurable","enable","bind","disable","expression","syncIODev","apply","arguments","constructor","provider","_provider","trackDynamicDraftMode","prerenderPhase","warnForSyncAccess","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","createDraftModeAccessError","prefix","store","dynamicShouldError","error","dynamicTracking","revalidate","err","dynamicUsageDescription","dynamicUsageStack","stack","usedDynamic"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/utils.ts"],"sourcesContent":["import { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\n\n// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/\n\nexport function describeStringPropertyAccess(target: string, prop: string) {\n  if (isDefinitelyAValidIdentifier.test(prop)) {\n    return `\\`${target}.${prop}\\``\n  }\n  return `\\`${target}[${JSON.stringify(prop)}]\\``\n}\n\nexport function describeHasCheckingStringProperty(\n  target: string,\n  prop: string\n) {\n  const stringifiedProp = JSON.stringify(prop)\n  return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`\n}\n\nexport function throwWithStaticGenerationBailoutError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport const wellKnownProperties = new Set([\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n\n  // Promise prototype\n  // fallthrough\n  'then',\n  'catch',\n  'finally',\n\n  // React Promise extension\n  // fallthrough\n  'status',\n\n  // React introspection\n  'displayName',\n\n  // Common tested properties\n  // fallthrough\n  'toJSON',\n  '$$typeof',\n  '__esModule',\n])\n"],"names":["StaticGenBailoutError","isDefinitelyAValidIdentifier","describeStringPropertyAccess","target","prop","test","JSON","stringify","describeHasCheckingStringProperty","stringifiedProp","throwWithStaticGenerationBailoutError","route","expression","throwWithStaticGenerationBailoutErrorWithDynamicError","wellKnownProperties","Set"],"mappings":";;;;;;;AAAA,SAASA,qBAAqB,QAAQ,oDAAmD;;AAEzF,6EAA6E;AAC7E,iFAAiF;AACjF,0FAA0F;AAC1F,uFAAuF;AACvF,2DAA2D;AAC3D,MAAMC,+BAA+B;AAE9B,SAASC,6BAA6BC,MAAc,EAAEC,IAAY;IACvE,IAAIH,6BAA6BI,IAAI,CAACD,OAAO;QAC3C,OAAO,CAAC,EAAE,EAAED,OAAO,CAAC,EAAEC,KAAK,EAAE,CAAC;IAChC;IACA,OAAO,CAAC,EAAE,EAAED,OAAO,CAAC,EAAEG,KAAKC,SAAS,CAACH,MAAM,GAAG,CAAC;AACjD;AAEO,SAASI,kCACdL,MAAc,EACdC,IAAY;IAEZ,MAAMK,kBAAkBH,KAAKC,SAAS,CAACH;IACvC,OAAO,CAAC,cAAc,EAAED,OAAO,EAAE,EAAEM,gBAAgB,OAAO,EAAEA,gBAAgB,IAAI,EAAEN,OAAO,cAAc,CAAC;AAC1G;AAEO,SAASO,sCACdC,KAAa,EACbC,UAAkB;IAElB,MAAM,2MAAIZ,wBAAAA,CACR,CAAC,MAAM,EAAEW,MAAM,iDAAiD,EAAEC,WAAW,0HAA0H,CAAC;AAE5M;AAEO,SAASC,sDACdF,KAAa,EACbC,UAAkB;IAElB,MAAM,2MAAIZ,wBAAAA,CACR,CAAC,MAAM,EAAEW,MAAM,4EAA4E,EAAEC,WAAW,0HAA0H,CAAC;AAEvO;AAEO,MAAME,sBAAsB,IAAIC,IAAI;IACzC;IACA;IACA;IACA;IACA;IACA;IAEA,oBAAoB;IACpB,cAAc;IACd;IACA;IACA;IAEA,0BAA0B;IAC1B,cAAc;IACd;IAEA,sBAAsB;IACtB;IAEA,2BAA2B;IAC3B,cAAc;IACd;IACA;IACA;CACD,EAAC","ignoreList":[0]}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/search-params.ts"],"sourcesContent":["import type { WorkStore } from '../app-render/work-async-storage.external'\n\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\nimport {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  throwToInterruptStaticGeneration,\n  postponeWithTracking,\n  trackDynamicDataInDynamicRender,\n  annotateDynamicAccess,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\n\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStore,\n  type PrerenderStoreLegacy,\n  type PrerenderStorePPR,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport {\n  describeStringPropertyAccess,\n  describeHasCheckingStringProperty,\n  throwWithStaticGenerationBailoutErrorWithDynamicError,\n  wellKnownProperties,\n} from './utils'\nimport { scheduleImmediate } from '../../lib/scheduler'\n\nexport type SearchParams = { [key: string]: string | string[] | undefined }\n\n/**\n * In this version of Next.js the `params` prop passed to Layouts, Pages, and other Segments is a Promise.\n * However to facilitate migration to this new Promise type you can currently still access params directly on the Promise instance passed to these Segments.\n * The `UnsafeUnwrappedSearchParams` type is available if you need to temporarily access the underlying params without first awaiting or `use`ing the Promise.\n *\n * In a future version of Next.js the `params` prop will be a plain Promise and this type will be removed.\n *\n * Typically instances of `params` can be updated automatically to be treated as a Promise by a codemod published alongside this Next.js version however if you\n * have not yet run the codemod of the codemod cannot detect certain instances of `params` usage you should first try to refactor your code to await `params`.\n *\n * If refactoring is not possible but you still want to be able to access params directly without typescript errors you can cast the params Promise to this type\n *\n * ```tsx\n * type Props = { searchParams: Promise<{ foo: string }> }\n *\n * export default async function Page(props: Props) {\n *  const { searchParams } = (props.searchParams as unknown as UnsafeUnwrappedSearchParams<typeof props.searchParams>)\n *  return ...\n * }\n * ```\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedSearchParams<P> =\n  P extends Promise<infer U> ? Omit<U, 'then' | 'status' | 'value'> : never\n\nexport function createSearchParamsFromClient(\n  underlyingSearchParams: SearchParams,\n  workStore: WorkStore\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderSearchParams(workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderSearchParams(underlyingSearchParams, workStore)\n}\n\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport const createServerSearchParamsForMetadata =\n  createServerSearchParamsForServerPage\n\nexport function createServerSearchParamsForServerPage(\n  underlyingSearchParams: SearchParams,\n  workStore: WorkStore\n): Promise<SearchParams> {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderSearchParams(workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderSearchParams(underlyingSearchParams, workStore)\n}\n\nexport function createPrerenderSearchParamsForClientPage(\n  workStore: WorkStore\n): Promise<SearchParams> {\n  if (workStore.forceStatic) {\n    // When using forceStatic we override all other logic and always just return an empty\n    // dictionary object.\n    return Promise.resolve({})\n  }\n\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (prerenderStore && prerenderStore.type === 'prerender') {\n    // dynamicIO Prerender\n    // We're prerendering in a mode that aborts (dynamicIO) and should stall\n    // the promise to ensure the RSC side is considered dynamic\n    return makeHangingPromise(prerenderStore.renderSignal, '`searchParams`')\n  }\n  // We're prerendering in a mode that does not aborts. We resolve the promise without\n  // any tracking because we're just transporting a value from server to client where the tracking\n  // will be applied.\n  return Promise.resolve({})\n}\n\nfunction createPrerenderSearchParams(\n  workStore: WorkStore,\n  prerenderStore: PrerenderStore\n): Promise<SearchParams> {\n  if (workStore.forceStatic) {\n    // When using forceStatic we override all other logic and always just return an empty\n    // dictionary object.\n    return Promise.resolve({})\n  }\n\n  if (prerenderStore.type === 'prerender') {\n    // We are in a dynamicIO (PPR or otherwise) prerender\n    return makeAbortingExoticSearchParams(workStore.route, prerenderStore)\n  }\n\n  // The remaining cases are prerender-ppr and prerender-legacy\n  // We are in a legacy static generation and need to interrupt the prerender\n  // when search params are accessed.\n  return makeErroringExoticSearchParams(workStore, prerenderStore)\n}\n\nfunction createRenderSearchParams(\n  underlyingSearchParams: SearchParams,\n  workStore: WorkStore\n): Promise<SearchParams> {\n  if (workStore.forceStatic) {\n    // When using forceStatic we override all other logic and always just return an empty\n    // dictionary object.\n    return Promise.resolve({})\n  } else {\n    if (\n      process.env.NODE_ENV === 'development' &&\n      !workStore.isPrefetchRequest\n    ) {\n      return makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(\n        underlyingSearchParams,\n        workStore\n      )\n    } else {\n      return makeUntrackedExoticSearchParams(underlyingSearchParams, workStore)\n    }\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedSearchParams = new WeakMap<CacheLifetime, Promise<SearchParams>>()\n\nfunction makeAbortingExoticSearchParams(\n  route: string,\n  prerenderStore: PrerenderStoreModern\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(prerenderStore)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const promise = makeHangingPromise<SearchParams>(\n    prerenderStore.renderSignal,\n    '`searchParams`'\n  )\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (Object.hasOwn(promise, prop)) {\n        // The promise has this property directly. we must return it.\n        // We know it isn't a dynamic access because it can only be something\n        // that was previously written to the promise and thus not an underlying searchParam value\n        return ReflectAdapter.get(target, prop, receiver)\n      }\n\n      switch (prop) {\n        case 'then': {\n          const expression =\n            '`await searchParams`, `searchParams.then`, or similar'\n          annotateDynamicAccess(expression, prerenderStore)\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n        case 'status': {\n          const expression =\n            '`use(searchParams)`, `searchParams.status`, or similar'\n          annotateDynamicAccess(expression, prerenderStore)\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n        // Object prototype\n        case 'hasOwnProperty':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'valueOf':\n        case 'toLocaleString':\n\n        // Promise prototype\n        // fallthrough\n        case 'catch':\n        case 'finally':\n\n        // Common tested properties\n        // fallthrough\n        case 'toJSON':\n        case '$$typeof':\n        case '__esModule': {\n          // These properties cannot be shadowed because they need to be the\n          // true underlying value for Promises to work correctly at runtime\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n\n        default: {\n          if (typeof prop === 'string') {\n            const expression = describeStringPropertyAccess(\n              'searchParams',\n              prop\n            )\n            const error = createSearchAccessError(route, expression)\n            abortAndThrowOnSynchronousRequestDataAccess(\n              route,\n              expression,\n              error,\n              prerenderStore\n            )\n          }\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n      }\n    },\n    has(target, prop) {\n      // We don't expect key checking to be used except for testing the existence of\n      // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n      // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n      // you are testing whether the searchParams has a 'then' property.\n      if (typeof prop === 'string') {\n        const expression = describeHasCheckingStringProperty(\n          'searchParams',\n          prop\n        )\n        const error = createSearchAccessError(route, expression)\n        abortAndThrowOnSynchronousRequestDataAccess(\n          route,\n          expression,\n          error,\n          prerenderStore\n        )\n      }\n      return ReflectAdapter.has(target, prop)\n    },\n    ownKeys() {\n      const expression =\n        '`{...searchParams}`, `Object.keys(searchParams)`, or similar'\n      const error = createSearchAccessError(route, expression)\n      abortAndThrowOnSynchronousRequestDataAccess(\n        route,\n        expression,\n        error,\n        prerenderStore\n      )\n    },\n  })\n\n  CachedSearchParams.set(prerenderStore, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction makeErroringExoticSearchParams(\n  workStore: WorkStore,\n  prerenderStore: PrerenderStoreLegacy | PrerenderStorePPR\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(workStore)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const underlyingSearchParams = {}\n  // For search params we don't construct a ReactPromise because we want to interrupt\n  // rendering on any property access that was not set from outside and so we only want\n  // to have properties like value and status if React sets them.\n  const promise = Promise.resolve(underlyingSearchParams)\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (Object.hasOwn(promise, prop)) {\n        // The promise has this property directly. we must return it.\n        // We know it isn't a dynamic access because it can only be something\n        // that was previously written to the promise and thus not an underlying searchParam value\n        return ReflectAdapter.get(target, prop, receiver)\n      }\n\n      switch (prop) {\n        // Object prototype\n        case 'hasOwnProperty':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'valueOf':\n        case 'toLocaleString':\n\n        // Promise prototype\n        // fallthrough\n        case 'catch':\n        case 'finally':\n\n        // Common tested properties\n        // fallthrough\n        case 'toJSON':\n        case '$$typeof':\n        case '__esModule': {\n          // These properties cannot be shadowed because they need to be the\n          // true underlying value for Promises to work correctly at runtime\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n        case 'then': {\n          const expression =\n            '`await searchParams`, `searchParams.then`, or similar'\n          if (workStore.dynamicShouldError) {\n            throwWithStaticGenerationBailoutErrorWithDynamicError(\n              workStore.route,\n              expression\n            )\n          } else if (prerenderStore.type === 'prerender-ppr') {\n            // PPR Prerender (no dynamicIO)\n            postponeWithTracking(\n              workStore.route,\n              expression,\n              prerenderStore.dynamicTracking\n            )\n          } else {\n            // Legacy Prerender\n            throwToInterruptStaticGeneration(\n              expression,\n              workStore,\n              prerenderStore\n            )\n          }\n          return\n        }\n        case 'status': {\n          const expression =\n            '`use(searchParams)`, `searchParams.status`, or similar'\n          if (workStore.dynamicShouldError) {\n            throwWithStaticGenerationBailoutErrorWithDynamicError(\n              workStore.route,\n              expression\n            )\n          } else if (prerenderStore.type === 'prerender-ppr') {\n            // PPR Prerender (no dynamicIO)\n            postponeWithTracking(\n              workStore.route,\n              expression,\n              prerenderStore.dynamicTracking\n            )\n          } else {\n            // Legacy Prerender\n            throwToInterruptStaticGeneration(\n              expression,\n              workStore,\n              prerenderStore\n            )\n          }\n          return\n        }\n        default: {\n          if (typeof prop === 'string') {\n            const expression = describeStringPropertyAccess(\n              'searchParams',\n              prop\n            )\n            if (workStore.dynamicShouldError) {\n              throwWithStaticGenerationBailoutErrorWithDynamicError(\n                workStore.route,\n                expression\n              )\n            } else if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no dynamicIO)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          }\n          return ReflectAdapter.get(target, prop, receiver)\n        }\n      }\n    },\n    has(target, prop) {\n      // We don't expect key checking to be used except for testing the existence of\n      // searchParams so we make all has tests trigger dynamic. this means that `promise.then`\n      // can resolve to the then function on the Promise prototype but 'then' in promise will assume\n      // you are testing whether the searchParams has a 'then' property.\n      if (typeof prop === 'string') {\n        const expression = describeHasCheckingStringProperty(\n          'searchParams',\n          prop\n        )\n        if (workStore.dynamicShouldError) {\n          throwWithStaticGenerationBailoutErrorWithDynamicError(\n            workStore.route,\n            expression\n          )\n        } else if (prerenderStore.type === 'prerender-ppr') {\n          // PPR Prerender (no dynamicIO)\n          postponeWithTracking(\n            workStore.route,\n            expression,\n            prerenderStore.dynamicTracking\n          )\n        } else {\n          // Legacy Prerender\n          throwToInterruptStaticGeneration(\n            expression,\n            workStore,\n            prerenderStore\n          )\n        }\n        return false\n      }\n      return ReflectAdapter.has(target, prop)\n    },\n    ownKeys() {\n      const expression =\n        '`{...searchParams}`, `Object.keys(searchParams)`, or similar'\n      if (workStore.dynamicShouldError) {\n        throwWithStaticGenerationBailoutErrorWithDynamicError(\n          workStore.route,\n          expression\n        )\n      } else if (prerenderStore.type === 'prerender-ppr') {\n        // PPR Prerender (no dynamicIO)\n        postponeWithTracking(\n          workStore.route,\n          expression,\n          prerenderStore.dynamicTracking\n        )\n      } else {\n        // Legacy Prerender\n        throwToInterruptStaticGeneration(expression, workStore, prerenderStore)\n      }\n    },\n  })\n\n  CachedSearchParams.set(workStore, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction makeUntrackedExoticSearchParams(\n  underlyingSearchParams: SearchParams,\n  store: WorkStore\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  // We don't use makeResolvedReactPromise here because searchParams\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(underlyingSearchParams)\n  CachedSearchParams.set(underlyingSearchParams, promise)\n\n  Object.keys(underlyingSearchParams).forEach((prop) => {\n    switch (prop) {\n      // Object prototype\n      case 'hasOwnProperty':\n      case 'isPrototypeOf':\n      case 'propertyIsEnumerable':\n      case 'toString':\n      case 'valueOf':\n      case 'toLocaleString':\n\n      // Promise prototype\n      // fallthrough\n      case 'then':\n      case 'catch':\n      case 'finally':\n\n      // React Promise extension\n      // fallthrough\n      case 'status':\n\n      // Common tested properties\n      // fallthrough\n      case 'toJSON':\n      case '$$typeof':\n      case '__esModule': {\n        // These properties cannot be shadowed because they need to be the\n        // true underlying value for Promises to work correctly at runtime\n        break\n      }\n      default: {\n        Object.defineProperty(promise, prop, {\n          get() {\n            const workUnitStore = workUnitAsyncStorage.getStore()\n            trackDynamicDataInDynamicRender(store, workUnitStore)\n            return underlyingSearchParams[prop]\n          },\n          set(value) {\n            Object.defineProperty(promise, prop, {\n              value,\n              writable: true,\n              enumerable: true,\n            })\n          },\n          enumerable: true,\n          configurable: true,\n        })\n      }\n    }\n  })\n\n  return promise\n}\n\nfunction makeDynamicallyTrackedExoticSearchParamsWithDevWarnings(\n  underlyingSearchParams: SearchParams,\n  store: WorkStore\n): Promise<SearchParams> {\n  const cachedSearchParams = CachedSearchParams.get(underlyingSearchParams)\n  if (cachedSearchParams) {\n    return cachedSearchParams\n  }\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n\n  // We have an unfortunate sequence of events that requires this initialization logic. We want to instrument the underlying\n  // searchParams object to detect if you are accessing values in dev. This is used for warnings and for things like the static prerender\n  // indicator. However when we pass this proxy to our Promise.resolve() below the VM checks if the resolved value is a promise by looking\n  // at the `.then` property. To our dynamic tracking logic this is indistinguishable from a `then` searchParam and so we would normally trigger\n  // dynamic tracking. However we know that this .then is not real dynamic access, it's just how thenables resolve in sequence. So we introduce\n  // this initialization concept so we omit the dynamic check until after we've constructed our resolved promise.\n  let promiseInitialized = false\n  const proxiedUnderlying = new Proxy(underlyingSearchParams, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string' && promiseInitialized) {\n        if (store.dynamicShouldError) {\n          const expression = describeStringPropertyAccess('searchParams', prop)\n          throwWithStaticGenerationBailoutErrorWithDynamicError(\n            store.route,\n            expression\n          )\n        }\n        const workUnitStore = workUnitAsyncStorage.getStore()\n        trackDynamicDataInDynamicRender(store, workUnitStore)\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    has(target, prop) {\n      if (typeof prop === 'string') {\n        if (store.dynamicShouldError) {\n          const expression = describeHasCheckingStringProperty(\n            'searchParams',\n            prop\n          )\n          throwWithStaticGenerationBailoutErrorWithDynamicError(\n            store.route,\n            expression\n          )\n        }\n      }\n      return Reflect.has(target, prop)\n    },\n    ownKeys(target) {\n      if (store.dynamicShouldError) {\n        const expression =\n          '`{...searchParams}`, `Object.keys(searchParams)`, or similar'\n        throwWithStaticGenerationBailoutErrorWithDynamicError(\n          store.route,\n          expression\n        )\n      }\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  // We don't use makeResolvedReactPromise here because searchParams\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = new Promise<SearchParams>((resolve) =>\n    scheduleImmediate(() => resolve(underlyingSearchParams))\n  )\n  promise.then(() => {\n    promiseInitialized = true\n  })\n\n  Object.keys(underlyingSearchParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n      unproxiedProperties.push(prop)\n    } else {\n      proxiedProperties.add(prop)\n      Object.defineProperty(promise, prop, {\n        get() {\n          return proxiedUnderlying[prop]\n        },\n        set(newValue) {\n          Object.defineProperty(promise, prop, {\n            value: newValue,\n            writable: true,\n            enumerable: true,\n          })\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (prop === 'then' && store.dynamicShouldError) {\n        const expression = '`searchParams.then`'\n        throwWithStaticGenerationBailoutErrorWithDynamicError(\n          store.route,\n          expression\n        )\n      }\n      if (typeof prop === 'string') {\n        if (\n          !wellKnownProperties.has(prop) &&\n          (proxiedProperties.has(prop) ||\n            // We are accessing a property that doesn't exist on the promise nor\n            // the underlying searchParams.\n            Reflect.has(target, prop) === false)\n        ) {\n          const expression = describeStringPropertyAccess('searchParams', prop)\n          syncIODev(store.route, expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    set(target, prop, value, receiver) {\n      if (typeof prop === 'string') {\n        proxiedProperties.delete(prop)\n      }\n      return Reflect.set(target, prop, value, receiver)\n    },\n    has(target, prop) {\n      if (typeof prop === 'string') {\n        if (\n          !wellKnownProperties.has(prop) &&\n          (proxiedProperties.has(prop) ||\n            // We are accessing a property that doesn't exist on the promise nor\n            // the underlying searchParams.\n            Reflect.has(target, prop) === false)\n        ) {\n          const expression = describeHasCheckingStringProperty(\n            'searchParams',\n            prop\n          )\n          syncIODev(store.route, expression)\n        }\n      }\n      return Reflect.has(target, prop)\n    },\n    ownKeys(target) {\n      const expression = '`Object.keys(searchParams)` or similar'\n      syncIODev(store.route, expression, unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedSearchParams.set(underlyingSearchParams, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction syncIODev(\n  route: string | undefined,\n  expression: string,\n  missingProperties?: Array<string>\n) {\n  // In all cases we warn normally\n  if (missingProperties && missingProperties.length > 0) {\n    warnForIncompleteEnumeration(route, expression, missingProperties)\n  } else {\n    warnForSyncAccess(route, expression)\n  }\n\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (\n    workUnitStore &&\n    workUnitStore.type === 'request' &&\n    workUnitStore.prerenderPhase === true\n  ) {\n    // When we're rendering dynamically in dev we need to advance out of the\n    // Prerender environment when we read Request data synchronously\n    const requestStore = workUnitStore\n    trackSynchronousRequestDataAccessInDev(requestStore)\n  }\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(createSearchAccessError)\n\nconst warnForIncompleteEnumeration = process.env\n  .__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(\n      createIncompleteEnumerationError\n    )\n\nfunction createSearchAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`searchParams\\` should be awaited before using its properties. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction createIncompleteEnumerationError(\n  route: string | undefined,\n  expression: string,\n  missingProperties: Array<string>\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`searchParams\\` should be awaited before using its properties. ` +\n      `The following properties were not available through enumeration ` +\n      `because they conflict with builtin or well-known property names: ` +\n      `${describeListOfPropertyNames(missingProperties)}. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction describeListOfPropertyNames(properties: Array<string>) {\n  switch (properties.length) {\n    case 0:\n      throw new InvariantError(\n        'Expected describeListOfPropertyNames to be called with a non-empty list of strings.'\n      )\n    case 1:\n      return `\\`${properties[0]}\\``\n    case 2:\n      return `\\`${properties[0]}\\` and \\`${properties[1]}\\``\n    default: {\n      let description = ''\n      for (let i = 0; i < properties.length - 1; i++) {\n        description += `\\`${properties[i]}\\`, `\n      }\n      description += `, and \\`${properties[properties.length - 1]}\\``\n      return description\n    }\n  }\n}\n"],"names":["ReflectAdapter","abortAndThrowOnSynchronousRequestDataAccess","throwToInterruptStaticGeneration","postponeWithTracking","trackDynamicDataInDynamicRender","annotateDynamicAccess","trackSynchronousRequestDataAccessInDev","workUnitAsyncStorage","InvariantError","makeHangingPromise","createDedupedByCallsiteServerErrorLoggerDev","describeStringPropertyAccess","describeHasCheckingStringProperty","throwWithStaticGenerationBailoutErrorWithDynamicError","wellKnownProperties","scheduleImmediate","createSearchParamsFromClient","underlyingSearchParams","workStore","workUnitStore","getStore","type","createPrerenderSearchParams","createRenderSearchParams","createServerSearchParamsForMetadata","createServerSearchParamsForServerPage","createPrerenderSearchParamsForClientPage","forceStatic","Promise","resolve","prerenderStore","renderSignal","makeAbortingExoticSearchParams","route","makeErroringExoticSearchParams","process","env","NODE_ENV","isPrefetchRequest","makeDynamicallyTrackedExoticSearchParamsWithDevWarnings","makeUntrackedExoticSearchParams","CachedSearchParams","WeakMap","cachedSearchParams","get","promise","proxiedPromise","Proxy","target","prop","receiver","Object","hasOwn","expression","error","createSearchAccessError","has","ownKeys","set","dynamicShouldError","dynamicTracking","store","keys","forEach","defineProperty","value","writable","enumerable","configurable","proxiedProperties","Set","unproxiedProperties","promiseInitialized","proxiedUnderlying","Reflect","then","push","add","newValue","syncIODev","delete","missingProperties","length","warnForIncompleteEnumeration","warnForSyncAccess","prerenderPhase","requestStore","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","createIncompleteEnumerationError","prefix","Error","describeListOfPropertyNames","properties","description","i"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1548, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/node_modules/next/dist/src/server/request/params.ts"],"sourcesContent":["import type { WorkStore } from '../app-render/work-async-storage.external'\nimport type { FallbackRouteParams } from './fallback-params'\n\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\nimport {\n  abortAndThrowOnSynchronousRequestDataAccess,\n  throwToInterruptStaticGeneration,\n  postponeWithTracking,\n  trackSynchronousRequestDataAccessInDev,\n} from '../app-render/dynamic-rendering'\n\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStore,\n  type PrerenderStorePPR,\n  type PrerenderStoreLegacy,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { describeStringPropertyAccess, wellKnownProperties } from './utils'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-logger'\nimport { scheduleImmediate } from '../../lib/scheduler'\n\nexport type Params = Record<string, string | Array<string> | undefined>\n\n/**\n * In this version of Next.js the `params` prop passed to Layouts, Pages, and other Segments is a Promise.\n * However to facilitate migration to this new Promise type you can currently still access params directly on the Promise instance passed to these Segments.\n * The `UnsafeUnwrappedParams` type is available if you need to temporarily access the underlying params without first awaiting or `use`ing the Promise.\n *\n * In a future version of Next.js the `params` prop will be a plain Promise and this type will be removed.\n *\n * Typically instances of `params` can be updated automatically to be treated as a Promise by a codemod published alongside this Next.js version however if you\n * have not yet run the codemod of the codemod cannot detect certain instances of `params` usage you should first try to refactor your code to await `params`.\n *\n * If refactoring is not possible but you still want to be able to access params directly without typescript errors you can cast the params Promise to this type\n *\n * ```tsx\n * type Props = { params: Promise<{ id: string }>}\n *\n * export default async function Layout(props: Props) {\n *  const directParams = (props.params as unknown as UnsafeUnwrappedParams<typeof props.params>)\n *  return ...\n * }\n * ```\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedParams<P> =\n  P extends Promise<infer U> ? Omit<U, 'then' | 'status' | 'value'> : never\n\nexport function createParamsFromClient(\n  underlyingParams: Params,\n  workStore: WorkStore\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderParams(underlyingParams, workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderParams(underlyingParams, workStore)\n}\n\n// generateMetadata always runs in RSC context so it is equivalent to a Server Page Component\nexport type CreateServerParamsForMetadata = typeof createServerParamsForMetadata\nexport const createServerParamsForMetadata = createServerParamsForServerSegment\n\n// routes always runs in RSC context so it is equivalent to a Server Page Component\nexport function createServerParamsForRoute(\n  underlyingParams: Params,\n  workStore: WorkStore\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderParams(underlyingParams, workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderParams(underlyingParams, workStore)\n}\n\nexport function createServerParamsForServerSegment(\n  underlyingParams: Params,\n  workStore: WorkStore\n): Promise<Params> {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (workUnitStore) {\n    switch (workUnitStore.type) {\n      case 'prerender':\n      case 'prerender-ppr':\n      case 'prerender-legacy':\n        return createPrerenderParams(underlyingParams, workStore, workUnitStore)\n      default:\n      // fallthrough\n    }\n  }\n  return createRenderParams(underlyingParams, workStore)\n}\n\nexport function createPrerenderParamsForClientSegment(\n  underlyingParams: Params,\n  workStore: WorkStore\n): Promise<Params> {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (prerenderStore && prerenderStore.type === 'prerender') {\n    const fallbackParams = workStore.fallbackRouteParams\n    if (fallbackParams) {\n      for (let key in underlyingParams) {\n        if (fallbackParams.has(key)) {\n          // This params object has one of more fallback params so we need to consider\n          // the awaiting of this params object \"dynamic\". Since we are in dynamicIO mode\n          // we encode this as a promise that never resolves\n          return makeHangingPromise(prerenderStore.renderSignal, '`params`')\n        }\n      }\n    }\n  }\n  // We're prerendering in a mode that does not abort. We resolve the promise without\n  // any tracking because we're just transporting a value from server to client where the tracking\n  // will be applied.\n  return Promise.resolve(underlyingParams)\n}\n\nfunction createPrerenderParams(\n  underlyingParams: Params,\n  workStore: WorkStore,\n  prerenderStore: PrerenderStore\n): Promise<Params> {\n  const fallbackParams = workStore.fallbackRouteParams\n  if (fallbackParams) {\n    let hasSomeFallbackParams = false\n    for (const key in underlyingParams) {\n      if (fallbackParams.has(key)) {\n        hasSomeFallbackParams = true\n        break\n      }\n    }\n\n    if (hasSomeFallbackParams) {\n      // params need to be treated as dynamic because we have at least one fallback param\n      if (prerenderStore.type === 'prerender') {\n        // We are in a dynamicIO (PPR or otherwise) prerender\n        return makeAbortingExoticParams(\n          underlyingParams,\n          workStore.route,\n          prerenderStore\n        )\n      }\n      // remaining cases are prender-ppr and prerender-legacy\n      // We aren't in a dynamicIO prerender but we do have fallback params at this\n      // level so we need to make an erroring exotic params object which will postpone\n      // if you access the fallback params\n      return makeErroringExoticParams(\n        underlyingParams,\n        fallbackParams,\n        workStore,\n        prerenderStore\n      )\n    }\n  }\n\n  // We don't have any fallback params so we have an entirely static safe params object\n  return makeUntrackedExoticParams(underlyingParams)\n}\n\nfunction createRenderParams(\n  underlyingParams: Params,\n  workStore: WorkStore\n): Promise<Params> {\n  if (process.env.NODE_ENV === 'development' && !workStore.isPrefetchRequest) {\n    return makeDynamicallyTrackedExoticParamsWithDevWarnings(\n      underlyingParams,\n      workStore\n    )\n  } else {\n    return makeUntrackedExoticParams(underlyingParams)\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedParams = new WeakMap<CacheLifetime, Promise<Params>>()\n\nfunction makeAbortingExoticParams(\n  underlyingParams: Params,\n  route: string,\n  prerenderStore: PrerenderStoreModern\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const promise = makeHangingPromise<Params>(\n    prerenderStore.renderSignal,\n    '`params`'\n  )\n  CachedParams.set(underlyingParams, promise)\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n    } else {\n      Object.defineProperty(promise, prop, {\n        get() {\n          const expression = describeStringPropertyAccess('params', prop)\n          const error = createParamsAccessError(route, expression)\n          abortAndThrowOnSynchronousRequestDataAccess(\n            route,\n            expression,\n            error,\n            prerenderStore\n          )\n        },\n        set(newValue) {\n          Object.defineProperty(promise, prop, {\n            value: newValue,\n            writable: true,\n            enumerable: true,\n          })\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  })\n\n  return promise\n}\n\nfunction makeErroringExoticParams(\n  underlyingParams: Params,\n  fallbackParams: FallbackRouteParams,\n  workStore: WorkStore,\n  prerenderStore: PrerenderStorePPR | PrerenderStoreLegacy\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const augmentedUnderlying = { ...underlyingParams }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(augmentedUnderlying)\n  CachedParams.set(underlyingParams, promise)\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n    } else {\n      if (fallbackParams.has(prop)) {\n        Object.defineProperty(augmentedUnderlying, prop, {\n          get() {\n            const expression = describeStringPropertyAccess('params', prop)\n            // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n            // for params is only dynamic when we're generating a fallback shell\n            // and even when `dynamic = \"error\"` we still support generating dynamic\n            // fallback shells\n            // TODO remove this comment when dynamicIO is the default since there\n            // will be no `dynamic = \"error\"`\n            if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no dynamicIO)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          },\n          enumerable: true,\n        })\n        Object.defineProperty(promise, prop, {\n          get() {\n            const expression = describeStringPropertyAccess('params', prop)\n            // In most dynamic APIs we also throw if `dynamic = \"error\"` however\n            // for params is only dynamic when we're generating a fallback shell\n            // and even when `dynamic = \"error\"` we still support generating dynamic\n            // fallback shells\n            // TODO remove this comment when dynamicIO is the default since there\n            // will be no `dynamic = \"error\"`\n            if (prerenderStore.type === 'prerender-ppr') {\n              // PPR Prerender (no dynamicIO)\n              postponeWithTracking(\n                workStore.route,\n                expression,\n                prerenderStore.dynamicTracking\n              )\n            } else {\n              // Legacy Prerender\n              throwToInterruptStaticGeneration(\n                expression,\n                workStore,\n                prerenderStore\n              )\n            }\n          },\n          set(newValue) {\n            Object.defineProperty(promise, prop, {\n              value: newValue,\n              writable: true,\n              enumerable: true,\n            })\n          },\n          enumerable: true,\n          configurable: true,\n        })\n      } else {\n        ;(promise as any)[prop] = underlyingParams[prop]\n      }\n    }\n  })\n\n  return promise\n}\n\nfunction makeUntrackedExoticParams(underlyingParams: Params): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = Promise.resolve(underlyingParams)\n  CachedParams.set(underlyingParams, promise)\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n    } else {\n      ;(promise as any)[prop] = underlyingParams[prop]\n    }\n  })\n\n  return promise\n}\n\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(\n  underlyingParams: Params,\n  store: WorkStore\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  // We don't use makeResolvedReactPromise here because params\n  // supports copying with spread and we don't want to unnecessarily\n  // instrument the promise with spreadable properties of ReactPromise.\n  const promise = new Promise<Params>((resolve) =>\n    scheduleImmediate(() => resolve(underlyingParams))\n  )\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    if (wellKnownProperties.has(prop)) {\n      // These properties cannot be shadowed because they need to be the\n      // true underlying value for Promises to work correctly at runtime\n      unproxiedProperties.push(prop)\n    } else {\n      proxiedProperties.add(prop)\n      ;(promise as any)[prop] = underlyingParams[prop]\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string') {\n        if (\n          // We are accessing a property that was proxied to the promise instance\n          proxiedProperties.has(prop)\n        ) {\n          const expression = describeStringPropertyAccess('params', prop)\n          syncIODev(store.route, expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    set(target, prop, value, receiver) {\n      if (typeof prop === 'string') {\n        proxiedProperties.delete(prop)\n      }\n      return ReflectAdapter.set(target, prop, value, receiver)\n    },\n    ownKeys(target) {\n      const expression = '`...params` or similar expression'\n      syncIODev(store.route, expression, unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedParams.set(underlyingParams, proxiedPromise)\n  return proxiedPromise\n}\n\nfunction syncIODev(\n  route: string | undefined,\n  expression: string,\n  missingProperties?: Array<string>\n) {\n  const workUnitStore = workUnitAsyncStorage.getStore()\n  if (\n    workUnitStore &&\n    workUnitStore.type === 'request' &&\n    workUnitStore.prerenderPhase === true\n  ) {\n    // When we're rendering dynamically in dev we need to advance out of the\n    // Prerender environment when we read Request data synchronously\n    const requestStore = workUnitStore\n    trackSynchronousRequestDataAccessInDev(requestStore)\n  }\n  // In all cases we warn normally\n  if (missingProperties && missingProperties.length > 0) {\n    warnForIncompleteEnumeration(route, expression, missingProperties)\n  } else {\n    warnForSyncAccess(route, expression)\n  }\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(createParamsAccessError)\n\nconst warnForIncompleteEnumeration = process.env\n  .__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(\n      createIncompleteEnumerationError\n    )\n\nfunction createParamsAccessError(\n  route: string | undefined,\n  expression: string\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`params\\` should be awaited before using its properties. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction createIncompleteEnumerationError(\n  route: string | undefined,\n  expression: string,\n  missingProperties: Array<string>\n) {\n  const prefix = route ? `Route \"${route}\" ` : 'This route '\n  return new Error(\n    `${prefix}used ${expression}. ` +\n      `\\`params\\` should be awaited before using its properties. ` +\n      `The following properties were not available through enumeration ` +\n      `because they conflict with builtin property names: ` +\n      `${describeListOfPropertyNames(missingProperties)}. ` +\n      `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n  )\n}\n\nfunction describeListOfPropertyNames(properties: Array<string>) {\n  switch (properties.length) {\n    case 0:\n      throw new InvariantError(\n        'Expected describeListOfPropertyNames to be called with a non-empty list of strings.'\n      )\n    case 1:\n      return `\\`${properties[0]}\\``\n    case 2:\n      return `\\`${properties[0]}\\` and \\`${properties[1]}\\``\n    default: {\n      let description = ''\n      for (let i = 0; i < properties.length - 1; i++) {\n        description += `\\`${properties[i]}\\`, `\n      }\n      description += `, and \\`${properties[properties.length - 1]}\\``\n      return description\n    }\n  }\n}\n"],"names":["ReflectAdapter","abortAndThrowOnSynchronousRequestDataAccess","throwToInterruptStaticGeneration","postponeWithTracking","trackSynchronousRequestDataAccessInDev","workUnitAsyncStorage","InvariantError","describeStringPropertyAccess","wellKnownProperties","makeHangingPromise","createDedupedByCallsiteServerErrorLoggerDev","scheduleImmediate","createParamsFromClient","underlyingParams","workStore","workUnitStore","getStore","type","createPrerenderParams","createRenderParams","createServerParamsForMetadata","createServerParamsForServerSegment","createServerParamsForRoute","createPrerenderParamsForClientSegment","prerenderStore","fallbackParams","fallbackRouteParams","key","has","renderSignal","Promise","resolve","hasSomeFallbackParams","makeAbortingExoticParams","route","makeErroringExoticParams","makeUntrackedExoticParams","process","env","NODE_ENV","isPrefetchRequest","makeDynamicallyTrackedExoticParamsWithDevWarnings","CachedParams","WeakMap","cachedParams","get","promise","set","Object","keys","forEach","prop","defineProperty","expression","error","createParamsAccessError","newValue","value","writable","enumerable","configurable","augmentedUnderlying","dynamicTracking","store","proxiedProperties","Set","unproxiedProperties","push","add","proxiedPromise","Proxy","target","receiver","syncIODev","delete","ownKeys","Reflect","missingProperties","prerenderPhase","requestStore","length","warnForIncompleteEnumeration","warnForSyncAccess","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","createIncompleteEnumerationError","prefix","Error","describeListOfPropertyNames","properties","description","i"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1881, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}